// generated by github.com/moontrade/dtc-go/codegen/go at 2022-03-14 08:04:12.929995 +0800 WITA m=+0.027582959

package sc

import (
	"github.com/moontrade/dtc-go/message"
)

const SCConfigurationSynchronizationSize = 31

//     Size                             uint16  = SCConfigurationSynchronizationSize  (31)
//     Type                             uint16  = SC_CONFIGURATION_SYNCHRONIZATION  (10109)
//     BaseSize                         uint16  = SCConfigurationSynchronizationSize  (31)
//     MessageID                        uint32  = 0
//     CurrentInboundSequenceNumber     uint32  = 0
//     CurrentOutboundSequenceNumber    uint32  = 0
//     CurrentInternalOrderID           uint64  = 0
//     IsSnapshot                       bool    = false
//     LastReceivedExecutionIdentifier  string  = ""
var _SCConfigurationSynchronizationDefault = []byte{31, 0, 125, 39, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

type SCConfigurationSynchronization struct {
	message.VLS
}

type SCConfigurationSynchronizationBuilder struct {
	message.VLSBuilder
}

type SCConfigurationSynchronizationPointer struct {
	message.VLSPointer
}

type SCConfigurationSynchronizationPointerBuilder struct {
	message.VLSPointerBuilder
}

func NewSCConfigurationSynchronizationFrom(b []byte) SCConfigurationSynchronization {
	return SCConfigurationSynchronization{VLS: message.NewVLS(b)}
}

func WrapSCConfigurationSynchronization(b []byte) SCConfigurationSynchronization {
	return SCConfigurationSynchronization{VLS: message.WrapVLS(b)}
}

func NewSCConfigurationSynchronization() SCConfigurationSynchronizationBuilder {
	return SCConfigurationSynchronizationBuilder{message.NewVLSBuilder(_SCConfigurationSynchronizationDefault)}
}

func AllocSCConfigurationSynchronization() SCConfigurationSynchronizationPointerBuilder {
	return SCConfigurationSynchronizationPointerBuilder{message.AllocVLSBuilder(_SCConfigurationSynchronizationDefault)}
}

func AllocSCConfigurationSynchronizationFrom(b []byte) SCConfigurationSynchronizationPointer {
	return SCConfigurationSynchronizationPointer{VLSPointer: message.AllocVLS(b)}
}

// Clear
//     Size                             uint16  = SCConfigurationSynchronizationSize  (31)
//     Type                             uint16  = SC_CONFIGURATION_SYNCHRONIZATION  (10109)
//     BaseSize                         uint16  = SCConfigurationSynchronizationSize  (31)
//     MessageID                        uint32  = 0
//     CurrentInboundSequenceNumber     uint32  = 0
//     CurrentOutboundSequenceNumber    uint32  = 0
//     CurrentInternalOrderID           uint64  = 0
//     IsSnapshot                       bool    = false
//     LastReceivedExecutionIdentifier  string  = ""
func (m SCConfigurationSynchronizationBuilder) Clear() {
	m.Unsafe().SetBytes(0, _SCConfigurationSynchronizationDefault)
}

// Clear
//     Size                             uint16  = SCConfigurationSynchronizationSize  (31)
//     Type                             uint16  = SC_CONFIGURATION_SYNCHRONIZATION  (10109)
//     BaseSize                         uint16  = SCConfigurationSynchronizationSize  (31)
//     MessageID                        uint32  = 0
//     CurrentInboundSequenceNumber     uint32  = 0
//     CurrentOutboundSequenceNumber    uint32  = 0
//     CurrentInternalOrderID           uint64  = 0
//     IsSnapshot                       bool    = false
//     LastReceivedExecutionIdentifier  string  = ""
func (m SCConfigurationSynchronizationPointerBuilder) Clear() {
	m.Ptr.SetBytes(0, _SCConfigurationSynchronizationDefault)
}

// ToBuilder
func (m SCConfigurationSynchronization) ToBuilder() SCConfigurationSynchronizationBuilder {
	return SCConfigurationSynchronizationBuilder{m.VLS.ToBuilder()}
}

// ToBuilder
func (m SCConfigurationSynchronizationPointer) ToBuilder() SCConfigurationSynchronizationPointerBuilder {
	return SCConfigurationSynchronizationPointerBuilder{m.VLSPointer.ToBuilder()}
}

// Finish
func (m SCConfigurationSynchronizationBuilder) Finish() SCConfigurationSynchronization {
	return SCConfigurationSynchronization{m.VLSBuilder.Finish()}
}

// Finish
func (m *SCConfigurationSynchronizationPointerBuilder) Finish() SCConfigurationSynchronizationPointer {
	return SCConfigurationSynchronizationPointer{m.VLSPointerBuilder.Finish()}
}

// MessageID
func (m SCConfigurationSynchronization) MessageID() uint32 {
	return message.Uint32VLS(m.Unsafe(), 10, 6)
}

// MessageID
func (m SCConfigurationSynchronizationBuilder) MessageID() uint32 {
	return message.Uint32VLS(m.Unsafe(), 10, 6)
}

// MessageID
func (m SCConfigurationSynchronizationPointer) MessageID() uint32 {
	return message.Uint32VLS(m.Ptr, 10, 6)
}

// MessageID
func (m SCConfigurationSynchronizationPointerBuilder) MessageID() uint32 {
	return message.Uint32VLS(m.Ptr, 10, 6)
}

// CurrentInboundSequenceNumber
func (m SCConfigurationSynchronization) CurrentInboundSequenceNumber() uint32 {
	return message.Uint32VLS(m.Unsafe(), 14, 10)
}

// CurrentInboundSequenceNumber
func (m SCConfigurationSynchronizationBuilder) CurrentInboundSequenceNumber() uint32 {
	return message.Uint32VLS(m.Unsafe(), 14, 10)
}

// CurrentInboundSequenceNumber
func (m SCConfigurationSynchronizationPointer) CurrentInboundSequenceNumber() uint32 {
	return message.Uint32VLS(m.Ptr, 14, 10)
}

// CurrentInboundSequenceNumber
func (m SCConfigurationSynchronizationPointerBuilder) CurrentInboundSequenceNumber() uint32 {
	return message.Uint32VLS(m.Ptr, 14, 10)
}

// CurrentOutboundSequenceNumber
func (m SCConfigurationSynchronization) CurrentOutboundSequenceNumber() uint32 {
	return message.Uint32VLS(m.Unsafe(), 18, 14)
}

// CurrentOutboundSequenceNumber
func (m SCConfigurationSynchronizationBuilder) CurrentOutboundSequenceNumber() uint32 {
	return message.Uint32VLS(m.Unsafe(), 18, 14)
}

// CurrentOutboundSequenceNumber
func (m SCConfigurationSynchronizationPointer) CurrentOutboundSequenceNumber() uint32 {
	return message.Uint32VLS(m.Ptr, 18, 14)
}

// CurrentOutboundSequenceNumber
func (m SCConfigurationSynchronizationPointerBuilder) CurrentOutboundSequenceNumber() uint32 {
	return message.Uint32VLS(m.Ptr, 18, 14)
}

// CurrentInternalOrderID
func (m SCConfigurationSynchronization) CurrentInternalOrderID() uint64 {
	return message.Uint64VLS(m.Unsafe(), 26, 18)
}

// CurrentInternalOrderID
func (m SCConfigurationSynchronizationBuilder) CurrentInternalOrderID() uint64 {
	return message.Uint64VLS(m.Unsafe(), 26, 18)
}

// CurrentInternalOrderID
func (m SCConfigurationSynchronizationPointer) CurrentInternalOrderID() uint64 {
	return message.Uint64VLS(m.Ptr, 26, 18)
}

// CurrentInternalOrderID
func (m SCConfigurationSynchronizationPointerBuilder) CurrentInternalOrderID() uint64 {
	return message.Uint64VLS(m.Ptr, 26, 18)
}

// IsSnapshot
func (m SCConfigurationSynchronization) IsSnapshot() bool {
	return message.BoolVLS(m.Unsafe(), 27, 26)
}

// IsSnapshot
func (m SCConfigurationSynchronizationBuilder) IsSnapshot() bool {
	return message.BoolVLS(m.Unsafe(), 27, 26)
}

// IsSnapshot
func (m SCConfigurationSynchronizationPointer) IsSnapshot() bool {
	return message.BoolVLS(m.Ptr, 27, 26)
}

// IsSnapshot
func (m SCConfigurationSynchronizationPointerBuilder) IsSnapshot() bool {
	return message.BoolVLS(m.Ptr, 27, 26)
}

// LastReceivedExecutionIdentifier
func (m SCConfigurationSynchronization) LastReceivedExecutionIdentifier() string {
	return message.StringVLS(m.Unsafe(), 31, 27)
}

// LastReceivedExecutionIdentifier
func (m SCConfigurationSynchronizationBuilder) LastReceivedExecutionIdentifier() string {
	return message.StringVLS(m.Unsafe(), 31, 27)
}

// LastReceivedExecutionIdentifier
func (m SCConfigurationSynchronizationPointer) LastReceivedExecutionIdentifier() string {
	return message.StringVLS(m.Ptr, 31, 27)
}

// LastReceivedExecutionIdentifier
func (m SCConfigurationSynchronizationPointerBuilder) LastReceivedExecutionIdentifier() string {
	return message.StringVLS(m.Ptr, 31, 27)
}

// SetMessageID
func (m SCConfigurationSynchronizationBuilder) SetMessageID(value uint32) {
	message.SetUint32VLS(m.Unsafe(), 10, 6, value)
}

// SetMessageID
func (m SCConfigurationSynchronizationPointerBuilder) SetMessageID(value uint32) {
	message.SetUint32VLS(m.Ptr, 10, 6, value)
}

// SetCurrentInboundSequenceNumber
func (m SCConfigurationSynchronizationBuilder) SetCurrentInboundSequenceNumber(value uint32) {
	message.SetUint32VLS(m.Unsafe(), 14, 10, value)
}

// SetCurrentInboundSequenceNumber
func (m SCConfigurationSynchronizationPointerBuilder) SetCurrentInboundSequenceNumber(value uint32) {
	message.SetUint32VLS(m.Ptr, 14, 10, value)
}

// SetCurrentOutboundSequenceNumber
func (m SCConfigurationSynchronizationBuilder) SetCurrentOutboundSequenceNumber(value uint32) {
	message.SetUint32VLS(m.Unsafe(), 18, 14, value)
}

// SetCurrentOutboundSequenceNumber
func (m SCConfigurationSynchronizationPointerBuilder) SetCurrentOutboundSequenceNumber(value uint32) {
	message.SetUint32VLS(m.Ptr, 18, 14, value)
}

// SetCurrentInternalOrderID
func (m SCConfigurationSynchronizationBuilder) SetCurrentInternalOrderID(value uint64) {
	message.SetUint64VLS(m.Unsafe(), 26, 18, value)
}

// SetCurrentInternalOrderID
func (m SCConfigurationSynchronizationPointerBuilder) SetCurrentInternalOrderID(value uint64) {
	message.SetUint64VLS(m.Ptr, 26, 18, value)
}

// SetIsSnapshot
func (m SCConfigurationSynchronizationBuilder) SetIsSnapshot(value bool) {
	message.SetBoolVLS(m.Unsafe(), 27, 26, value)
}

// SetIsSnapshot
func (m SCConfigurationSynchronizationPointerBuilder) SetIsSnapshot(value bool) {
	message.SetBoolVLS(m.Ptr, 27, 26, value)
}

// SetLastReceivedExecutionIdentifier
func (m *SCConfigurationSynchronizationBuilder) SetLastReceivedExecutionIdentifier(value string) {
	message.SetStringVLS(&m.VLSBuilder, 31, 27, value)
}

// SetLastReceivedExecutionIdentifier
func (m *SCConfigurationSynchronizationPointerBuilder) SetLastReceivedExecutionIdentifier(value string) {
	message.SetStringVLSPointer(&m.VLSPointerBuilder, 31, 27, value)
}
