#include <iostream>
#include "DTCProtocol.h"
#include "DTCProtocolVLS.h"
#include "DTCProtocol_NonStandard.h"

int main() {
    std::cout << "DTC::s_EncodingRequest" << " = " << sizeof(DTC::s_EncodingRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_EncodingRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_EncodingRequest, Type) << std::endl;
    std::cout << "	ProtocolVersion" << " = " << offsetof(DTC::s_EncodingRequest, ProtocolVersion) << std::endl;
    std::cout << "	Encoding" << " = " << offsetof(DTC::s_EncodingRequest, Encoding) << std::endl;
    std::cout << "	ProtocolType" << " = " << offsetof(DTC::s_EncodingRequest, ProtocolType) << std::endl;
    std::cout << "DTC::s_EncodingResponse" << " = " << sizeof(DTC::s_EncodingResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_EncodingResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_EncodingResponse, Type) << std::endl;
    std::cout << "	ProtocolVersion" << " = " << offsetof(DTC::s_EncodingResponse, ProtocolVersion) << std::endl;
    std::cout << "	Encoding" << " = " << offsetof(DTC::s_EncodingResponse, Encoding) << std::endl;
    std::cout << "	ProtocolType" << " = " << offsetof(DTC::s_EncodingResponse, ProtocolType) << std::endl;
    std::cout << "DTC::s_LogonRequest" << " = " << sizeof(DTC::s_LogonRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_LogonRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_LogonRequest, Type) << std::endl;
    std::cout << "	ProtocolVersion" << " = " << offsetof(DTC::s_LogonRequest, ProtocolVersion) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC::s_LogonRequest, Username) << std::endl;
    std::cout << "	Password" << " = " << offsetof(DTC::s_LogonRequest, Password) << std::endl;
    std::cout << "	GeneralTextData" << " = " << offsetof(DTC::s_LogonRequest, GeneralTextData) << std::endl;
    std::cout << "	Integer_1" << " = " << offsetof(DTC::s_LogonRequest, Integer_1) << std::endl;
    std::cout << "	Integer_2" << " = " << offsetof(DTC::s_LogonRequest, Integer_2) << std::endl;
    std::cout << "	HeartbeatIntervalInSeconds" << " = " << offsetof(DTC::s_LogonRequest, HeartbeatIntervalInSeconds) << std::endl;
    std::cout << "	Unused1" << " = " << offsetof(DTC::s_LogonRequest, Unused1) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_LogonRequest, TradeAccount) << std::endl;
    std::cout << "	HardwareIdentifier" << " = " << offsetof(DTC::s_LogonRequest, HardwareIdentifier) << std::endl;
    std::cout << "	ClientName" << " = " << offsetof(DTC::s_LogonRequest, ClientName) << std::endl;
    std::cout << "	MarketDataTransmissionInterval" << " = " << offsetof(DTC::s_LogonRequest, MarketDataTransmissionInterval) << std::endl;
    std::cout << "DTC::s_LogonResponse" << " = " << sizeof(DTC::s_LogonResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_LogonResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_LogonResponse, Type) << std::endl;
    std::cout << "	ProtocolVersion" << " = " << offsetof(DTC::s_LogonResponse, ProtocolVersion) << std::endl;
    std::cout << "	Result" << " = " << offsetof(DTC::s_LogonResponse, Result) << std::endl;
    std::cout << "	ResultText" << " = " << offsetof(DTC::s_LogonResponse, ResultText) << std::endl;
    std::cout << "	ReconnectAddress" << " = " << offsetof(DTC::s_LogonResponse, ReconnectAddress) << std::endl;
    std::cout << "	Integer_1" << " = " << offsetof(DTC::s_LogonResponse, Integer_1) << std::endl;
    std::cout << "	ServerName" << " = " << offsetof(DTC::s_LogonResponse, ServerName) << std::endl;
    std::cout << "	MarketDepthUpdatesBestBidAndAsk" << " = " << offsetof(DTC::s_LogonResponse, MarketDepthUpdatesBestBidAndAsk) << std::endl;
    std::cout << "	TradingIsSupported" << " = " << offsetof(DTC::s_LogonResponse, TradingIsSupported) << std::endl;
    std::cout << "	OCOOrdersSupported" << " = " << offsetof(DTC::s_LogonResponse, OCOOrdersSupported) << std::endl;
    std::cout << "	OrderCancelReplaceSupported" << " = " << offsetof(DTC::s_LogonResponse, OrderCancelReplaceSupported) << std::endl;
    std::cout << "	SymbolExchangeDelimiter" << " = " << offsetof(DTC::s_LogonResponse, SymbolExchangeDelimiter) << std::endl;
    std::cout << "	SecurityDefinitionsSupported" << " = " << offsetof(DTC::s_LogonResponse, SecurityDefinitionsSupported) << std::endl;
    std::cout << "	HistoricalPriceDataSupported" << " = " << offsetof(DTC::s_LogonResponse, HistoricalPriceDataSupported) << std::endl;
    std::cout << "	ResubscribeWhenMarketDataFeedAvailable" << " = " << offsetof(DTC::s_LogonResponse, ResubscribeWhenMarketDataFeedAvailable) << std::endl;
    std::cout << "	MarketDepthIsSupported" << " = " << offsetof(DTC::s_LogonResponse, MarketDepthIsSupported) << std::endl;
    std::cout << "	OneHistoricalPriceDataRequestPerConnection" << " = " << offsetof(DTC::s_LogonResponse, OneHistoricalPriceDataRequestPerConnection) << std::endl;
    std::cout << "	BracketOrdersSupported" << " = " << offsetof(DTC::s_LogonResponse, BracketOrdersSupported) << std::endl;
    std::cout << "	Unused_1" << " = " << offsetof(DTC::s_LogonResponse, Unused_1) << std::endl;
    std::cout << "	UsesMultiplePositionsPerSymbolAndTradeAccount" << " = " << offsetof(DTC::s_LogonResponse, UsesMultiplePositionsPerSymbolAndTradeAccount) << std::endl;
    std::cout << "	MarketDataSupported" << " = " << offsetof(DTC::s_LogonResponse, MarketDataSupported) << std::endl;
    std::cout << "DTC::s_Logoff" << " = " << sizeof(DTC::s_Logoff) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_Logoff, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_Logoff, Type) << std::endl;
    std::cout << "	Reason" << " = " << offsetof(DTC::s_Logoff, Reason) << std::endl;
    std::cout << "	DoNotReconnect" << " = " << offsetof(DTC::s_Logoff, DoNotReconnect) << std::endl;
    std::cout << "DTC::s_Heartbeat" << " = " << sizeof(DTC::s_Heartbeat) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_Heartbeat, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_Heartbeat, Type) << std::endl;
    std::cout << "	NumDroppedMessages" << " = " << offsetof(DTC::s_Heartbeat, NumDroppedMessages) << std::endl;
    std::cout << "	CurrentDateTime" << " = " << offsetof(DTC::s_Heartbeat, CurrentDateTime) << std::endl;
    std::cout << "DTC::s_MarketDataFeedStatus" << " = " << sizeof(DTC::s_MarketDataFeedStatus) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataFeedStatus, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataFeedStatus, Type) << std::endl;
    std::cout << "	Status" << " = " << offsetof(DTC::s_MarketDataFeedStatus, Status) << std::endl;
    std::cout << "DTC::s_MarketDataFeedSymbolStatus" << " = " << sizeof(DTC::s_MarketDataFeedSymbolStatus) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataFeedSymbolStatus, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataFeedSymbolStatus, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataFeedSymbolStatus, SymbolID) << std::endl;
    std::cout << "	Status" << " = " << offsetof(DTC::s_MarketDataFeedSymbolStatus, Status) << std::endl;
    std::cout << "DTC::s_TradingSymbolStatus" << " = " << sizeof(DTC::s_TradingSymbolStatus) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_TradingSymbolStatus, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_TradingSymbolStatus, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_TradingSymbolStatus, SymbolID) << std::endl;
    std::cout << "	Status" << " = " << offsetof(DTC::s_TradingSymbolStatus, Status) << std::endl;
    std::cout << "DTC::s_MarketDataRequest" << " = " << sizeof(DTC::s_MarketDataRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataRequest, Type) << std::endl;
    std::cout << "	RequestAction" << " = " << offsetof(DTC::s_MarketDataRequest, RequestAction) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataRequest, SymbolID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_MarketDataRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_MarketDataRequest, Exchange) << std::endl;
    std::cout << "	IntervalForSnapshotUpdatesInMilliseconds" << " = " << offsetof(DTC::s_MarketDataRequest, IntervalForSnapshotUpdatesInMilliseconds) << std::endl;
    std::cout << "DTC::s_MarketDepthRequest" << " = " << sizeof(DTC::s_MarketDepthRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDepthRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDepthRequest, Type) << std::endl;
    std::cout << "	RequestAction" << " = " << offsetof(DTC::s_MarketDepthRequest, RequestAction) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDepthRequest, SymbolID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_MarketDepthRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_MarketDepthRequest, Exchange) << std::endl;
    std::cout << "	NumLevels" << " = " << offsetof(DTC::s_MarketDepthRequest, NumLevels) << std::endl;
    std::cout << "DTC::s_MarketDataReject" << " = " << sizeof(DTC::s_MarketDataReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataReject, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataReject, SymbolID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_MarketDataReject, RejectText) << std::endl;
    std::cout << "DTC::s_MarketDataSnapshot" << " = " << sizeof(DTC::s_MarketDataSnapshot) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataSnapshot, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataSnapshot, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataSnapshot, SymbolID) << std::endl;
    std::cout << "	SessionSettlementPrice" << " = " << offsetof(DTC::s_MarketDataSnapshot, SessionSettlementPrice) << std::endl;
    std::cout << "	SessionOpenPrice" << " = " << offsetof(DTC::s_MarketDataSnapshot, SessionOpenPrice) << std::endl;
    std::cout << "	SessionHighPrice" << " = " << offsetof(DTC::s_MarketDataSnapshot, SessionHighPrice) << std::endl;
    std::cout << "	SessionLowPrice" << " = " << offsetof(DTC::s_MarketDataSnapshot, SessionLowPrice) << std::endl;
    std::cout << "	SessionVolume" << " = " << offsetof(DTC::s_MarketDataSnapshot, SessionVolume) << std::endl;
    std::cout << "	SessionNumTrades" << " = " << offsetof(DTC::s_MarketDataSnapshot, SessionNumTrades) << std::endl;
    std::cout << "	OpenInterest" << " = " << offsetof(DTC::s_MarketDataSnapshot, OpenInterest) << std::endl;
    std::cout << "	BidPrice" << " = " << offsetof(DTC::s_MarketDataSnapshot, BidPrice) << std::endl;
    std::cout << "	AskPrice" << " = " << offsetof(DTC::s_MarketDataSnapshot, AskPrice) << std::endl;
    std::cout << "	AskQuantity" << " = " << offsetof(DTC::s_MarketDataSnapshot, AskQuantity) << std::endl;
    std::cout << "	BidQuantity" << " = " << offsetof(DTC::s_MarketDataSnapshot, BidQuantity) << std::endl;
    std::cout << "	LastTradePrice" << " = " << offsetof(DTC::s_MarketDataSnapshot, LastTradePrice) << std::endl;
    std::cout << "	LastTradeVolume" << " = " << offsetof(DTC::s_MarketDataSnapshot, LastTradeVolume) << std::endl;
    std::cout << "	LastTradeDateTime" << " = " << offsetof(DTC::s_MarketDataSnapshot, LastTradeDateTime) << std::endl;
    std::cout << "	BidAskDateTime" << " = " << offsetof(DTC::s_MarketDataSnapshot, BidAskDateTime) << std::endl;
    std::cout << "	SessionSettlementDateTime" << " = " << offsetof(DTC::s_MarketDataSnapshot, SessionSettlementDateTime) << std::endl;
    std::cout << "	TradingSessionDate" << " = " << offsetof(DTC::s_MarketDataSnapshot, TradingSessionDate) << std::endl;
    std::cout << "	TradingStatus" << " = " << offsetof(DTC::s_MarketDataSnapshot, TradingStatus) << std::endl;
    std::cout << "	MarketDepthUpdateDateTime" << " = " << offsetof(DTC::s_MarketDataSnapshot, MarketDepthUpdateDateTime) << std::endl;
    std::cout << "DTC::s_MarketDepthSnapshotLevel" << " = " << sizeof(DTC::s_MarketDepthSnapshotLevel) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, SymbolID) << std::endl;
    std::cout << "	Side" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, Side) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, Price) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, Quantity) << std::endl;
    std::cout << "	Level" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, Level) << std::endl;
    std::cout << "	IsFirstMessageInBatch" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, IsFirstMessageInBatch) << std::endl;
    std::cout << "	IsLastMessageInBatch" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, IsLastMessageInBatch) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, DateTime) << std::endl;
    std::cout << "	NumOrders" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevel, NumOrders) << std::endl;
    std::cout << "DTC::s_MarketDepthSnapshotLevelFloat" << " = " << sizeof(DTC::s_MarketDepthSnapshotLevelFloat) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevelFloat, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevelFloat, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevelFloat, SymbolID) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevelFloat, Price) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevelFloat, Quantity) << std::endl;
    std::cout << "	NumOrders" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevelFloat, NumOrders) << std::endl;
    std::cout << "	Level" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevelFloat, Level) << std::endl;
    std::cout << "	Side" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevelFloat, Side) << std::endl;
    std::cout << "	FinalUpdateInBatch" << " = " << offsetof(DTC::s_MarketDepthSnapshotLevelFloat, FinalUpdateInBatch) << std::endl;
    std::cout << "DTC::s_MarketDepthUpdateLevel" << " = " << sizeof(DTC::s_MarketDepthUpdateLevel) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDepthUpdateLevel, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDepthUpdateLevel, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDepthUpdateLevel, SymbolID) << std::endl;
    std::cout << "	Side" << " = " << offsetof(DTC::s_MarketDepthUpdateLevel, Side) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDepthUpdateLevel, Price) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_MarketDepthUpdateLevel, Quantity) << std::endl;
    std::cout << "	UpdateType" << " = " << offsetof(DTC::s_MarketDepthUpdateLevel, UpdateType) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDepthUpdateLevel, DateTime) << std::endl;
    std::cout << "	NumOrders" << " = " << offsetof(DTC::s_MarketDepthUpdateLevel, NumOrders) << std::endl;
    std::cout << "DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds" << " = " << sizeof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds, SymbolID) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds, DateTime) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds, Price) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds, Quantity) << std::endl;
    std::cout << "	Side" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds, Side) << std::endl;
    std::cout << "	UpdateType" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds, UpdateType) << std::endl;
    std::cout << "	NumOrders" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds, NumOrders) << std::endl;
    std::cout << "	FinalUpdateInBatch" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelFloatWithMilliseconds, FinalUpdateInBatch) << std::endl;
    std::cout << "DTC::s_MarketDepthUpdateLevelNoTimestamp" << " = " << sizeof(DTC::s_MarketDepthUpdateLevelNoTimestamp) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelNoTimestamp, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelNoTimestamp, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelNoTimestamp, SymbolID) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelNoTimestamp, Price) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelNoTimestamp, Quantity) << std::endl;
    std::cout << "	NumOrders" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelNoTimestamp, NumOrders) << std::endl;
    std::cout << "	Side" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelNoTimestamp, Side) << std::endl;
    std::cout << "	UpdateType" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelNoTimestamp, UpdateType) << std::endl;
    std::cout << "	FinalUpdateInBatch" << " = " << offsetof(DTC::s_MarketDepthUpdateLevelNoTimestamp, FinalUpdateInBatch) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateTradeNoTimestamp" << " = " << sizeof(DTC::s_MarketDataUpdateTradeNoTimestamp) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateTradeNoTimestamp, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateTradeNoTimestamp, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateTradeNoTimestamp, SymbolID) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDataUpdateTradeNoTimestamp, Price) << std::endl;
    std::cout << "	Volume" << " = " << offsetof(DTC::s_MarketDataUpdateTradeNoTimestamp, Volume) << std::endl;
    std::cout << "	AtBidOrAsk" << " = " << offsetof(DTC::s_MarketDataUpdateTradeNoTimestamp, AtBidOrAsk) << std::endl;
    std::cout << "	UnbundledTradeIndicator" << " = " << offsetof(DTC::s_MarketDataUpdateTradeNoTimestamp, UnbundledTradeIndicator) << std::endl;
    std::cout << "	TradeCondition" << " = " << offsetof(DTC::s_MarketDataUpdateTradeNoTimestamp, TradeCondition) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateSessionSettlement" << " = " << sizeof(DTC::s_MarketDataUpdateSessionSettlement) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateSessionSettlement, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateSessionSettlement, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateSessionSettlement, SymbolID) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDataUpdateSessionSettlement, Price) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDataUpdateSessionSettlement, DateTime) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateSessionOpen" << " = " << sizeof(DTC::s_MarketDataUpdateSessionOpen) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateSessionOpen, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateSessionOpen, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateSessionOpen, SymbolID) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDataUpdateSessionOpen, Price) << std::endl;
    std::cout << "	TradingSessionDate" << " = " << offsetof(DTC::s_MarketDataUpdateSessionOpen, TradingSessionDate) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateSessionNumTrades" << " = " << sizeof(DTC::s_MarketDataUpdateSessionNumTrades) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateSessionNumTrades, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateSessionNumTrades, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateSessionNumTrades, SymbolID) << std::endl;
    std::cout << "	NumTrades" << " = " << offsetof(DTC::s_MarketDataUpdateSessionNumTrades, NumTrades) << std::endl;
    std::cout << "	TradingSessionDate" << " = " << offsetof(DTC::s_MarketDataUpdateSessionNumTrades, TradingSessionDate) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateTradingSessionDate" << " = " << sizeof(DTC::s_MarketDataUpdateTradingSessionDate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateTradingSessionDate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateTradingSessionDate, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateTradingSessionDate, SymbolID) << std::endl;
    std::cout << "	Date" << " = " << offsetof(DTC::s_MarketDataUpdateTradingSessionDate, Date) << std::endl;
    std::cout << "DTC::s_MarketDepthReject" << " = " << sizeof(DTC::s_MarketDepthReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDepthReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDepthReject, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDepthReject, SymbolID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_MarketDepthReject, RejectText) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateTrade" << " = " << sizeof(DTC::s_MarketDataUpdateTrade) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateTrade, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateTrade, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateTrade, SymbolID) << std::endl;
    std::cout << "	AtBidOrAsk" << " = " << offsetof(DTC::s_MarketDataUpdateTrade, AtBidOrAsk) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDataUpdateTrade, Price) << std::endl;
    std::cout << "	Volume" << " = " << offsetof(DTC::s_MarketDataUpdateTrade, Volume) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDataUpdateTrade, DateTime) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateTradeWithUnbundledIndicator" << " = " << sizeof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, SymbolID) << std::endl;
    std::cout << "	AtBidOrAsk" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, AtBidOrAsk) << std::endl;
    std::cout << "	UnbundledTradeIndicator" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, UnbundledTradeIndicator) << std::endl;
    std::cout << "	TradeCondition" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, TradeCondition) << std::endl;
    std::cout << "	Reserve_1" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, Reserve_1) << std::endl;
    std::cout << "	Reserve_2" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, Reserve_2) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, Price) << std::endl;
    std::cout << "	Volume" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, Volume) << std::endl;
    std::cout << "	Reserve_3" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, Reserve_3) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator, DateTime) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2" << " = " << sizeof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2, SymbolID) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2, Price) << std::endl;
    std::cout << "	Volume" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2, Volume) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2, DateTime) << std::endl;
    std::cout << "	AtBidOrAsk" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2, AtBidOrAsk) << std::endl;
    std::cout << "	UnbundledTradeIndicator" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2, UnbundledTradeIndicator) << std::endl;
    std::cout << "	TradeCondition" << " = " << offsetof(DTC::s_MarketDataUpdateTradeWithUnbundledIndicator2, TradeCondition) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateBidAsk" << " = " << sizeof(DTC::s_MarketDataUpdateBidAsk) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateBidAsk, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateBidAsk, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateBidAsk, SymbolID) << std::endl;
    std::cout << "	BidPrice" << " = " << offsetof(DTC::s_MarketDataUpdateBidAsk, BidPrice) << std::endl;
    std::cout << "	BidQuantity" << " = " << offsetof(DTC::s_MarketDataUpdateBidAsk, BidQuantity) << std::endl;
    std::cout << "	AskPrice" << " = " << offsetof(DTC::s_MarketDataUpdateBidAsk, AskPrice) << std::endl;
    std::cout << "	AskQuantity" << " = " << offsetof(DTC::s_MarketDataUpdateBidAsk, AskQuantity) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDataUpdateBidAsk, DateTime) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateBidAskCompact" << " = " << sizeof(DTC::s_MarketDataUpdateBidAskCompact) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskCompact, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskCompact, Type) << std::endl;
    std::cout << "	BidPrice" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskCompact, BidPrice) << std::endl;
    std::cout << "	BidQuantity" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskCompact, BidQuantity) << std::endl;
    std::cout << "	AskPrice" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskCompact, AskPrice) << std::endl;
    std::cout << "	AskQuantity" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskCompact, AskQuantity) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskCompact, DateTime) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskCompact, SymbolID) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateBidAskFloatWithMicroseconds" << " = " << sizeof(DTC::s_MarketDataUpdateBidAskFloatWithMicroseconds) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskFloatWithMicroseconds, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskFloatWithMicroseconds, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskFloatWithMicroseconds, SymbolID) << std::endl;
    std::cout << "	BidPrice" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskFloatWithMicroseconds, BidPrice) << std::endl;
    std::cout << "	BidQuantity" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskFloatWithMicroseconds, BidQuantity) << std::endl;
    std::cout << "	AskPrice" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskFloatWithMicroseconds, AskPrice) << std::endl;
    std::cout << "	AskQuantity" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskFloatWithMicroseconds, AskQuantity) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskFloatWithMicroseconds, DateTime) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateBidAskNoTimeStamp" << " = " << sizeof(DTC::s_MarketDataUpdateBidAskNoTimeStamp) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskNoTimeStamp, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskNoTimeStamp, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskNoTimeStamp, SymbolID) << std::endl;
    std::cout << "	BidPrice" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskNoTimeStamp, BidPrice) << std::endl;
    std::cout << "	BidQuantity" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskNoTimeStamp, BidQuantity) << std::endl;
    std::cout << "	AskPrice" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskNoTimeStamp, AskPrice) << std::endl;
    std::cout << "	AskQuantity" << " = " << offsetof(DTC::s_MarketDataUpdateBidAskNoTimeStamp, AskQuantity) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateTradeCompact" << " = " << sizeof(DTC::s_MarketDataUpdateTradeCompact) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateTradeCompact, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateTradeCompact, Type) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDataUpdateTradeCompact, Price) << std::endl;
    std::cout << "	Volume" << " = " << offsetof(DTC::s_MarketDataUpdateTradeCompact, Volume) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketDataUpdateTradeCompact, DateTime) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateTradeCompact, SymbolID) << std::endl;
    std::cout << "	AtBidOrAsk" << " = " << offsetof(DTC::s_MarketDataUpdateTradeCompact, AtBidOrAsk) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateSessionVolume" << " = " << sizeof(DTC::s_MarketDataUpdateSessionVolume) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateSessionVolume, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateSessionVolume, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateSessionVolume, SymbolID) << std::endl;
    std::cout << "	Volume" << " = " << offsetof(DTC::s_MarketDataUpdateSessionVolume, Volume) << std::endl;
    std::cout << "	TradingSessionDate" << " = " << offsetof(DTC::s_MarketDataUpdateSessionVolume, TradingSessionDate) << std::endl;
    std::cout << "	IsFinalSessionVolume" << " = " << offsetof(DTC::s_MarketDataUpdateSessionVolume, IsFinalSessionVolume) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateOpenInterest" << " = " << sizeof(DTC::s_MarketDataUpdateOpenInterest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateOpenInterest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateOpenInterest, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateOpenInterest, SymbolID) << std::endl;
    std::cout << "	OpenInterest" << " = " << offsetof(DTC::s_MarketDataUpdateOpenInterest, OpenInterest) << std::endl;
    std::cout << "	TradingSessionDate" << " = " << offsetof(DTC::s_MarketDataUpdateOpenInterest, TradingSessionDate) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateSessionHigh" << " = " << sizeof(DTC::s_MarketDataUpdateSessionHigh) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateSessionHigh, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateSessionHigh, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateSessionHigh, SymbolID) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDataUpdateSessionHigh, Price) << std::endl;
    std::cout << "	TradingSessionDate" << " = " << offsetof(DTC::s_MarketDataUpdateSessionHigh, TradingSessionDate) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateSessionLow" << " = " << sizeof(DTC::s_MarketDataUpdateSessionLow) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateSessionLow, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateSessionLow, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateSessionLow, SymbolID) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketDataUpdateSessionLow, Price) << std::endl;
    std::cout << "	TradingSessionDate" << " = " << offsetof(DTC::s_MarketDataUpdateSessionLow, TradingSessionDate) << std::endl;
    std::cout << "DTC::s_MarketDataUpdateLastTradeSnapshot" << " = " << sizeof(DTC::s_MarketDataUpdateLastTradeSnapshot) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketDataUpdateLastTradeSnapshot, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketDataUpdateLastTradeSnapshot, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketDataUpdateLastTradeSnapshot, SymbolID) << std::endl;
    std::cout << "	LastTradePrice" << " = " << offsetof(DTC::s_MarketDataUpdateLastTradeSnapshot, LastTradePrice) << std::endl;
    std::cout << "	LastTradeVolume" << " = " << offsetof(DTC::s_MarketDataUpdateLastTradeSnapshot, LastTradeVolume) << std::endl;
    std::cout << "	LastTradeDateTime" << " = " << offsetof(DTC::s_MarketDataUpdateLastTradeSnapshot, LastTradeDateTime) << std::endl;
    std::cout << "DTC::s_MarketOrdersRequest" << " = " << sizeof(DTC::s_MarketOrdersRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketOrdersRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketOrdersRequest, Type) << std::endl;
    std::cout << "	RequestAction" << " = " << offsetof(DTC::s_MarketOrdersRequest, RequestAction) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketOrdersRequest, SymbolID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_MarketOrdersRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_MarketOrdersRequest, Exchange) << std::endl;
    std::cout << "	SendQuantitiesGreaterOrEqualTo" << " = " << offsetof(DTC::s_MarketOrdersRequest, SendQuantitiesGreaterOrEqualTo) << std::endl;
    std::cout << "DTC::s_MarketOrdersReject" << " = " << sizeof(DTC::s_MarketOrdersReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketOrdersReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketOrdersReject, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketOrdersReject, SymbolID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_MarketOrdersReject, RejectText) << std::endl;
    std::cout << "DTC::s_MarketOrdersAdd" << " = " << sizeof(DTC::s_MarketOrdersAdd) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketOrdersAdd, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketOrdersAdd, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketOrdersAdd, SymbolID) << std::endl;
    std::cout << "	Side" << " = " << offsetof(DTC::s_MarketOrdersAdd, Side) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_MarketOrdersAdd, Quantity) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketOrdersAdd, Price) << std::endl;
    std::cout << "	OrderID" << " = " << offsetof(DTC::s_MarketOrdersAdd, OrderID) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketOrdersAdd, DateTime) << std::endl;
    std::cout << "DTC::s_MarketOrdersModify" << " = " << sizeof(DTC::s_MarketOrdersModify) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketOrdersModify, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketOrdersModify, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketOrdersModify, SymbolID) << std::endl;
    std::cout << "	Side" << " = " << offsetof(DTC::s_MarketOrdersModify, Side) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_MarketOrdersModify, Quantity) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketOrdersModify, Price) << std::endl;
    std::cout << "	OrderID" << " = " << offsetof(DTC::s_MarketOrdersModify, OrderID) << std::endl;
    std::cout << "	PriorPrice" << " = " << offsetof(DTC::s_MarketOrdersModify, PriorPrice) << std::endl;
    std::cout << "	PriorQuantity" << " = " << offsetof(DTC::s_MarketOrdersModify, PriorQuantity) << std::endl;
    std::cout << "	PriorOrderID" << " = " << offsetof(DTC::s_MarketOrdersModify, PriorOrderID) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketOrdersModify, DateTime) << std::endl;
    std::cout << "DTC::s_MarketOrdersRemove" << " = " << sizeof(DTC::s_MarketOrdersRemove) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketOrdersRemove, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketOrdersRemove, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketOrdersRemove, SymbolID) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_MarketOrdersRemove, Quantity) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_MarketOrdersRemove, Price) << std::endl;
    std::cout << "	OrderID" << " = " << offsetof(DTC::s_MarketOrdersRemove, OrderID) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_MarketOrdersRemove, DateTime) << std::endl;
    std::cout << "	Side" << " = " << offsetof(DTC::s_MarketOrdersRemove, Side) << std::endl;
    std::cout << "DTC::s_MarketOrdersSnapshotMessageBoundary" << " = " << sizeof(DTC::s_MarketOrdersSnapshotMessageBoundary) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_MarketOrdersSnapshotMessageBoundary, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_MarketOrdersSnapshotMessageBoundary, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_MarketOrdersSnapshotMessageBoundary, SymbolID) << std::endl;
    std::cout << "	MessageBoundary" << " = " << offsetof(DTC::s_MarketOrdersSnapshotMessageBoundary, MessageBoundary) << std::endl;
    std::cout << "DTC::s_SubmitNewSingleOrder" << " = " << sizeof(DTC::s_SubmitNewSingleOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, Type) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, Exchange) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, TradeAccount) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, ClientOrderID) << std::endl;
    std::cout << "	OrderType" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, OrderType) << std::endl;
    std::cout << "	BuySell" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, BuySell) << std::endl;
    std::cout << "	Price1" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, Price1) << std::endl;
    std::cout << "	Price2" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, Price2) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, Quantity) << std::endl;
    std::cout << "	TimeInForce" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, TimeInForce) << std::endl;
    std::cout << "	GoodTillDateTime" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, GoodTillDateTime) << std::endl;
    std::cout << "	IsAutomatedOrder" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, IsAutomatedOrder) << std::endl;
    std::cout << "	IsParentOrder" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, IsParentOrder) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, FreeFormText) << std::endl;
    std::cout << "	OpenOrClose" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, OpenOrClose) << std::endl;
    std::cout << "	MaxShowQuantity" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, MaxShowQuantity) << std::endl;
    std::cout << "	Price1AsString" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, Price1AsString) << std::endl;
    std::cout << "	Price2AsString" << " = " << offsetof(DTC::s_SubmitNewSingleOrder, Price2AsString) << std::endl;
    std::cout << "DTC::s_SubmitFlattenPositionOrder" << " = " << sizeof(DTC::s_SubmitFlattenPositionOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_SubmitFlattenPositionOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_SubmitFlattenPositionOrder, Type) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_SubmitFlattenPositionOrder, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_SubmitFlattenPositionOrder, Exchange) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_SubmitFlattenPositionOrder, TradeAccount) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC::s_SubmitFlattenPositionOrder, ClientOrderID) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC::s_SubmitFlattenPositionOrder, FreeFormText) << std::endl;
    std::cout << "	IsAutomatedOrder" << " = " << offsetof(DTC::s_SubmitFlattenPositionOrder, IsAutomatedOrder) << std::endl;
    std::cout << "DTC::s_CancelReplaceOrder" << " = " << sizeof(DTC::s_CancelReplaceOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_CancelReplaceOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_CancelReplaceOrder, Type) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC::s_CancelReplaceOrder, ServerOrderID) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC::s_CancelReplaceOrder, ClientOrderID) << std::endl;
    std::cout << "	Price1" << " = " << offsetof(DTC::s_CancelReplaceOrder, Price1) << std::endl;
    std::cout << "	Price2" << " = " << offsetof(DTC::s_CancelReplaceOrder, Price2) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_CancelReplaceOrder, Quantity) << std::endl;
    std::cout << "	Price1IsSet" << " = " << offsetof(DTC::s_CancelReplaceOrder, Price1IsSet) << std::endl;
    std::cout << "	Price2IsSet" << " = " << offsetof(DTC::s_CancelReplaceOrder, Price2IsSet) << std::endl;
    std::cout << "	Unused" << " = " << offsetof(DTC::s_CancelReplaceOrder, Unused) << std::endl;
    std::cout << "	TimeInForce" << " = " << offsetof(DTC::s_CancelReplaceOrder, TimeInForce) << std::endl;
    std::cout << "	GoodTillDateTime" << " = " << offsetof(DTC::s_CancelReplaceOrder, GoodTillDateTime) << std::endl;
    std::cout << "	UpdatePrice1OffsetToParent" << " = " << offsetof(DTC::s_CancelReplaceOrder, UpdatePrice1OffsetToParent) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_CancelReplaceOrder, TradeAccount) << std::endl;
    std::cout << "	Price1AsString" << " = " << offsetof(DTC::s_CancelReplaceOrder, Price1AsString) << std::endl;
    std::cout << "	Price2AsString" << " = " << offsetof(DTC::s_CancelReplaceOrder, Price2AsString) << std::endl;
    std::cout << "DTC::s_CancelOrder" << " = " << sizeof(DTC::s_CancelOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_CancelOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_CancelOrder, Type) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC::s_CancelOrder, ServerOrderID) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC::s_CancelOrder, ClientOrderID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_CancelOrder, TradeAccount) << std::endl;
    std::cout << "DTC::s_SubmitNewOCOOrder" << " = " << sizeof(DTC::s_SubmitNewOCOOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Type) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Exchange) << std::endl;
    std::cout << "	ClientOrderID_1" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, ClientOrderID_1) << std::endl;
    std::cout << "	OrderType_1" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, OrderType_1) << std::endl;
    std::cout << "	BuySell_1" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, BuySell_1) << std::endl;
    std::cout << "	Price1_1" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Price1_1) << std::endl;
    std::cout << "	Price2_1" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Price2_1) << std::endl;
    std::cout << "	Quantity_1" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Quantity_1) << std::endl;
    std::cout << "	ClientOrderID_2" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, ClientOrderID_2) << std::endl;
    std::cout << "	OrderType_2" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, OrderType_2) << std::endl;
    std::cout << "	BuySell_2" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, BuySell_2) << std::endl;
    std::cout << "	Price1_2" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Price1_2) << std::endl;
    std::cout << "	Price2_2" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Price2_2) << std::endl;
    std::cout << "	Quantity_2" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Quantity_2) << std::endl;
    std::cout << "	TimeInForce" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, TimeInForce) << std::endl;
    std::cout << "	GoodTillDateTime" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, GoodTillDateTime) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, TradeAccount) << std::endl;
    std::cout << "	IsAutomatedOrder" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, IsAutomatedOrder) << std::endl;
    std::cout << "	ParentTriggerClientOrderID" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, ParentTriggerClientOrderID) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, FreeFormText) << std::endl;
    std::cout << "	OpenOrClose" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, OpenOrClose) << std::endl;
    std::cout << "	PartialFillHandling" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, PartialFillHandling) << std::endl;
    std::cout << "	UseOffsets" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, UseOffsets) << std::endl;
    std::cout << "	OffsetFromParent1" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, OffsetFromParent1) << std::endl;
    std::cout << "	OffsetFromParent2" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, OffsetFromParent2) << std::endl;
    std::cout << "	MaintainSamePricesOnParentFill" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, MaintainSamePricesOnParentFill) << std::endl;
    std::cout << "	Price1_1AsString" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Price1_1AsString) << std::endl;
    std::cout << "	Price2_1AsString" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Price2_1AsString) << std::endl;
    std::cout << "	Price1_2AsString" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Price1_2AsString) << std::endl;
    std::cout << "	Price2_2AsString" << " = " << offsetof(DTC::s_SubmitNewOCOOrder, Price2_2AsString) << std::endl;
    std::cout << "DTC::s_OpenOrdersRequest" << " = " << sizeof(DTC::s_OpenOrdersRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_OpenOrdersRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_OpenOrdersRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_OpenOrdersRequest, RequestID) << std::endl;
    std::cout << "	RequestAllOrders" << " = " << offsetof(DTC::s_OpenOrdersRequest, RequestAllOrders) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC::s_OpenOrdersRequest, ServerOrderID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_OpenOrdersRequest, TradeAccount) << std::endl;
    std::cout << "DTC::s_HistoricalOrderFillsRequest" << " = " << sizeof(DTC::s_HistoricalOrderFillsRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalOrderFillsRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalOrderFillsRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalOrderFillsRequest, RequestID) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC::s_HistoricalOrderFillsRequest, ServerOrderID) << std::endl;
    std::cout << "	NumberOfDays" << " = " << offsetof(DTC::s_HistoricalOrderFillsRequest, NumberOfDays) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_HistoricalOrderFillsRequest, TradeAccount) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC::s_HistoricalOrderFillsRequest, StartDateTime) << std::endl;
    std::cout << "DTC::s_HistoricalOrderFillsReject" << " = " << sizeof(DTC::s_HistoricalOrderFillsReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalOrderFillsReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalOrderFillsReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalOrderFillsReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_HistoricalOrderFillsReject, RejectText) << std::endl;
    std::cout << "DTC::s_CurrentPositionsRequest" << " = " << sizeof(DTC::s_CurrentPositionsRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_CurrentPositionsRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_CurrentPositionsRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_CurrentPositionsRequest, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_CurrentPositionsRequest, TradeAccount) << std::endl;
    std::cout << "DTC::s_CurrentPositionsReject" << " = " << sizeof(DTC::s_CurrentPositionsReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_CurrentPositionsReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_CurrentPositionsReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_CurrentPositionsReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_CurrentPositionsReject, RejectText) << std::endl;
    std::cout << "DTC::s_OrderUpdate" << " = " << sizeof(DTC::s_OrderUpdate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_OrderUpdate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_OrderUpdate, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_OrderUpdate, RequestID) << std::endl;
    std::cout << "	TotalNumMessages" << " = " << offsetof(DTC::s_OrderUpdate, TotalNumMessages) << std::endl;
    std::cout << "	MessageNumber" << " = " << offsetof(DTC::s_OrderUpdate, MessageNumber) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_OrderUpdate, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_OrderUpdate, Exchange) << std::endl;
    std::cout << "	PreviousServerOrderID" << " = " << offsetof(DTC::s_OrderUpdate, PreviousServerOrderID) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC::s_OrderUpdate, ServerOrderID) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC::s_OrderUpdate, ClientOrderID) << std::endl;
    std::cout << "	ExchangeOrderID" << " = " << offsetof(DTC::s_OrderUpdate, ExchangeOrderID) << std::endl;
    std::cout << "	OrderStatus" << " = " << offsetof(DTC::s_OrderUpdate, OrderStatus) << std::endl;
    std::cout << "	OrderUpdateReason" << " = " << offsetof(DTC::s_OrderUpdate, OrderUpdateReason) << std::endl;
    std::cout << "	OrderType" << " = " << offsetof(DTC::s_OrderUpdate, OrderType) << std::endl;
    std::cout << "	BuySell" << " = " << offsetof(DTC::s_OrderUpdate, BuySell) << std::endl;
    std::cout << "	Price1" << " = " << offsetof(DTC::s_OrderUpdate, Price1) << std::endl;
    std::cout << "	Price2" << " = " << offsetof(DTC::s_OrderUpdate, Price2) << std::endl;
    std::cout << "	TimeInForce" << " = " << offsetof(DTC::s_OrderUpdate, TimeInForce) << std::endl;
    std::cout << "	GoodTillDateTime" << " = " << offsetof(DTC::s_OrderUpdate, GoodTillDateTime) << std::endl;
    std::cout << "	OrderQuantity" << " = " << offsetof(DTC::s_OrderUpdate, OrderQuantity) << std::endl;
    std::cout << "	FilledQuantity" << " = " << offsetof(DTC::s_OrderUpdate, FilledQuantity) << std::endl;
    std::cout << "	RemainingQuantity" << " = " << offsetof(DTC::s_OrderUpdate, RemainingQuantity) << std::endl;
    std::cout << "	AverageFillPrice" << " = " << offsetof(DTC::s_OrderUpdate, AverageFillPrice) << std::endl;
    std::cout << "	LastFillPrice" << " = " << offsetof(DTC::s_OrderUpdate, LastFillPrice) << std::endl;
    std::cout << "	LastFillDateTime" << " = " << offsetof(DTC::s_OrderUpdate, LastFillDateTime) << std::endl;
    std::cout << "	LastFillQuantity" << " = " << offsetof(DTC::s_OrderUpdate, LastFillQuantity) << std::endl;
    std::cout << "	LastFillExecutionID" << " = " << offsetof(DTC::s_OrderUpdate, LastFillExecutionID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_OrderUpdate, TradeAccount) << std::endl;
    std::cout << "	InfoText" << " = " << offsetof(DTC::s_OrderUpdate, InfoText) << std::endl;
    std::cout << "	NoOrders" << " = " << offsetof(DTC::s_OrderUpdate, NoOrders) << std::endl;
    std::cout << "	ParentServerOrderID" << " = " << offsetof(DTC::s_OrderUpdate, ParentServerOrderID) << std::endl;
    std::cout << "	OCOLinkedOrderServerOrderID" << " = " << offsetof(DTC::s_OrderUpdate, OCOLinkedOrderServerOrderID) << std::endl;
    std::cout << "	OpenOrClose" << " = " << offsetof(DTC::s_OrderUpdate, OpenOrClose) << std::endl;
    std::cout << "	PreviousClientOrderID" << " = " << offsetof(DTC::s_OrderUpdate, PreviousClientOrderID) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC::s_OrderUpdate, FreeFormText) << std::endl;
    std::cout << "	OrderReceivedDateTime" << " = " << offsetof(DTC::s_OrderUpdate, OrderReceivedDateTime) << std::endl;
    std::cout << "	LatestTransactionDateTime" << " = " << offsetof(DTC::s_OrderUpdate, LatestTransactionDateTime) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC::s_OrderUpdate, Username) << std::endl;
    std::cout << "DTC::s_OpenOrdersReject" << " = " << sizeof(DTC::s_OpenOrdersReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_OpenOrdersReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_OpenOrdersReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_OpenOrdersReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_OpenOrdersReject, RejectText) << std::endl;
    std::cout << "DTC::s_HistoricalOrderFillResponse" << " = " << sizeof(DTC::s_HistoricalOrderFillResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, RequestID) << std::endl;
    std::cout << "	TotalNumberMessages" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, TotalNumberMessages) << std::endl;
    std::cout << "	MessageNumber" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, MessageNumber) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, Exchange) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, ServerOrderID) << std::endl;
    std::cout << "	BuySell" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, BuySell) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, Price) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, DateTime) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, Quantity) << std::endl;
    std::cout << "	UniqueExecutionID" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, UniqueExecutionID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, TradeAccount) << std::endl;
    std::cout << "	OpenClose" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, OpenClose) << std::endl;
    std::cout << "	NoOrderFills" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, NoOrderFills) << std::endl;
    std::cout << "	InfoText" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, InfoText) << std::endl;
    std::cout << "	HighPriceDuringPosition" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, HighPriceDuringPosition) << std::endl;
    std::cout << "	LowPriceDuringPosition" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, LowPriceDuringPosition) << std::endl;
    std::cout << "	PositionQuantity" << " = " << offsetof(DTC::s_HistoricalOrderFillResponse, PositionQuantity) << std::endl;
    std::cout << "DTC::s_PositionUpdate" << " = " << sizeof(DTC::s_PositionUpdate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_PositionUpdate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_PositionUpdate, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_PositionUpdate, RequestID) << std::endl;
    std::cout << "	TotalNumberMessages" << " = " << offsetof(DTC::s_PositionUpdate, TotalNumberMessages) << std::endl;
    std::cout << "	MessageNumber" << " = " << offsetof(DTC::s_PositionUpdate, MessageNumber) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_PositionUpdate, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_PositionUpdate, Exchange) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_PositionUpdate, Quantity) << std::endl;
    std::cout << "	AveragePrice" << " = " << offsetof(DTC::s_PositionUpdate, AveragePrice) << std::endl;
    std::cout << "	PositionIdentifier" << " = " << offsetof(DTC::s_PositionUpdate, PositionIdentifier) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_PositionUpdate, TradeAccount) << std::endl;
    std::cout << "	NoPositions" << " = " << offsetof(DTC::s_PositionUpdate, NoPositions) << std::endl;
    std::cout << "	Unsolicited" << " = " << offsetof(DTC::s_PositionUpdate, Unsolicited) << std::endl;
    std::cout << "	MarginRequirement" << " = " << offsetof(DTC::s_PositionUpdate, MarginRequirement) << std::endl;
    std::cout << "	EntryDateTime" << " = " << offsetof(DTC::s_PositionUpdate, EntryDateTime) << std::endl;
    std::cout << "	OpenProfitLoss" << " = " << offsetof(DTC::s_PositionUpdate, OpenProfitLoss) << std::endl;
    std::cout << "	HighPriceDuringPosition" << " = " << offsetof(DTC::s_PositionUpdate, HighPriceDuringPosition) << std::endl;
    std::cout << "	LowPriceDuringPosition" << " = " << offsetof(DTC::s_PositionUpdate, LowPriceDuringPosition) << std::endl;
    std::cout << "	QuantityLimit" << " = " << offsetof(DTC::s_PositionUpdate, QuantityLimit) << std::endl;
    std::cout << "	MaxPotentialPostionQuantity" << " = " << offsetof(DTC::s_PositionUpdate, MaxPotentialPostionQuantity) << std::endl;
    std::cout << "DTC::s_AddCorrectingOrderFill" << " = " << sizeof(DTC::s_AddCorrectingOrderFill) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_AddCorrectingOrderFill, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_AddCorrectingOrderFill, Type) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_AddCorrectingOrderFill, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_AddCorrectingOrderFill, Exchange) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_AddCorrectingOrderFill, TradeAccount) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC::s_AddCorrectingOrderFill, ClientOrderID) << std::endl;
    std::cout << "	BuySell" << " = " << offsetof(DTC::s_AddCorrectingOrderFill, BuySell) << std::endl;
    std::cout << "	FillPrice" << " = " << offsetof(DTC::s_AddCorrectingOrderFill, FillPrice) << std::endl;
    std::cout << "	FillQuantity" << " = " << offsetof(DTC::s_AddCorrectingOrderFill, FillQuantity) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC::s_AddCorrectingOrderFill, FreeFormText) << std::endl;
    std::cout << "DTC::s_CorrectingOrderFillResponse" << " = " << sizeof(DTC::s_CorrectingOrderFillResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_CorrectingOrderFillResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_CorrectingOrderFillResponse, Type) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC::s_CorrectingOrderFillResponse, ClientOrderID) << std::endl;
    std::cout << "	ResultText" << " = " << offsetof(DTC::s_CorrectingOrderFillResponse, ResultText) << std::endl;
    std::cout << "	IsError" << " = " << offsetof(DTC::s_CorrectingOrderFillResponse, IsError) << std::endl;
    std::cout << "DTC::s_TradeAccountsRequest" << " = " << sizeof(DTC::s_TradeAccountsRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_TradeAccountsRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_TradeAccountsRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_TradeAccountsRequest, RequestID) << std::endl;
    std::cout << "DTC::s_TradeAccountResponse" << " = " << sizeof(DTC::s_TradeAccountResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_TradeAccountResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_TradeAccountResponse, Type) << std::endl;
    std::cout << "	TotalNumberMessages" << " = " << offsetof(DTC::s_TradeAccountResponse, TotalNumberMessages) << std::endl;
    std::cout << "	MessageNumber" << " = " << offsetof(DTC::s_TradeAccountResponse, MessageNumber) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_TradeAccountResponse, TradeAccount) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_TradeAccountResponse, RequestID) << std::endl;
    std::cout << "DTC::s_ExchangeListRequest" << " = " << sizeof(DTC::s_ExchangeListRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_ExchangeListRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_ExchangeListRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_ExchangeListRequest, RequestID) << std::endl;
    std::cout << "DTC::s_ExchangeListResponse" << " = " << sizeof(DTC::s_ExchangeListResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_ExchangeListResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_ExchangeListResponse, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_ExchangeListResponse, RequestID) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_ExchangeListResponse, Exchange) << std::endl;
    std::cout << "	IsFinalMessage" << " = " << offsetof(DTC::s_ExchangeListResponse, IsFinalMessage) << std::endl;
    std::cout << "	Description" << " = " << offsetof(DTC::s_ExchangeListResponse, Description) << std::endl;
    std::cout << "DTC::s_SymbolsForExchangeRequest" << " = " << sizeof(DTC::s_SymbolsForExchangeRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_SymbolsForExchangeRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_SymbolsForExchangeRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_SymbolsForExchangeRequest, RequestID) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_SymbolsForExchangeRequest, Exchange) << std::endl;
    std::cout << "	SecurityType" << " = " << offsetof(DTC::s_SymbolsForExchangeRequest, SecurityType) << std::endl;
    std::cout << "	RequestAction" << " = " << offsetof(DTC::s_SymbolsForExchangeRequest, RequestAction) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_SymbolsForExchangeRequest, Symbol) << std::endl;
    std::cout << "DTC::s_UnderlyingSymbolsForExchangeRequest" << " = " << sizeof(DTC::s_UnderlyingSymbolsForExchangeRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_UnderlyingSymbolsForExchangeRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_UnderlyingSymbolsForExchangeRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_UnderlyingSymbolsForExchangeRequest, RequestID) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_UnderlyingSymbolsForExchangeRequest, Exchange) << std::endl;
    std::cout << "	SecurityType" << " = " << offsetof(DTC::s_UnderlyingSymbolsForExchangeRequest, SecurityType) << std::endl;
    std::cout << "DTC::s_SymbolsForUnderlyingRequest" << " = " << sizeof(DTC::s_SymbolsForUnderlyingRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_SymbolsForUnderlyingRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_SymbolsForUnderlyingRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_SymbolsForUnderlyingRequest, RequestID) << std::endl;
    std::cout << "	UnderlyingSymbol" << " = " << offsetof(DTC::s_SymbolsForUnderlyingRequest, UnderlyingSymbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_SymbolsForUnderlyingRequest, Exchange) << std::endl;
    std::cout << "	SecurityType" << " = " << offsetof(DTC::s_SymbolsForUnderlyingRequest, SecurityType) << std::endl;
    std::cout << "DTC::s_SymbolSearchRequest" << " = " << sizeof(DTC::s_SymbolSearchRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_SymbolSearchRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_SymbolSearchRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_SymbolSearchRequest, RequestID) << std::endl;
    std::cout << "	SearchText" << " = " << offsetof(DTC::s_SymbolSearchRequest, SearchText) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_SymbolSearchRequest, Exchange) << std::endl;
    std::cout << "	SecurityType" << " = " << offsetof(DTC::s_SymbolSearchRequest, SecurityType) << std::endl;
    std::cout << "	SearchType" << " = " << offsetof(DTC::s_SymbolSearchRequest, SearchType) << std::endl;
    std::cout << "DTC::s_SecurityDefinitionForSymbolRequest" << " = " << sizeof(DTC::s_SecurityDefinitionForSymbolRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_SecurityDefinitionForSymbolRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_SecurityDefinitionForSymbolRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_SecurityDefinitionForSymbolRequest, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_SecurityDefinitionForSymbolRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_SecurityDefinitionForSymbolRequest, Exchange) << std::endl;
    std::cout << "DTC::s_SecurityDefinitionResponse" << " = " << sizeof(DTC::s_SecurityDefinitionResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, Exchange) << std::endl;
    std::cout << "	SecurityType" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, SecurityType) << std::endl;
    std::cout << "	Description" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, Description) << std::endl;
    std::cout << "	MinPriceIncrement" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, MinPriceIncrement) << std::endl;
    std::cout << "	PriceDisplayFormat" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, PriceDisplayFormat) << std::endl;
    std::cout << "	CurrencyValuePerIncrement" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, CurrencyValuePerIncrement) << std::endl;
    std::cout << "	IsFinalMessage" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, IsFinalMessage) << std::endl;
    std::cout << "	FloatToIntPriceMultiplier" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, FloatToIntPriceMultiplier) << std::endl;
    std::cout << "	IntToFloatPriceDivisor" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, IntToFloatPriceDivisor) << std::endl;
    std::cout << "	UnderlyingSymbol" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, UnderlyingSymbol) << std::endl;
    std::cout << "	UpdatesBidAskOnly" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, UpdatesBidAskOnly) << std::endl;
    std::cout << "	StrikePrice" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, StrikePrice) << std::endl;
    std::cout << "	PutOrCall" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, PutOrCall) << std::endl;
    std::cout << "	ShortInterest" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, ShortInterest) << std::endl;
    std::cout << "	SecurityExpirationDate" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, SecurityExpirationDate) << std::endl;
    std::cout << "	BuyRolloverInterest" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, BuyRolloverInterest) << std::endl;
    std::cout << "	SellRolloverInterest" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, SellRolloverInterest) << std::endl;
    std::cout << "	EarningsPerShare" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, EarningsPerShare) << std::endl;
    std::cout << "	SharesOutstanding" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, SharesOutstanding) << std::endl;
    std::cout << "	IntToFloatQuantityDivisor" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, IntToFloatQuantityDivisor) << std::endl;
    std::cout << "	HasMarketDepthData" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, HasMarketDepthData) << std::endl;
    std::cout << "	DisplayPriceMultiplier" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, DisplayPriceMultiplier) << std::endl;
    std::cout << "	ExchangeSymbol" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, ExchangeSymbol) << std::endl;
    std::cout << "	InitialMarginRequirement" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, InitialMarginRequirement) << std::endl;
    std::cout << "	MaintenanceMarginRequirement" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, MaintenanceMarginRequirement) << std::endl;
    std::cout << "	Currency" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, Currency) << std::endl;
    std::cout << "	ContractSize" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, ContractSize) << std::endl;
    std::cout << "	OpenInterest" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, OpenInterest) << std::endl;
    std::cout << "	RolloverDate" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, RolloverDate) << std::endl;
    std::cout << "	IsDelayed" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, IsDelayed) << std::endl;
    std::cout << "	SecurityIdentifier" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, SecurityIdentifier) << std::endl;
    std::cout << "	ProductIdentifier" << " = " << offsetof(DTC::s_SecurityDefinitionResponse, ProductIdentifier) << std::endl;
    std::cout << "DTC::s_SecurityDefinitionReject" << " = " << sizeof(DTC::s_SecurityDefinitionReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_SecurityDefinitionReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_SecurityDefinitionReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_SecurityDefinitionReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_SecurityDefinitionReject, RejectText) << std::endl;
    std::cout << "DTC::s_AccountBalanceRequest" << " = " << sizeof(DTC::s_AccountBalanceRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_AccountBalanceRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_AccountBalanceRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_AccountBalanceRequest, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_AccountBalanceRequest, TradeAccount) << std::endl;
    std::cout << "DTC::s_AccountBalanceReject" << " = " << sizeof(DTC::s_AccountBalanceReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_AccountBalanceReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_AccountBalanceReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_AccountBalanceReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_AccountBalanceReject, RejectText) << std::endl;
    std::cout << "DTC::s_AccountBalanceUpdate" << " = " << sizeof(DTC::s_AccountBalanceUpdate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_AccountBalanceUpdate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_AccountBalanceUpdate, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_AccountBalanceUpdate, RequestID) << std::endl;
    std::cout << "	CashBalance" << " = " << offsetof(DTC::s_AccountBalanceUpdate, CashBalance) << std::endl;
    std::cout << "	BalanceAvailableForNewPositions" << " = " << offsetof(DTC::s_AccountBalanceUpdate, BalanceAvailableForNewPositions) << std::endl;
    std::cout << "	AccountCurrency" << " = " << offsetof(DTC::s_AccountBalanceUpdate, AccountCurrency) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_AccountBalanceUpdate, TradeAccount) << std::endl;
    std::cout << "	SecuritiesValue" << " = " << offsetof(DTC::s_AccountBalanceUpdate, SecuritiesValue) << std::endl;
    std::cout << "	MarginRequirement" << " = " << offsetof(DTC::s_AccountBalanceUpdate, MarginRequirement) << std::endl;
    std::cout << "	TotalNumberMessages" << " = " << offsetof(DTC::s_AccountBalanceUpdate, TotalNumberMessages) << std::endl;
    std::cout << "	MessageNumber" << " = " << offsetof(DTC::s_AccountBalanceUpdate, MessageNumber) << std::endl;
    std::cout << "	NoAccountBalances" << " = " << offsetof(DTC::s_AccountBalanceUpdate, NoAccountBalances) << std::endl;
    std::cout << "	Unsolicited" << " = " << offsetof(DTC::s_AccountBalanceUpdate, Unsolicited) << std::endl;
    std::cout << "	OpenPositionsProfitLoss" << " = " << offsetof(DTC::s_AccountBalanceUpdate, OpenPositionsProfitLoss) << std::endl;
    std::cout << "	DailyProfitLoss" << " = " << offsetof(DTC::s_AccountBalanceUpdate, DailyProfitLoss) << std::endl;
    std::cout << "	InfoText" << " = " << offsetof(DTC::s_AccountBalanceUpdate, InfoText) << std::endl;
    std::cout << "	TransactionIdentifier" << " = " << offsetof(DTC::s_AccountBalanceUpdate, TransactionIdentifier) << std::endl;
    std::cout << "	DailyNetLossLimit" << " = " << offsetof(DTC::s_AccountBalanceUpdate, DailyNetLossLimit) << std::endl;
    std::cout << "	TrailingAccountValueToLimitPositions" << " = " << offsetof(DTC::s_AccountBalanceUpdate, TrailingAccountValueToLimitPositions) << std::endl;
    std::cout << "	DailyNetLossLimitReached" << " = " << offsetof(DTC::s_AccountBalanceUpdate, DailyNetLossLimitReached) << std::endl;
    std::cout << "	IsUnderRequiredMargin" << " = " << offsetof(DTC::s_AccountBalanceUpdate, IsUnderRequiredMargin) << std::endl;
    std::cout << "	ClosePositionsAtEndOfDay" << " = " << offsetof(DTC::s_AccountBalanceUpdate, ClosePositionsAtEndOfDay) << std::endl;
    std::cout << "	TradingIsDisabled" << " = " << offsetof(DTC::s_AccountBalanceUpdate, TradingIsDisabled) << std::endl;
    std::cout << "	Description" << " = " << offsetof(DTC::s_AccountBalanceUpdate, Description) << std::endl;
    std::cout << "	IsUnderRequiredAccountValue" << " = " << offsetof(DTC::s_AccountBalanceUpdate, IsUnderRequiredAccountValue) << std::endl;
    std::cout << "	TransactionDateTime" << " = " << offsetof(DTC::s_AccountBalanceUpdate, TransactionDateTime) << std::endl;
    std::cout << "	MarginRequirementFull" << " = " << offsetof(DTC::s_AccountBalanceUpdate, MarginRequirementFull) << std::endl;
    std::cout << "	MarginRequirementFullPositionsOnly" << " = " << offsetof(DTC::s_AccountBalanceUpdate, MarginRequirementFullPositionsOnly) << std::endl;
    std::cout << "	PeakMarginRequirement" << " = " << offsetof(DTC::s_AccountBalanceUpdate, PeakMarginRequirement) << std::endl;
    std::cout << "DTC::s_AccountBalanceAdjustment" << " = " << sizeof(DTC::s_AccountBalanceAdjustment) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_AccountBalanceAdjustment, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_AccountBalanceAdjustment, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_AccountBalanceAdjustment, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_AccountBalanceAdjustment, TradeAccount) << std::endl;
    std::cout << "	CreditAmount" << " = " << offsetof(DTC::s_AccountBalanceAdjustment, CreditAmount) << std::endl;
    std::cout << "	DebitAmount" << " = " << offsetof(DTC::s_AccountBalanceAdjustment, DebitAmount) << std::endl;
    std::cout << "	Currency" << " = " << offsetof(DTC::s_AccountBalanceAdjustment, Currency) << std::endl;
    std::cout << "	Reason" << " = " << offsetof(DTC::s_AccountBalanceAdjustment, Reason) << std::endl;
    std::cout << "DTC::s_AccountBalanceAdjustmentReject" << " = " << sizeof(DTC::s_AccountBalanceAdjustmentReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_AccountBalanceAdjustmentReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_AccountBalanceAdjustmentReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_AccountBalanceAdjustmentReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_AccountBalanceAdjustmentReject, RejectText) << std::endl;
    std::cout << "DTC::s_AccountBalanceAdjustmentComplete" << " = " << sizeof(DTC::s_AccountBalanceAdjustmentComplete) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_AccountBalanceAdjustmentComplete, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_AccountBalanceAdjustmentComplete, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_AccountBalanceAdjustmentComplete, RequestID) << std::endl;
    std::cout << "	TransactionID" << " = " << offsetof(DTC::s_AccountBalanceAdjustmentComplete, TransactionID) << std::endl;
    std::cout << "DTC::s_HistoricalAccountBalancesRequest" << " = " << sizeof(DTC::s_HistoricalAccountBalancesRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalAccountBalancesRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalAccountBalancesRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalAccountBalancesRequest, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_HistoricalAccountBalancesRequest, TradeAccount) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC::s_HistoricalAccountBalancesRequest, StartDateTime) << std::endl;
    std::cout << "DTC::s_HistoricalAccountBalancesReject" << " = " << sizeof(DTC::s_HistoricalAccountBalancesReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalAccountBalancesReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalAccountBalancesReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalAccountBalancesReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_HistoricalAccountBalancesReject, RejectText) << std::endl;
    std::cout << "DTC::s_HistoricalAccountBalanceResponse" << " = " << sizeof(DTC::s_HistoricalAccountBalanceResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, RequestID) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, DateTime) << std::endl;
    std::cout << "	CashBalance" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, CashBalance) << std::endl;
    std::cout << "	AccountCurrency" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, AccountCurrency) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, TradeAccount) << std::endl;
    std::cout << "	IsFinalResponse" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, IsFinalResponse) << std::endl;
    std::cout << "	NoAccountBalances" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, NoAccountBalances) << std::endl;
    std::cout << "	InfoText" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, InfoText) << std::endl;
    std::cout << "	TransactionId" << " = " << offsetof(DTC::s_HistoricalAccountBalanceResponse, TransactionId) << std::endl;
    std::cout << "DTC::s_UserMessage" << " = " << sizeof(DTC::s_UserMessage) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_UserMessage, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_UserMessage, Type) << std::endl;
    std::cout << "	UserMessage" << " = " << offsetof(DTC::s_UserMessage, UserMessage) << std::endl;
    std::cout << "	IsPopupMessage" << " = " << offsetof(DTC::s_UserMessage, IsPopupMessage) << std::endl;
    std::cout << "DTC::s_GeneralLogMessage" << " = " << sizeof(DTC::s_GeneralLogMessage) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_GeneralLogMessage, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_GeneralLogMessage, Type) << std::endl;
    std::cout << "	MessageText" << " = " << offsetof(DTC::s_GeneralLogMessage, MessageText) << std::endl;
    std::cout << "DTC::s_AlertMessage" << " = " << sizeof(DTC::s_AlertMessage) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_AlertMessage, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_AlertMessage, Type) << std::endl;
    std::cout << "	MessageText" << " = " << offsetof(DTC::s_AlertMessage, MessageText) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_AlertMessage, TradeAccount) << std::endl;
    std::cout << "DTC::s_JournalEntryAdd" << " = " << sizeof(DTC::s_JournalEntryAdd) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_JournalEntryAdd, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_JournalEntryAdd, Type) << std::endl;
    std::cout << "	JournalEntry" << " = " << offsetof(DTC::s_JournalEntryAdd, JournalEntry) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_JournalEntryAdd, DateTime) << std::endl;
    std::cout << "DTC::s_JournalEntriesRequest" << " = " << sizeof(DTC::s_JournalEntriesRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_JournalEntriesRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_JournalEntriesRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_JournalEntriesRequest, RequestID) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC::s_JournalEntriesRequest, StartDateTime) << std::endl;
    std::cout << "DTC::s_JournalEntriesReject" << " = " << sizeof(DTC::s_JournalEntriesReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_JournalEntriesReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_JournalEntriesReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_JournalEntriesReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_JournalEntriesReject, RejectText) << std::endl;
    std::cout << "DTC::s_JournalEntryResponse" << " = " << sizeof(DTC::s_JournalEntryResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_JournalEntryResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_JournalEntryResponse, Type) << std::endl;
    std::cout << "	JournalEntry" << " = " << offsetof(DTC::s_JournalEntryResponse, JournalEntry) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_JournalEntryResponse, DateTime) << std::endl;
    std::cout << "	IsFinalResponse" << " = " << offsetof(DTC::s_JournalEntryResponse, IsFinalResponse) << std::endl;
    std::cout << "DTC::s_HistoricalPriceDataRequest" << " = " << sizeof(DTC::s_HistoricalPriceDataRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, Exchange) << std::endl;
    std::cout << "	RecordInterval" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, RecordInterval) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, StartDateTime) << std::endl;
    std::cout << "	EndDateTime" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, EndDateTime) << std::endl;
    std::cout << "	MaxDaysToReturn" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, MaxDaysToReturn) << std::endl;
    std::cout << "	UseZLibCompression" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, UseZLibCompression) << std::endl;
    std::cout << "	RequestDividendAdjustedStockData" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, RequestDividendAdjustedStockData) << std::endl;
    std::cout << "	Integer_1" << " = " << offsetof(DTC::s_HistoricalPriceDataRequest, Integer_1) << std::endl;
    std::cout << "DTC::s_HistoricalPriceDataResponseHeader" << " = " << sizeof(DTC::s_HistoricalPriceDataResponseHeader) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseHeader, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseHeader, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseHeader, RequestID) << std::endl;
    std::cout << "	RecordInterval" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseHeader, RecordInterval) << std::endl;
    std::cout << "	UseZLibCompression" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseHeader, UseZLibCompression) << std::endl;
    std::cout << "	NoRecordsToReturn" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseHeader, NoRecordsToReturn) << std::endl;
    std::cout << "	IntToFloatPriceDivisor" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseHeader, IntToFloatPriceDivisor) << std::endl;
    std::cout << "DTC::s_HistoricalPriceDataReject" << " = " << sizeof(DTC::s_HistoricalPriceDataReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalPriceDataReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalPriceDataReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalPriceDataReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_HistoricalPriceDataReject, RejectText) << std::endl;
    std::cout << "	RejectReasonCode" << " = " << offsetof(DTC::s_HistoricalPriceDataReject, RejectReasonCode) << std::endl;
    std::cout << "	RetryTimeInSeconds" << " = " << offsetof(DTC::s_HistoricalPriceDataReject, RetryTimeInSeconds) << std::endl;
    std::cout << "DTC::s_HistoricalPriceDataRecordResponse" << " = " << sizeof(DTC::s_HistoricalPriceDataRecordResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, RequestID) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, StartDateTime) << std::endl;
    std::cout << "	OpenPrice" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, OpenPrice) << std::endl;
    std::cout << "	HighPrice" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, HighPrice) << std::endl;
    std::cout << "	LowPrice" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, LowPrice) << std::endl;
    std::cout << "	LastPrice" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, LastPrice) << std::endl;
    std::cout << "	Volume" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, Volume) << std::endl;
    std::cout << "	OpenInterest" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, OpenInterest) << std::endl;
    std::cout << "	NumTrades" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, NumTrades) << std::endl;
    std::cout << "	BidVolume" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, BidVolume) << std::endl;
    std::cout << "	AskVolume" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, AskVolume) << std::endl;
    std::cout << "	IsFinalRecord" << " = " << offsetof(DTC::s_HistoricalPriceDataRecordResponse, IsFinalRecord) << std::endl;
    std::cout << "DTC::s_HistoricalPriceDataTickRecordResponse" << " = " << sizeof(DTC::s_HistoricalPriceDataTickRecordResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalPriceDataTickRecordResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalPriceDataTickRecordResponse, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalPriceDataTickRecordResponse, RequestID) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_HistoricalPriceDataTickRecordResponse, DateTime) << std::endl;
    std::cout << "	AtBidOrAsk" << " = " << offsetof(DTC::s_HistoricalPriceDataTickRecordResponse, AtBidOrAsk) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_HistoricalPriceDataTickRecordResponse, Price) << std::endl;
    std::cout << "	Volume" << " = " << offsetof(DTC::s_HistoricalPriceDataTickRecordResponse, Volume) << std::endl;
    std::cout << "	IsFinalRecord" << " = " << offsetof(DTC::s_HistoricalPriceDataTickRecordResponse, IsFinalRecord) << std::endl;
    std::cout << "DTC::s_HistoricalPriceDataResponseTrailer" << " = " << sizeof(DTC::s_HistoricalPriceDataResponseTrailer) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseTrailer, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseTrailer, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseTrailer, RequestID) << std::endl;
    std::cout << "	FinalRecordLastDateTime" << " = " << offsetof(DTC::s_HistoricalPriceDataResponseTrailer, FinalRecordLastDateTime) << std::endl;
    std::cout << "DTC::s_HistoricalMarketDepthDataRequest" << " = " << sizeof(DTC::s_HistoricalMarketDepthDataRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRequest, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRequest, Exchange) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRequest, StartDateTime) << std::endl;
    std::cout << "	EndDateTime" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRequest, EndDateTime) << std::endl;
    std::cout << "	UseZLibCompression" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRequest, UseZLibCompression) << std::endl;
    std::cout << "	Integer_1" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRequest, Integer_1) << std::endl;
    std::cout << "DTC::s_HistoricalMarketDepthDataResponseHeader" << " = " << sizeof(DTC::s_HistoricalMarketDepthDataResponseHeader) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataResponseHeader, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataResponseHeader, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataResponseHeader, RequestID) << std::endl;
    std::cout << "	UseZLibCompression" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataResponseHeader, UseZLibCompression) << std::endl;
    std::cout << "	NoRecordsToReturn" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataResponseHeader, NoRecordsToReturn) << std::endl;
    std::cout << "DTC::s_HistoricalMarketDepthDataReject" << " = " << sizeof(DTC::s_HistoricalMarketDepthDataReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataReject, RejectText) << std::endl;
    std::cout << "	RejectReasonCode" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataReject, RejectReasonCode) << std::endl;
    std::cout << "DTC::s_HistoricalMarketDepthDataRecordResponse" << " = " << sizeof(DTC::s_HistoricalMarketDepthDataRecordResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRecordResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRecordResponse, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRecordResponse, RequestID) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRecordResponse, StartDateTime) << std::endl;
    std::cout << "	Command" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRecordResponse, Command) << std::endl;
    std::cout << "	Flags" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRecordResponse, Flags) << std::endl;
    std::cout << "	NumOrders" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRecordResponse, NumOrders) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRecordResponse, Price) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRecordResponse, Quantity) << std::endl;
    std::cout << "	IsFinalRecord" << " = " << offsetof(DTC::s_HistoricalMarketDepthDataRecordResponse, IsFinalRecord) << std::endl;
    std::cout << "DTC::s_EncodingRequestExtended" << " = " << sizeof(DTC::s_EncodingRequestExtended) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_EncodingRequestExtended, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_EncodingRequestExtended, Type) << std::endl;
    std::cout << "	ProtocolVersion" << " = " << offsetof(DTC::s_EncodingRequestExtended, ProtocolVersion) << std::endl;
    std::cout << "	Encoding" << " = " << offsetof(DTC::s_EncodingRequestExtended, Encoding) << std::endl;
    std::cout << "	ProtocolType" << " = " << offsetof(DTC::s_EncodingRequestExtended, ProtocolType) << std::endl;
    std::cout << "	UseCompression" << " = " << offsetof(DTC::s_EncodingRequestExtended, UseCompression) << std::endl;
    std::cout << "DTC::s_HeartbeatExtended" << " = " << sizeof(DTC::s_HeartbeatExtended) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HeartbeatExtended, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HeartbeatExtended, Type) << std::endl;
    std::cout << "	NumDroppedMessages" << " = " << offsetof(DTC::s_HeartbeatExtended, NumDroppedMessages) << std::endl;
    std::cout << "	CurrentDateTime" << " = " << offsetof(DTC::s_HeartbeatExtended, CurrentDateTime) << std::endl;
    std::cout << "	SecondsSinceLastReceivedHeartbeat" << " = " << offsetof(DTC::s_HeartbeatExtended, SecondsSinceLastReceivedHeartbeat) << std::endl;
    std::cout << "	NumberOfOutstandingSentBuffers" << " = " << offsetof(DTC::s_HeartbeatExtended, NumberOfOutstandingSentBuffers) << std::endl;
    std::cout << "	PendingTransmissionDelayInMilliseconds" << " = " << offsetof(DTC::s_HeartbeatExtended, PendingTransmissionDelayInMilliseconds) << std::endl;
    std::cout << "	CurrentSendBufferSizeInBytes" << " = " << offsetof(DTC::s_HeartbeatExtended, CurrentSendBufferSizeInBytes) << std::endl;
    std::cout << "	SendingDateTimeMicroseconds" << " = " << offsetof(DTC::s_HeartbeatExtended, SendingDateTimeMicroseconds) << std::endl;
    std::cout << "	DataCompressionRatio" << " = " << offsetof(DTC::s_HeartbeatExtended, DataCompressionRatio) << std::endl;
    std::cout << "	TotalUncompressedBytes" << " = " << offsetof(DTC::s_HeartbeatExtended, TotalUncompressedBytes) << std::endl;
    std::cout << "	TotalCompressionTime" << " = " << offsetof(DTC::s_HeartbeatExtended, TotalCompressionTime) << std::endl;
    std::cout << "	NumberOfCompressions" << " = " << offsetof(DTC::s_HeartbeatExtended, NumberOfCompressions) << std::endl;
    std::cout << "	SourceIPAddress" << " = " << offsetof(DTC::s_HeartbeatExtended, SourceIPAddress) << std::endl;
    std::cout << "DTC::s_HistoricalTradesRequest" << " = " << sizeof(DTC::s_HistoricalTradesRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalTradesRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalTradesRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalTradesRequest, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_HistoricalTradesRequest, Symbol) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_HistoricalTradesRequest, TradeAccount) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC::s_HistoricalTradesRequest, StartDateTime) << std::endl;
    std::cout << "	SubAccountIdentifier" << " = " << offsetof(DTC::s_HistoricalTradesRequest, SubAccountIdentifier) << std::endl;
    std::cout << "	CreateFlatToFlatTrades" << " = " << offsetof(DTC::s_HistoricalTradesRequest, CreateFlatToFlatTrades) << std::endl;
    std::cout << "DTC::s_HistoricalTradesReject" << " = " << sizeof(DTC::s_HistoricalTradesReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalTradesReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalTradesReject, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalTradesReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC::s_HistoricalTradesReject, RejectText) << std::endl;
    std::cout << "DTC::s_HistoricalTradesResponse" << " = " << sizeof(DTC::s_HistoricalTradesResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_HistoricalTradesResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_HistoricalTradesResponse, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_HistoricalTradesResponse, RequestID) << std::endl;
    std::cout << "	IsFinalMessage" << " = " << offsetof(DTC::s_HistoricalTradesResponse, IsFinalMessage) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_HistoricalTradesResponse, Symbol) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_HistoricalTradesResponse, TradeAccount) << std::endl;
    std::cout << "	EntryDateTime" << " = " << offsetof(DTC::s_HistoricalTradesResponse, EntryDateTime) << std::endl;
    std::cout << "	ExitDateTime" << " = " << offsetof(DTC::s_HistoricalTradesResponse, ExitDateTime) << std::endl;
    std::cout << "	EntryPrice" << " = " << offsetof(DTC::s_HistoricalTradesResponse, EntryPrice) << std::endl;
    std::cout << "	ExitPrice" << " = " << offsetof(DTC::s_HistoricalTradesResponse, ExitPrice) << std::endl;
    std::cout << "	TradeType" << " = " << offsetof(DTC::s_HistoricalTradesResponse, TradeType) << std::endl;
    std::cout << "	EntryQuantity" << " = " << offsetof(DTC::s_HistoricalTradesResponse, EntryQuantity) << std::endl;
    std::cout << "	ExitQuantity" << " = " << offsetof(DTC::s_HistoricalTradesResponse, ExitQuantity) << std::endl;
    std::cout << "	MaxOpenQuantity" << " = " << offsetof(DTC::s_HistoricalTradesResponse, MaxOpenQuantity) << std::endl;
    std::cout << "	ClosedProfitLoss" << " = " << offsetof(DTC::s_HistoricalTradesResponse, ClosedProfitLoss) << std::endl;
    std::cout << "	MaximumOpenPositionLoss" << " = " << offsetof(DTC::s_HistoricalTradesResponse, MaximumOpenPositionLoss) << std::endl;
    std::cout << "	MaximumOpenPositionProfit" << " = " << offsetof(DTC::s_HistoricalTradesResponse, MaximumOpenPositionProfit) << std::endl;
    std::cout << "	Commission" << " = " << offsetof(DTC::s_HistoricalTradesResponse, Commission) << std::endl;
    std::cout << "	OpenFillExecutionID" << " = " << offsetof(DTC::s_HistoricalTradesResponse, OpenFillExecutionID) << std::endl;
    std::cout << "	CloseFillExecutionID" << " = " << offsetof(DTC::s_HistoricalTradesResponse, CloseFillExecutionID) << std::endl;
    std::cout << "	SubAccountIdentifier" << " = " << offsetof(DTC::s_HistoricalTradesResponse, SubAccountIdentifier) << std::endl;
    std::cout << "DTC::s_ReplayChartData" << " = " << sizeof(DTC::s_ReplayChartData) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_ReplayChartData, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_ReplayChartData, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_ReplayChartData, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC::s_ReplayChartData, Symbol) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC::s_ReplayChartData, TradeAccount) << std::endl;
    std::cout << "	TimeZone" << " = " << offsetof(DTC::s_ReplayChartData, TimeZone) << std::endl;
    std::cout << "	StartDateTimeForInitialData" << " = " << offsetof(DTC::s_ReplayChartData, StartDateTimeForInitialData) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC::s_ReplayChartData, StartDateTime) << std::endl;
    std::cout << "	StopDateTime" << " = " << offsetof(DTC::s_ReplayChartData, StopDateTime) << std::endl;
    std::cout << "	SessionBeginTimeInSeconds" << " = " << offsetof(DTC::s_ReplayChartData, SessionBeginTimeInSeconds) << std::endl;
    std::cout << "	SessionEndTimeInSeconds" << " = " << offsetof(DTC::s_ReplayChartData, SessionEndTimeInSeconds) << std::endl;
    std::cout << "	ReplaySpeed" << " = " << offsetof(DTC::s_ReplayChartData, ReplaySpeed) << std::endl;
    std::cout << "	BarTimeInSeconds" << " = " << offsetof(DTC::s_ReplayChartData, BarTimeInSeconds) << std::endl;
    std::cout << "	PauseReplayAfterInitialDataSent" << " = " << offsetof(DTC::s_ReplayChartData, PauseReplayAfterInitialDataSent) << std::endl;
    std::cout << "	UseSavedPriorState" << " = " << offsetof(DTC::s_ReplayChartData, UseSavedPriorState) << std::endl;
    std::cout << "	SymbolVolatility" << " = " << offsetof(DTC::s_ReplayChartData, SymbolVolatility) << std::endl;
    std::cout << "	InterestRate" << " = " << offsetof(DTC::s_ReplayChartData, InterestRate) << std::endl;
    std::cout << "	NumberOfOrdersToTriggerFinishToStopDateTime" << " = " << offsetof(DTC::s_ReplayChartData, NumberOfOrdersToTriggerFinishToStopDateTime) << std::endl;
    std::cout << "	MaximumNumberOfOrdersPerReplaySession" << " = " << offsetof(DTC::s_ReplayChartData, MaximumNumberOfOrdersPerReplaySession) << std::endl;
    std::cout << "	NumberOfDaysForInitialDataFromBeforeLastSavedDateTime" << " = " << offsetof(DTC::s_ReplayChartData, NumberOfDaysForInitialDataFromBeforeLastSavedDateTime) << std::endl;
    std::cout << "	SubAccountIdentifier" << " = " << offsetof(DTC::s_ReplayChartData, SubAccountIdentifier) << std::endl;
    std::cout << "	OptionsPriceSendIntervalInSeconds" << " = " << offsetof(DTC::s_ReplayChartData, OptionsPriceSendIntervalInSeconds) << std::endl;
    std::cout << "DTC::s_ReplayChartDataPerformAction" << " = " << sizeof(DTC::s_ReplayChartDataPerformAction) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_ReplayChartDataPerformAction, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_ReplayChartDataPerformAction, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_ReplayChartDataPerformAction, RequestID) << std::endl;
    std::cout << "	Action" << " = " << offsetof(DTC::s_ReplayChartDataPerformAction, Action) << std::endl;
    std::cout << "	ReplaySpeed" << " = " << offsetof(DTC::s_ReplayChartDataPerformAction, ReplaySpeed) << std::endl;
    std::cout << "DTC::s_ReplayChartDataStatus" << " = " << sizeof(DTC::s_ReplayChartDataStatus) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_ReplayChartDataStatus, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_ReplayChartDataStatus, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_ReplayChartDataStatus, RequestID) << std::endl;
    std::cout << "	ErrorMessage" << " = " << offsetof(DTC::s_ReplayChartDataStatus, ErrorMessage) << std::endl;
    std::cout << "	Status" << " = " << offsetof(DTC::s_ReplayChartDataStatus, Status) << std::endl;
    std::cout << "	SubAccountIdentifier" << " = " << offsetof(DTC::s_ReplayChartDataStatus, SubAccountIdentifier) << std::endl;
    std::cout << "DTC::s_RequestNumCurrentClientConnections" << " = " << sizeof(DTC::s_RequestNumCurrentClientConnections) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_RequestNumCurrentClientConnections, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_RequestNumCurrentClientConnections, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_RequestNumCurrentClientConnections, RequestID) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC::s_RequestNumCurrentClientConnections, Username) << std::endl;
    std::cout << "	DeviceIdentifier" << " = " << offsetof(DTC::s_RequestNumCurrentClientConnections, DeviceIdentifier) << std::endl;
    std::cout << "DTC::s_NumCurrentClientConnectionsResponse" << " = " << sizeof(DTC::s_NumCurrentClientConnectionsResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_NumCurrentClientConnectionsResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_NumCurrentClientConnectionsResponse, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_NumCurrentClientConnectionsResponse, RequestID) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC::s_NumCurrentClientConnectionsResponse, Username) << std::endl;
    std::cout << "	NumConnectionsForDifferentDevices" << " = " << offsetof(DTC::s_NumCurrentClientConnectionsResponse, NumConnectionsForDifferentDevices) << std::endl;
    std::cout << "	NumConnectionsForSameDevice" << " = " << offsetof(DTC::s_NumCurrentClientConnectionsResponse, NumConnectionsForSameDevice) << std::endl;
    std::cout << "DTC::s_ClientDeviceUpdate" << " = " << sizeof(DTC::s_ClientDeviceUpdate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_ClientDeviceUpdate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_ClientDeviceUpdate, Type) << std::endl;
    std::cout << "	ClientDeviceIdentifier" << " = " << offsetof(DTC::s_ClientDeviceUpdate, ClientDeviceIdentifier) << std::endl;
    std::cout << "DTC::s_InterprocessSynchronizationRemoteState" << " = " << sizeof(DTC::s_InterprocessSynchronizationRemoteState) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_InterprocessSynchronizationRemoteState, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_InterprocessSynchronizationRemoteState, Type) << std::endl;
    std::cout << "	IsPrimary" << " = " << offsetof(DTC::s_InterprocessSynchronizationRemoteState, IsPrimary) << std::endl;
    std::cout << "	IsSecondary" << " = " << offsetof(DTC::s_InterprocessSynchronizationRemoteState, IsSecondary) << std::endl;
    std::cout << "	IsSecondaryFailoverActive" << " = " << offsetof(DTC::s_InterprocessSynchronizationRemoteState, IsSecondaryFailoverActive) << std::endl;
    std::cout << "DTC::s_InterprocessSynchronizationSnapshotRequest" << " = " << sizeof(DTC::s_InterprocessSynchronizationSnapshotRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_InterprocessSynchronizationSnapshotRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_InterprocessSynchronizationSnapshotRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_InterprocessSynchronizationSnapshotRequest, RequestID) << std::endl;
    std::cout << "DTC::s_InterprocessSynchronizationTradeActivityRequest" << " = " << sizeof(DTC::s_InterprocessSynchronizationTradeActivityRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_InterprocessSynchronizationTradeActivityRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_InterprocessSynchronizationTradeActivityRequest, Type) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC::s_InterprocessSynchronizationTradeActivityRequest, RequestID) << std::endl;
    std::cout << "	StartDateTimeUTC" << " = " << offsetof(DTC::s_InterprocessSynchronizationTradeActivityRequest, StartDateTimeUTC) << std::endl;
    std::cout << "DTC::s_WriteIntradayDataFileSessionValue" << " = " << sizeof(DTC::s_WriteIntradayDataFileSessionValue) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC::s_WriteIntradayDataFileSessionValue, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC::s_WriteIntradayDataFileSessionValue, Type) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC::s_WriteIntradayDataFileSessionValue, SymbolID) << std::endl;
    std::cout << "	ValueType" << " = " << offsetof(DTC::s_WriteIntradayDataFileSessionValue, ValueType) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC::s_WriteIntradayDataFileSessionValue, DateTime) << std::endl;
    std::cout << "	Date" << " = " << offsetof(DTC::s_WriteIntradayDataFileSessionValue, Date) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC::s_WriteIntradayDataFileSessionValue, Price) << std::endl;
    std::cout << "	Volume" << " = " << offsetof(DTC::s_WriteIntradayDataFileSessionValue, Volume) << std::endl;
    std::cout << "DTC_VLS::s_VariableLengthStringField" << " = " << sizeof(DTC_VLS::s_VariableLengthStringField) << std::endl;
    std::cout << "	Offset" << " = " << offsetof(DTC_VLS::s_VariableLengthStringField, Offset) << std::endl;
    std::cout << "	Length" << " = " << offsetof(DTC_VLS::s_VariableLengthStringField, Length) << std::endl;
    std::cout << "DTC_VLS::s_LogonRequest" << " = " << sizeof(DTC_VLS::s_LogonRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_LogonRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_LogonRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_LogonRequest, BaseSize) << std::endl;
    std::cout << "	ProtocolVersion" << " = " << offsetof(DTC_VLS::s_LogonRequest, ProtocolVersion) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC_VLS::s_LogonRequest, Username) << std::endl;
    std::cout << "	Password" << " = " << offsetof(DTC_VLS::s_LogonRequest, Password) << std::endl;
    std::cout << "	GeneralTextData" << " = " << offsetof(DTC_VLS::s_LogonRequest, GeneralTextData) << std::endl;
    std::cout << "	Integer_1" << " = " << offsetof(DTC_VLS::s_LogonRequest, Integer_1) << std::endl;
    std::cout << "	Integer_2" << " = " << offsetof(DTC_VLS::s_LogonRequest, Integer_2) << std::endl;
    std::cout << "	HeartbeatIntervalInSeconds" << " = " << offsetof(DTC_VLS::s_LogonRequest, HeartbeatIntervalInSeconds) << std::endl;
    std::cout << "	Unused1" << " = " << offsetof(DTC_VLS::s_LogonRequest, Unused1) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_LogonRequest, TradeAccount) << std::endl;
    std::cout << "	HardwareIdentifier" << " = " << offsetof(DTC_VLS::s_LogonRequest, HardwareIdentifier) << std::endl;
    std::cout << "	ClientName" << " = " << offsetof(DTC_VLS::s_LogonRequest, ClientName) << std::endl;
    std::cout << "	MarketDataTransmissionInterval" << " = " << offsetof(DTC_VLS::s_LogonRequest, MarketDataTransmissionInterval) << std::endl;
    std::cout << "DTC_VLS::s_LogonResponse" << " = " << sizeof(DTC_VLS::s_LogonResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_LogonResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_LogonResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_LogonResponse, BaseSize) << std::endl;
    std::cout << "	ProtocolVersion" << " = " << offsetof(DTC_VLS::s_LogonResponse, ProtocolVersion) << std::endl;
    std::cout << "	Result" << " = " << offsetof(DTC_VLS::s_LogonResponse, Result) << std::endl;
    std::cout << "	ResultText" << " = " << offsetof(DTC_VLS::s_LogonResponse, ResultText) << std::endl;
    std::cout << "	ReconnectAddress" << " = " << offsetof(DTC_VLS::s_LogonResponse, ReconnectAddress) << std::endl;
    std::cout << "	Integer_1" << " = " << offsetof(DTC_VLS::s_LogonResponse, Integer_1) << std::endl;
    std::cout << "	ServerName" << " = " << offsetof(DTC_VLS::s_LogonResponse, ServerName) << std::endl;
    std::cout << "	MarketDepthUpdatesBestBidAndAsk" << " = " << offsetof(DTC_VLS::s_LogonResponse, MarketDepthUpdatesBestBidAndAsk) << std::endl;
    std::cout << "	TradingIsSupported" << " = " << offsetof(DTC_VLS::s_LogonResponse, TradingIsSupported) << std::endl;
    std::cout << "	OCOOrdersSupported" << " = " << offsetof(DTC_VLS::s_LogonResponse, OCOOrdersSupported) << std::endl;
    std::cout << "	OrderCancelReplaceSupported" << " = " << offsetof(DTC_VLS::s_LogonResponse, OrderCancelReplaceSupported) << std::endl;
    std::cout << "	SymbolExchangeDelimiter" << " = " << offsetof(DTC_VLS::s_LogonResponse, SymbolExchangeDelimiter) << std::endl;
    std::cout << "	SecurityDefinitionsSupported" << " = " << offsetof(DTC_VLS::s_LogonResponse, SecurityDefinitionsSupported) << std::endl;
    std::cout << "	HistoricalPriceDataSupported" << " = " << offsetof(DTC_VLS::s_LogonResponse, HistoricalPriceDataSupported) << std::endl;
    std::cout << "	ResubscribeWhenMarketDataFeedAvailable" << " = " << offsetof(DTC_VLS::s_LogonResponse, ResubscribeWhenMarketDataFeedAvailable) << std::endl;
    std::cout << "	MarketDepthIsSupported" << " = " << offsetof(DTC_VLS::s_LogonResponse, MarketDepthIsSupported) << std::endl;
    std::cout << "	OneHistoricalPriceDataRequestPerConnection" << " = " << offsetof(DTC_VLS::s_LogonResponse, OneHistoricalPriceDataRequestPerConnection) << std::endl;
    std::cout << "	BracketOrdersSupported" << " = " << offsetof(DTC_VLS::s_LogonResponse, BracketOrdersSupported) << std::endl;
    std::cout << "	Unused_1" << " = " << offsetof(DTC_VLS::s_LogonResponse, Unused_1) << std::endl;
    std::cout << "	UsesMultiplePositionsPerSymbolAndTradeAccount" << " = " << offsetof(DTC_VLS::s_LogonResponse, UsesMultiplePositionsPerSymbolAndTradeAccount) << std::endl;
    std::cout << "	MarketDataSupported" << " = " << offsetof(DTC_VLS::s_LogonResponse, MarketDataSupported) << std::endl;
    std::cout << "DTC_VLS::s_Logoff" << " = " << sizeof(DTC_VLS::s_Logoff) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_Logoff, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_Logoff, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_Logoff, BaseSize) << std::endl;
    std::cout << "	Reason" << " = " << offsetof(DTC_VLS::s_Logoff, Reason) << std::endl;
    std::cout << "	DoNotReconnect" << " = " << offsetof(DTC_VLS::s_Logoff, DoNotReconnect) << std::endl;
    std::cout << "DTC_VLS::s_MarketDataRequest" << " = " << sizeof(DTC_VLS::s_MarketDataRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_MarketDataRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_MarketDataRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_MarketDataRequest, BaseSize) << std::endl;
    std::cout << "	RequestAction" << " = " << offsetof(DTC_VLS::s_MarketDataRequest, RequestAction) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC_VLS::s_MarketDataRequest, SymbolID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_MarketDataRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_MarketDataRequest, Exchange) << std::endl;
    std::cout << "	IntervalForSnapshotUpdatesInMilliseconds" << " = " << offsetof(DTC_VLS::s_MarketDataRequest, IntervalForSnapshotUpdatesInMilliseconds) << std::endl;
    std::cout << "DTC_VLS::s_MarketDepthRequest" << " = " << sizeof(DTC_VLS::s_MarketDepthRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_MarketDepthRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_MarketDepthRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_MarketDepthRequest, BaseSize) << std::endl;
    std::cout << "	RequestAction" << " = " << offsetof(DTC_VLS::s_MarketDepthRequest, RequestAction) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC_VLS::s_MarketDepthRequest, SymbolID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_MarketDepthRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_MarketDepthRequest, Exchange) << std::endl;
    std::cout << "	NumLevels" << " = " << offsetof(DTC_VLS::s_MarketDepthRequest, NumLevels) << std::endl;
    std::cout << "DTC_VLS::s_MarketDataReject" << " = " << sizeof(DTC_VLS::s_MarketDataReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_MarketDataReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_MarketDataReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_MarketDataReject, BaseSize) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC_VLS::s_MarketDataReject, SymbolID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_MarketDataReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_MarketDepthReject" << " = " << sizeof(DTC_VLS::s_MarketDepthReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_MarketDepthReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_MarketDepthReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_MarketDepthReject, BaseSize) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC_VLS::s_MarketDepthReject, SymbolID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_MarketDepthReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_MarketOrdersRequest" << " = " << sizeof(DTC_VLS::s_MarketOrdersRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_MarketOrdersRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_MarketOrdersRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_MarketOrdersRequest, BaseSize) << std::endl;
    std::cout << "	RequestAction" << " = " << offsetof(DTC_VLS::s_MarketOrdersRequest, RequestAction) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC_VLS::s_MarketOrdersRequest, SymbolID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_MarketOrdersRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_MarketOrdersRequest, Exchange) << std::endl;
    std::cout << "	SendQuantitiesGreaterOrEqualTo" << " = " << offsetof(DTC_VLS::s_MarketOrdersRequest, SendQuantitiesGreaterOrEqualTo) << std::endl;
    std::cout << "DTC_VLS::s_MarketOrdersReject" << " = " << sizeof(DTC_VLS::s_MarketOrdersReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_MarketOrdersReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_MarketOrdersReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_MarketOrdersReject, BaseSize) << std::endl;
    std::cout << "	SymbolID" << " = " << offsetof(DTC_VLS::s_MarketOrdersReject, SymbolID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_MarketOrdersReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_SubmitNewSingleOrder" << " = " << sizeof(DTC_VLS::s_SubmitNewSingleOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, BaseSize) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, Exchange) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, TradeAccount) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, ClientOrderID) << std::endl;
    std::cout << "	OrderType" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, OrderType) << std::endl;
    std::cout << "	BuySell" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, BuySell) << std::endl;
    std::cout << "	Price1" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, Price1) << std::endl;
    std::cout << "	Price2" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, Price2) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, Quantity) << std::endl;
    std::cout << "	TimeInForce" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, TimeInForce) << std::endl;
    std::cout << "	GoodTillDateTime" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, GoodTillDateTime) << std::endl;
    std::cout << "	IsAutomatedOrder" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, IsAutomatedOrder) << std::endl;
    std::cout << "	IsParentOrder" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, IsParentOrder) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, FreeFormText) << std::endl;
    std::cout << "	OpenOrClose" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, OpenOrClose) << std::endl;
    std::cout << "	MaxShowQuantity" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, MaxShowQuantity) << std::endl;
    std::cout << "	Price1AsString" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, Price1AsString) << std::endl;
    std::cout << "	Price2AsString" << " = " << offsetof(DTC_VLS::s_SubmitNewSingleOrder, Price2AsString) << std::endl;
    std::cout << "DTC_VLS::s_SubmitFlattenPositionOrder" << " = " << sizeof(DTC_VLS::s_SubmitFlattenPositionOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_SubmitFlattenPositionOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_SubmitFlattenPositionOrder, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_SubmitFlattenPositionOrder, BaseSize) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_SubmitFlattenPositionOrder, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_SubmitFlattenPositionOrder, Exchange) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_SubmitFlattenPositionOrder, TradeAccount) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC_VLS::s_SubmitFlattenPositionOrder, ClientOrderID) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC_VLS::s_SubmitFlattenPositionOrder, FreeFormText) << std::endl;
    std::cout << "	IsAutomatedOrder" << " = " << offsetof(DTC_VLS::s_SubmitFlattenPositionOrder, IsAutomatedOrder) << std::endl;
    std::cout << "DTC_VLS::s_CancelReplaceOrder" << " = " << sizeof(DTC_VLS::s_CancelReplaceOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, BaseSize) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, ServerOrderID) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, ClientOrderID) << std::endl;
    std::cout << "	Price1" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, Price1) << std::endl;
    std::cout << "	Price2" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, Price2) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, Quantity) << std::endl;
    std::cout << "	Price1IsSet" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, Price1IsSet) << std::endl;
    std::cout << "	Price2IsSet" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, Price2IsSet) << std::endl;
    std::cout << "	Unused" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, Unused) << std::endl;
    std::cout << "	TimeInForce" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, TimeInForce) << std::endl;
    std::cout << "	GoodTillDateTime" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, GoodTillDateTime) << std::endl;
    std::cout << "	UpdatePrice1OffsetToParent" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, UpdatePrice1OffsetToParent) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, TradeAccount) << std::endl;
    std::cout << "	Price1AsString" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, Price1AsString) << std::endl;
    std::cout << "	Price2AsString" << " = " << offsetof(DTC_VLS::s_CancelReplaceOrder, Price2AsString) << std::endl;
    std::cout << "DTC_VLS::s_CancelOrder" << " = " << sizeof(DTC_VLS::s_CancelOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_CancelOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_CancelOrder, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_CancelOrder, BaseSize) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC_VLS::s_CancelOrder, ServerOrderID) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC_VLS::s_CancelOrder, ClientOrderID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_CancelOrder, TradeAccount) << std::endl;
    std::cout << "DTC_VLS::s_SubmitNewOCOOrder" << " = " << sizeof(DTC_VLS::s_SubmitNewOCOOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, BaseSize) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Exchange) << std::endl;
    std::cout << "	ClientOrderID_1" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, ClientOrderID_1) << std::endl;
    std::cout << "	OrderType_1" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, OrderType_1) << std::endl;
    std::cout << "	BuySell_1" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, BuySell_1) << std::endl;
    std::cout << "	Price1_1" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Price1_1) << std::endl;
    std::cout << "	Price2_1" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Price2_1) << std::endl;
    std::cout << "	Quantity_1" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Quantity_1) << std::endl;
    std::cout << "	ClientOrderID_2" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, ClientOrderID_2) << std::endl;
    std::cout << "	OrderType_2" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, OrderType_2) << std::endl;
    std::cout << "	BuySell_2" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, BuySell_2) << std::endl;
    std::cout << "	Price1_2" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Price1_2) << std::endl;
    std::cout << "	Price2_2" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Price2_2) << std::endl;
    std::cout << "	Quantity_2" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Quantity_2) << std::endl;
    std::cout << "	TimeInForce" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, TimeInForce) << std::endl;
    std::cout << "	GoodTillDateTime" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, GoodTillDateTime) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, TradeAccount) << std::endl;
    std::cout << "	IsAutomatedOrder" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, IsAutomatedOrder) << std::endl;
    std::cout << "	ParentTriggerClientOrderID" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, ParentTriggerClientOrderID) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, FreeFormText) << std::endl;
    std::cout << "	OpenOrClose" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, OpenOrClose) << std::endl;
    std::cout << "	PartialFillHandling" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, PartialFillHandling) << std::endl;
    std::cout << "	UseOffsets" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, UseOffsets) << std::endl;
    std::cout << "	OffsetFromParent1" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, OffsetFromParent1) << std::endl;
    std::cout << "	OffsetFromParent2" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, OffsetFromParent2) << std::endl;
    std::cout << "	MaintainSamePricesOnParentFill" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, MaintainSamePricesOnParentFill) << std::endl;
    std::cout << "	Price1_1AsString" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Price1_1AsString) << std::endl;
    std::cout << "	Price2_1AsString" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Price2_1AsString) << std::endl;
    std::cout << "	Price1_2AsString" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Price1_2AsString) << std::endl;
    std::cout << "	Price2_2AsString" << " = " << offsetof(DTC_VLS::s_SubmitNewOCOOrder, Price2_2AsString) << std::endl;
    std::cout << "DTC_VLS::s_OpenOrdersRequest" << " = " << sizeof(DTC_VLS::s_OpenOrdersRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_OpenOrdersRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_OpenOrdersRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_OpenOrdersRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_OpenOrdersRequest, RequestID) << std::endl;
    std::cout << "	RequestAllOrders" << " = " << offsetof(DTC_VLS::s_OpenOrdersRequest, RequestAllOrders) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC_VLS::s_OpenOrdersRequest, ServerOrderID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_OpenOrdersRequest, TradeAccount) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalOrderFillsRequest" << " = " << sizeof(DTC_VLS::s_HistoricalOrderFillsRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsRequest, RequestID) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsRequest, ServerOrderID) << std::endl;
    std::cout << "	NumberOfDays" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsRequest, NumberOfDays) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsRequest, TradeAccount) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsRequest, StartDateTime) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalOrderFillsReject" << " = " << sizeof(DTC_VLS::s_HistoricalOrderFillsReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillsReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_CurrentPositionsRequest" << " = " << sizeof(DTC_VLS::s_CurrentPositionsRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_CurrentPositionsRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_CurrentPositionsRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_CurrentPositionsRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_CurrentPositionsRequest, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_CurrentPositionsRequest, TradeAccount) << std::endl;
    std::cout << "DTC_VLS::s_CurrentPositionsReject" << " = " << sizeof(DTC_VLS::s_CurrentPositionsReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_CurrentPositionsReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_CurrentPositionsReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_CurrentPositionsReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_CurrentPositionsReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_CurrentPositionsReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_OrderUpdate" << " = " << sizeof(DTC_VLS::s_OrderUpdate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_OrderUpdate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_OrderUpdate, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_OrderUpdate, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_OrderUpdate, RequestID) << std::endl;
    std::cout << "	TotalNumMessages" << " = " << offsetof(DTC_VLS::s_OrderUpdate, TotalNumMessages) << std::endl;
    std::cout << "	MessageNumber" << " = " << offsetof(DTC_VLS::s_OrderUpdate, MessageNumber) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_OrderUpdate, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_OrderUpdate, Exchange) << std::endl;
    std::cout << "	PreviousServerOrderID" << " = " << offsetof(DTC_VLS::s_OrderUpdate, PreviousServerOrderID) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC_VLS::s_OrderUpdate, ServerOrderID) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC_VLS::s_OrderUpdate, ClientOrderID) << std::endl;
    std::cout << "	ExchangeOrderID" << " = " << offsetof(DTC_VLS::s_OrderUpdate, ExchangeOrderID) << std::endl;
    std::cout << "	OrderStatus" << " = " << offsetof(DTC_VLS::s_OrderUpdate, OrderStatus) << std::endl;
    std::cout << "	OrderUpdateReason" << " = " << offsetof(DTC_VLS::s_OrderUpdate, OrderUpdateReason) << std::endl;
    std::cout << "	OrderType" << " = " << offsetof(DTC_VLS::s_OrderUpdate, OrderType) << std::endl;
    std::cout << "	BuySell" << " = " << offsetof(DTC_VLS::s_OrderUpdate, BuySell) << std::endl;
    std::cout << "	Price1" << " = " << offsetof(DTC_VLS::s_OrderUpdate, Price1) << std::endl;
    std::cout << "	Price2" << " = " << offsetof(DTC_VLS::s_OrderUpdate, Price2) << std::endl;
    std::cout << "	TimeInForce" << " = " << offsetof(DTC_VLS::s_OrderUpdate, TimeInForce) << std::endl;
    std::cout << "	GoodTillDateTime" << " = " << offsetof(DTC_VLS::s_OrderUpdate, GoodTillDateTime) << std::endl;
    std::cout << "	OrderQuantity" << " = " << offsetof(DTC_VLS::s_OrderUpdate, OrderQuantity) << std::endl;
    std::cout << "	FilledQuantity" << " = " << offsetof(DTC_VLS::s_OrderUpdate, FilledQuantity) << std::endl;
    std::cout << "	RemainingQuantity" << " = " << offsetof(DTC_VLS::s_OrderUpdate, RemainingQuantity) << std::endl;
    std::cout << "	AverageFillPrice" << " = " << offsetof(DTC_VLS::s_OrderUpdate, AverageFillPrice) << std::endl;
    std::cout << "	LastFillPrice" << " = " << offsetof(DTC_VLS::s_OrderUpdate, LastFillPrice) << std::endl;
    std::cout << "	LastFillDateTime" << " = " << offsetof(DTC_VLS::s_OrderUpdate, LastFillDateTime) << std::endl;
    std::cout << "	LastFillQuantity" << " = " << offsetof(DTC_VLS::s_OrderUpdate, LastFillQuantity) << std::endl;
    std::cout << "	LastFillExecutionID" << " = " << offsetof(DTC_VLS::s_OrderUpdate, LastFillExecutionID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_OrderUpdate, TradeAccount) << std::endl;
    std::cout << "	InfoText" << " = " << offsetof(DTC_VLS::s_OrderUpdate, InfoText) << std::endl;
    std::cout << "	NoOrders" << " = " << offsetof(DTC_VLS::s_OrderUpdate, NoOrders) << std::endl;
    std::cout << "	ParentServerOrderID" << " = " << offsetof(DTC_VLS::s_OrderUpdate, ParentServerOrderID) << std::endl;
    std::cout << "	OCOLinkedOrderServerOrderID" << " = " << offsetof(DTC_VLS::s_OrderUpdate, OCOLinkedOrderServerOrderID) << std::endl;
    std::cout << "	OpenOrClose" << " = " << offsetof(DTC_VLS::s_OrderUpdate, OpenOrClose) << std::endl;
    std::cout << "	PreviousClientOrderID" << " = " << offsetof(DTC_VLS::s_OrderUpdate, PreviousClientOrderID) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC_VLS::s_OrderUpdate, FreeFormText) << std::endl;
    std::cout << "	OrderReceivedDateTime" << " = " << offsetof(DTC_VLS::s_OrderUpdate, OrderReceivedDateTime) << std::endl;
    std::cout << "	LatestTransactionDateTime" << " = " << offsetof(DTC_VLS::s_OrderUpdate, LatestTransactionDateTime) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC_VLS::s_OrderUpdate, Username) << std::endl;
    std::cout << "DTC_VLS::s_OpenOrdersReject" << " = " << sizeof(DTC_VLS::s_OpenOrdersReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_OpenOrdersReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_OpenOrdersReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_OpenOrdersReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_OpenOrdersReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_OpenOrdersReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalOrderFillResponse" << " = " << sizeof(DTC_VLS::s_HistoricalOrderFillResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, RequestID) << std::endl;
    std::cout << "	TotalNumberMessages" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, TotalNumberMessages) << std::endl;
    std::cout << "	MessageNumber" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, MessageNumber) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, Exchange) << std::endl;
    std::cout << "	ServerOrderID" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, ServerOrderID) << std::endl;
    std::cout << "	BuySell" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, BuySell) << std::endl;
    std::cout << "	Price" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, Price) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, DateTime) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, Quantity) << std::endl;
    std::cout << "	UniqueExecutionID" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, UniqueExecutionID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, TradeAccount) << std::endl;
    std::cout << "	OpenClose" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, OpenClose) << std::endl;
    std::cout << "	NoOrderFills" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, NoOrderFills) << std::endl;
    std::cout << "	InfoText" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, InfoText) << std::endl;
    std::cout << "	HighPriceDuringPosition" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, HighPriceDuringPosition) << std::endl;
    std::cout << "	LowPriceDuringPosition" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, LowPriceDuringPosition) << std::endl;
    std::cout << "	PositionQuantity" << " = " << offsetof(DTC_VLS::s_HistoricalOrderFillResponse, PositionQuantity) << std::endl;
    std::cout << "DTC_VLS::s_PositionUpdate" << " = " << sizeof(DTC_VLS::s_PositionUpdate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_PositionUpdate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_PositionUpdate, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_PositionUpdate, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_PositionUpdate, RequestID) << std::endl;
    std::cout << "	TotalNumberMessages" << " = " << offsetof(DTC_VLS::s_PositionUpdate, TotalNumberMessages) << std::endl;
    std::cout << "	MessageNumber" << " = " << offsetof(DTC_VLS::s_PositionUpdate, MessageNumber) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_PositionUpdate, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_PositionUpdate, Exchange) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC_VLS::s_PositionUpdate, Quantity) << std::endl;
    std::cout << "	AveragePrice" << " = " << offsetof(DTC_VLS::s_PositionUpdate, AveragePrice) << std::endl;
    std::cout << "	PositionIdentifier" << " = " << offsetof(DTC_VLS::s_PositionUpdate, PositionIdentifier) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_PositionUpdate, TradeAccount) << std::endl;
    std::cout << "	NoPositions" << " = " << offsetof(DTC_VLS::s_PositionUpdate, NoPositions) << std::endl;
    std::cout << "	Unsolicited" << " = " << offsetof(DTC_VLS::s_PositionUpdate, Unsolicited) << std::endl;
    std::cout << "	MarginRequirement" << " = " << offsetof(DTC_VLS::s_PositionUpdate, MarginRequirement) << std::endl;
    std::cout << "	EntryDateTime" << " = " << offsetof(DTC_VLS::s_PositionUpdate, EntryDateTime) << std::endl;
    std::cout << "	OpenProfitLoss" << " = " << offsetof(DTC_VLS::s_PositionUpdate, OpenProfitLoss) << std::endl;
    std::cout << "	HighPriceDuringPosition" << " = " << offsetof(DTC_VLS::s_PositionUpdate, HighPriceDuringPosition) << std::endl;
    std::cout << "	LowPriceDuringPosition" << " = " << offsetof(DTC_VLS::s_PositionUpdate, LowPriceDuringPosition) << std::endl;
    std::cout << "	QuantityLimit" << " = " << offsetof(DTC_VLS::s_PositionUpdate, QuantityLimit) << std::endl;
    std::cout << "	MaxPotentialPostionQuantity" << " = " << offsetof(DTC_VLS::s_PositionUpdate, MaxPotentialPostionQuantity) << std::endl;
    std::cout << "DTC_VLS::s_AddCorrectingOrderFill" << " = " << sizeof(DTC_VLS::s_AddCorrectingOrderFill) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, BaseSize) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, Exchange) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, TradeAccount) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, ClientOrderID) << std::endl;
    std::cout << "	BuySell" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, BuySell) << std::endl;
    std::cout << "	FillPrice" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, FillPrice) << std::endl;
    std::cout << "	FillQuantity" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, FillQuantity) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC_VLS::s_AddCorrectingOrderFill, FreeFormText) << std::endl;
    std::cout << "DTC_VLS::s_CorrectingOrderFillResponse" << " = " << sizeof(DTC_VLS::s_CorrectingOrderFillResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_CorrectingOrderFillResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_CorrectingOrderFillResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_CorrectingOrderFillResponse, BaseSize) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC_VLS::s_CorrectingOrderFillResponse, ClientOrderID) << std::endl;
    std::cout << "	ResultText" << " = " << offsetof(DTC_VLS::s_CorrectingOrderFillResponse, ResultText) << std::endl;
    std::cout << "	IsError" << " = " << offsetof(DTC_VLS::s_CorrectingOrderFillResponse, IsError) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountResponse" << " = " << sizeof(DTC_VLS::s_TradeAccountResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountResponse, BaseSize) << std::endl;
    std::cout << "	TotalNumberMessages" << " = " << offsetof(DTC_VLS::s_TradeAccountResponse, TotalNumberMessages) << std::endl;
    std::cout << "	MessageNumber" << " = " << offsetof(DTC_VLS::s_TradeAccountResponse, MessageNumber) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountResponse, TradeAccount) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountResponse, RequestID) << std::endl;
    std::cout << "DTC_VLS::s_ExchangeListResponse" << " = " << sizeof(DTC_VLS::s_ExchangeListResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_ExchangeListResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_ExchangeListResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_ExchangeListResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_ExchangeListResponse, RequestID) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_ExchangeListResponse, Exchange) << std::endl;
    std::cout << "	IsFinalMessage" << " = " << offsetof(DTC_VLS::s_ExchangeListResponse, IsFinalMessage) << std::endl;
    std::cout << "	Description" << " = " << offsetof(DTC_VLS::s_ExchangeListResponse, Description) << std::endl;
    std::cout << "DTC_VLS::s_SymbolsForExchangeRequest" << " = " << sizeof(DTC_VLS::s_SymbolsForExchangeRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_SymbolsForExchangeRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_SymbolsForExchangeRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_SymbolsForExchangeRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_SymbolsForExchangeRequest, RequestID) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_SymbolsForExchangeRequest, Exchange) << std::endl;
    std::cout << "	SecurityType" << " = " << offsetof(DTC_VLS::s_SymbolsForExchangeRequest, SecurityType) << std::endl;
    std::cout << "	RequestAction" << " = " << offsetof(DTC_VLS::s_SymbolsForExchangeRequest, RequestAction) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_SymbolsForExchangeRequest, Symbol) << std::endl;
    std::cout << "DTC_VLS::s_UnderlyingSymbolsForExchangeRequest" << " = " << sizeof(DTC_VLS::s_UnderlyingSymbolsForExchangeRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_UnderlyingSymbolsForExchangeRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_UnderlyingSymbolsForExchangeRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_UnderlyingSymbolsForExchangeRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_UnderlyingSymbolsForExchangeRequest, RequestID) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_UnderlyingSymbolsForExchangeRequest, Exchange) << std::endl;
    std::cout << "	SecurityType" << " = " << offsetof(DTC_VLS::s_UnderlyingSymbolsForExchangeRequest, SecurityType) << std::endl;
    std::cout << "DTC_VLS::s_SymbolsForUnderlyingRequest" << " = " << sizeof(DTC_VLS::s_SymbolsForUnderlyingRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_SymbolsForUnderlyingRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_SymbolsForUnderlyingRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_SymbolsForUnderlyingRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_SymbolsForUnderlyingRequest, RequestID) << std::endl;
    std::cout << "	UnderlyingSymbol" << " = " << offsetof(DTC_VLS::s_SymbolsForUnderlyingRequest, UnderlyingSymbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_SymbolsForUnderlyingRequest, Exchange) << std::endl;
    std::cout << "	SecurityType" << " = " << offsetof(DTC_VLS::s_SymbolsForUnderlyingRequest, SecurityType) << std::endl;
    std::cout << "DTC_VLS::s_SymbolSearchRequest" << " = " << sizeof(DTC_VLS::s_SymbolSearchRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_SymbolSearchRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_SymbolSearchRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_SymbolSearchRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_SymbolSearchRequest, RequestID) << std::endl;
    std::cout << "	SearchText" << " = " << offsetof(DTC_VLS::s_SymbolSearchRequest, SearchText) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_SymbolSearchRequest, Exchange) << std::endl;
    std::cout << "	SecurityType" << " = " << offsetof(DTC_VLS::s_SymbolSearchRequest, SecurityType) << std::endl;
    std::cout << "	SearchType" << " = " << offsetof(DTC_VLS::s_SymbolSearchRequest, SearchType) << std::endl;
    std::cout << "DTC_VLS::s_SecurityDefinitionForSymbolRequest" << " = " << sizeof(DTC_VLS::s_SecurityDefinitionForSymbolRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionForSymbolRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionForSymbolRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionForSymbolRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionForSymbolRequest, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionForSymbolRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionForSymbolRequest, Exchange) << std::endl;
    std::cout << "DTC_VLS::s_SecurityDefinitionResponse" << " = " << sizeof(DTC_VLS::s_SecurityDefinitionResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, Exchange) << std::endl;
    std::cout << "	SecurityType" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, SecurityType) << std::endl;
    std::cout << "	Description" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, Description) << std::endl;
    std::cout << "	MinPriceIncrement" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, MinPriceIncrement) << std::endl;
    std::cout << "	PriceDisplayFormat" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, PriceDisplayFormat) << std::endl;
    std::cout << "	CurrencyValuePerIncrement" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, CurrencyValuePerIncrement) << std::endl;
    std::cout << "	IsFinalMessage" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, IsFinalMessage) << std::endl;
    std::cout << "	FloatToIntPriceMultiplier" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, FloatToIntPriceMultiplier) << std::endl;
    std::cout << "	IntToFloatPriceDivisor" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, IntToFloatPriceDivisor) << std::endl;
    std::cout << "	UnderlyingSymbol" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, UnderlyingSymbol) << std::endl;
    std::cout << "	UpdatesBidAskOnly" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, UpdatesBidAskOnly) << std::endl;
    std::cout << "	StrikePrice" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, StrikePrice) << std::endl;
    std::cout << "	PutOrCall" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, PutOrCall) << std::endl;
    std::cout << "	ShortInterest" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, ShortInterest) << std::endl;
    std::cout << "	SecurityExpirationDate" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, SecurityExpirationDate) << std::endl;
    std::cout << "	BuyRolloverInterest" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, BuyRolloverInterest) << std::endl;
    std::cout << "	SellRolloverInterest" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, SellRolloverInterest) << std::endl;
    std::cout << "	EarningsPerShare" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, EarningsPerShare) << std::endl;
    std::cout << "	SharesOutstanding" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, SharesOutstanding) << std::endl;
    std::cout << "	IntToFloatQuantityDivisor" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, IntToFloatQuantityDivisor) << std::endl;
    std::cout << "	HasMarketDepthData" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, HasMarketDepthData) << std::endl;
    std::cout << "	DisplayPriceMultiplier" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, DisplayPriceMultiplier) << std::endl;
    std::cout << "	ExchangeSymbol" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, ExchangeSymbol) << std::endl;
    std::cout << "	InitialMarginRequirement" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, InitialMarginRequirement) << std::endl;
    std::cout << "	MaintenanceMarginRequirement" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, MaintenanceMarginRequirement) << std::endl;
    std::cout << "	Currency" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, Currency) << std::endl;
    std::cout << "	ContractSize" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, ContractSize) << std::endl;
    std::cout << "	OpenInterest" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, OpenInterest) << std::endl;
    std::cout << "	RolloverDate" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, RolloverDate) << std::endl;
    std::cout << "	IsDelayed" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, IsDelayed) << std::endl;
    std::cout << "	SecurityIdentifier" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, SecurityIdentifier) << std::endl;
    std::cout << "	ProductIdentifier" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionResponse, ProductIdentifier) << std::endl;
    std::cout << "DTC_VLS::s_SecurityDefinitionReject" << " = " << sizeof(DTC_VLS::s_SecurityDefinitionReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_SecurityDefinitionReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_AccountBalanceRequest" << " = " << sizeof(DTC_VLS::s_AccountBalanceRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_AccountBalanceRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_AccountBalanceRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_AccountBalanceRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_AccountBalanceRequest, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_AccountBalanceRequest, TradeAccount) << std::endl;
    std::cout << "DTC_VLS::s_AccountBalanceReject" << " = " << sizeof(DTC_VLS::s_AccountBalanceReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_AccountBalanceReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_AccountBalanceReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_AccountBalanceReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_AccountBalanceReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_AccountBalanceReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_AccountBalanceUpdate" << " = " << sizeof(DTC_VLS::s_AccountBalanceUpdate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, RequestID) << std::endl;
    std::cout << "	CashBalance" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, CashBalance) << std::endl;
    std::cout << "	BalanceAvailableForNewPositions" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, BalanceAvailableForNewPositions) << std::endl;
    std::cout << "	AccountCurrency" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, AccountCurrency) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, TradeAccount) << std::endl;
    std::cout << "	SecuritiesValue" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, SecuritiesValue) << std::endl;
    std::cout << "	MarginRequirement" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, MarginRequirement) << std::endl;
    std::cout << "	TotalNumberMessages" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, TotalNumberMessages) << std::endl;
    std::cout << "	MessageNumber" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, MessageNumber) << std::endl;
    std::cout << "	NoAccountBalances" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, NoAccountBalances) << std::endl;
    std::cout << "	Unsolicited" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, Unsolicited) << std::endl;
    std::cout << "	OpenPositionsProfitLoss" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, OpenPositionsProfitLoss) << std::endl;
    std::cout << "	DailyProfitLoss" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, DailyProfitLoss) << std::endl;
    std::cout << "	InfoText" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, InfoText) << std::endl;
    std::cout << "	TransactionIdentifier" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, TransactionIdentifier) << std::endl;
    std::cout << "	DailyNetLossLimit" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, DailyNetLossLimit) << std::endl;
    std::cout << "	TrailingAccountValueToLimitPositions" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, TrailingAccountValueToLimitPositions) << std::endl;
    std::cout << "	DailyNetLossLimitReached" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, DailyNetLossLimitReached) << std::endl;
    std::cout << "	IsUnderRequiredMargin" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, IsUnderRequiredMargin) << std::endl;
    std::cout << "	ClosePositionsAtEndOfDay" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, ClosePositionsAtEndOfDay) << std::endl;
    std::cout << "	TradingIsDisabled" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, TradingIsDisabled) << std::endl;
    std::cout << "	Description" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, Description) << std::endl;
    std::cout << "	IsUnderRequiredAccountValue" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, IsUnderRequiredAccountValue) << std::endl;
    std::cout << "	TransactionDateTime" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, TransactionDateTime) << std::endl;
    std::cout << "	MarginRequirementFull" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, MarginRequirementFull) << std::endl;
    std::cout << "	MarginRequirementFullPositionsOnly" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, MarginRequirementFullPositionsOnly) << std::endl;
    std::cout << "	PeakMarginRequirement" << " = " << offsetof(DTC_VLS::s_AccountBalanceUpdate, PeakMarginRequirement) << std::endl;
    std::cout << "DTC_VLS::s_AccountBalanceAdjustment" << " = " << sizeof(DTC_VLS::s_AccountBalanceAdjustment) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustment, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustment, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustment, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustment, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustment, TradeAccount) << std::endl;
    std::cout << "	CreditAmount" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustment, CreditAmount) << std::endl;
    std::cout << "	DebitAmount" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustment, DebitAmount) << std::endl;
    std::cout << "	Currency" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustment, Currency) << std::endl;
    std::cout << "	Reason" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustment, Reason) << std::endl;
    std::cout << "DTC_VLS::s_AccountBalanceAdjustmentReject" << " = " << sizeof(DTC_VLS::s_AccountBalanceAdjustmentReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustmentReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustmentReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustmentReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustmentReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_AccountBalanceAdjustmentReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalAccountBalancesRequest" << " = " << sizeof(DTC_VLS::s_HistoricalAccountBalancesRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesRequest, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesRequest, TradeAccount) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesRequest, StartDateTime) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalAccountBalancesReject" << " = " << sizeof(DTC_VLS::s_HistoricalAccountBalancesReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalancesReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalAccountBalanceResponse" << " = " << sizeof(DTC_VLS::s_HistoricalAccountBalanceResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, RequestID) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, DateTime) << std::endl;
    std::cout << "	CashBalance" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, CashBalance) << std::endl;
    std::cout << "	AccountCurrency" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, AccountCurrency) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, TradeAccount) << std::endl;
    std::cout << "	IsFinalResponse" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, IsFinalResponse) << std::endl;
    std::cout << "	NoAccountBalances" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, NoAccountBalances) << std::endl;
    std::cout << "	InfoText" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, InfoText) << std::endl;
    std::cout << "	TransactionId" << " = " << offsetof(DTC_VLS::s_HistoricalAccountBalanceResponse, TransactionId) << std::endl;
    std::cout << "DTC_VLS::s_UserMessage" << " = " << sizeof(DTC_VLS::s_UserMessage) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_UserMessage, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_UserMessage, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_UserMessage, BaseSize) << std::endl;
    std::cout << "	UserMessage" << " = " << offsetof(DTC_VLS::s_UserMessage, UserMessage) << std::endl;
    std::cout << "	IsPopupMessage" << " = " << offsetof(DTC_VLS::s_UserMessage, IsPopupMessage) << std::endl;
    std::cout << "DTC_VLS::s_GeneralLogMessage" << " = " << sizeof(DTC_VLS::s_GeneralLogMessage) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_GeneralLogMessage, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_GeneralLogMessage, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_GeneralLogMessage, BaseSize) << std::endl;
    std::cout << "	MessageText" << " = " << offsetof(DTC_VLS::s_GeneralLogMessage, MessageText) << std::endl;
    std::cout << "DTC_VLS::s_AlertMessage" << " = " << sizeof(DTC_VLS::s_AlertMessage) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_AlertMessage, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_AlertMessage, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_AlertMessage, BaseSize) << std::endl;
    std::cout << "	MessageText" << " = " << offsetof(DTC_VLS::s_AlertMessage, MessageText) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_AlertMessage, TradeAccount) << std::endl;
    std::cout << "DTC_VLS::s_JournalEntryAdd" << " = " << sizeof(DTC_VLS::s_JournalEntryAdd) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_JournalEntryAdd, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_JournalEntryAdd, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_JournalEntryAdd, BaseSize) << std::endl;
    std::cout << "	JournalEntry" << " = " << offsetof(DTC_VLS::s_JournalEntryAdd, JournalEntry) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC_VLS::s_JournalEntryAdd, DateTime) << std::endl;
    std::cout << "DTC_VLS::s_JournalEntriesReject" << " = " << sizeof(DTC_VLS::s_JournalEntriesReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_JournalEntriesReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_JournalEntriesReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_JournalEntriesReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_JournalEntriesReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_JournalEntriesReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_JournalEntryResponse" << " = " << sizeof(DTC_VLS::s_JournalEntryResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_JournalEntryResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_JournalEntryResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_JournalEntryResponse, BaseSize) << std::endl;
    std::cout << "	JournalEntry" << " = " << offsetof(DTC_VLS::s_JournalEntryResponse, JournalEntry) << std::endl;
    std::cout << "	DateTime" << " = " << offsetof(DTC_VLS::s_JournalEntryResponse, DateTime) << std::endl;
    std::cout << "	IsFinalResponse" << " = " << offsetof(DTC_VLS::s_JournalEntryResponse, IsFinalResponse) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalPriceDataRequest" << " = " << sizeof(DTC_VLS::s_HistoricalPriceDataRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, Exchange) << std::endl;
    std::cout << "	RecordInterval" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, RecordInterval) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, StartDateTime) << std::endl;
    std::cout << "	EndDateTime" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, EndDateTime) << std::endl;
    std::cout << "	MaxDaysToReturn" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, MaxDaysToReturn) << std::endl;
    std::cout << "	UseZLibCompression" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, UseZLibCompression) << std::endl;
    std::cout << "	RequestDividendAdjustedStockData" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, RequestDividendAdjustedStockData) << std::endl;
    std::cout << "	Integer_1" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataRequest, Integer_1) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalPriceDataReject" << " = " << sizeof(DTC_VLS::s_HistoricalPriceDataReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataReject, RejectText) << std::endl;
    std::cout << "	RejectReasonCode" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataReject, RejectReasonCode) << std::endl;
    std::cout << "	RetryTimeInSeconds" << " = " << offsetof(DTC_VLS::s_HistoricalPriceDataReject, RetryTimeInSeconds) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalMarketDepthDataRequest" << " = " << sizeof(DTC_VLS::s_HistoricalMarketDepthDataRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataRequest, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataRequest, Symbol) << std::endl;
    std::cout << "	Exchange" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataRequest, Exchange) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataRequest, StartDateTime) << std::endl;
    std::cout << "	EndDateTime" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataRequest, EndDateTime) << std::endl;
    std::cout << "	UseZLibCompression" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataRequest, UseZLibCompression) << std::endl;
    std::cout << "	Integer_1" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataRequest, Integer_1) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalMarketDepthDataReject" << " = " << sizeof(DTC_VLS::s_HistoricalMarketDepthDataReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataReject, RejectText) << std::endl;
    std::cout << "	RejectReasonCode" << " = " << offsetof(DTC_VLS::s_HistoricalMarketDepthDataReject, RejectReasonCode) << std::endl;
    std::cout << "DTC_VLS::s_SCConfigurationSynchronization" << " = " << sizeof(DTC_VLS::s_SCConfigurationSynchronization) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_SCConfigurationSynchronization, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_SCConfigurationSynchronization, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_SCConfigurationSynchronization, BaseSize) << std::endl;
    std::cout << "	MessageID" << " = " << offsetof(DTC_VLS::s_SCConfigurationSynchronization, MessageID) << std::endl;
    std::cout << "	CurrentInboundSequenceNumber" << " = " << offsetof(DTC_VLS::s_SCConfigurationSynchronization, CurrentInboundSequenceNumber) << std::endl;
    std::cout << "	CurrentOutboundSequenceNumber" << " = " << offsetof(DTC_VLS::s_SCConfigurationSynchronization, CurrentOutboundSequenceNumber) << std::endl;
    std::cout << "	CurrentInternalOrderID" << " = " << offsetof(DTC_VLS::s_SCConfigurationSynchronization, CurrentInternalOrderID) << std::endl;
    std::cout << "	IsSnapshot" << " = " << offsetof(DTC_VLS::s_SCConfigurationSynchronization, IsSnapshot) << std::endl;
    std::cout << "	LastReceivedExecutionIdentifier" << " = " << offsetof(DTC_VLS::s_SCConfigurationSynchronization, LastReceivedExecutionIdentifier) << std::endl;
    std::cout << "DTC_VLS::s_DownloadHistoricalOrderFillAndAccountBalanceData" << " = " << sizeof(DTC_VLS::s_DownloadHistoricalOrderFillAndAccountBalanceData) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_DownloadHistoricalOrderFillAndAccountBalanceData, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_DownloadHistoricalOrderFillAndAccountBalanceData, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_DownloadHistoricalOrderFillAndAccountBalanceData, BaseSize) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_DownloadHistoricalOrderFillAndAccountBalanceData, TradeAccount) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalTradesRequest" << " = " << sizeof(DTC_VLS::s_HistoricalTradesRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalTradesRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalTradesRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalTradesRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalTradesRequest, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_HistoricalTradesRequest, Symbol) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_HistoricalTradesRequest, TradeAccount) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC_VLS::s_HistoricalTradesRequest, StartDateTime) << std::endl;
    std::cout << "	SubAccountIdentifier" << " = " << offsetof(DTC_VLS::s_HistoricalTradesRequest, SubAccountIdentifier) << std::endl;
    std::cout << "	CreateFlatToFlatTrades" << " = " << offsetof(DTC_VLS::s_HistoricalTradesRequest, CreateFlatToFlatTrades) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalTradesReject" << " = " << sizeof(DTC_VLS::s_HistoricalTradesReject) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalTradesReject, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalTradesReject, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalTradesReject, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalTradesReject, RequestID) << std::endl;
    std::cout << "	RejectText" << " = " << offsetof(DTC_VLS::s_HistoricalTradesReject, RejectText) << std::endl;
    std::cout << "DTC_VLS::s_HistoricalTradesResponse" << " = " << sizeof(DTC_VLS::s_HistoricalTradesResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, RequestID) << std::endl;
    std::cout << "	IsFinalMessage" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, IsFinalMessage) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, Symbol) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, TradeAccount) << std::endl;
    std::cout << "	EntryDateTime" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, EntryDateTime) << std::endl;
    std::cout << "	ExitDateTime" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, ExitDateTime) << std::endl;
    std::cout << "	EntryPrice" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, EntryPrice) << std::endl;
    std::cout << "	ExitPrice" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, ExitPrice) << std::endl;
    std::cout << "	TradeType" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, TradeType) << std::endl;
    std::cout << "	EntryQuantity" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, EntryQuantity) << std::endl;
    std::cout << "	ExitQuantity" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, ExitQuantity) << std::endl;
    std::cout << "	MaxOpenQuantity" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, MaxOpenQuantity) << std::endl;
    std::cout << "	ClosedProfitLoss" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, ClosedProfitLoss) << std::endl;
    std::cout << "	MaximumOpenPositionLoss" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, MaximumOpenPositionLoss) << std::endl;
    std::cout << "	MaximumOpenPositionProfit" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, MaximumOpenPositionProfit) << std::endl;
    std::cout << "	Commission" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, Commission) << std::endl;
    std::cout << "	OpenFillExecutionID" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, OpenFillExecutionID) << std::endl;
    std::cout << "	CloseFillExecutionID" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, CloseFillExecutionID) << std::endl;
    std::cout << "	SubAccountIdentifier" << " = " << offsetof(DTC_VLS::s_HistoricalTradesResponse, SubAccountIdentifier) << std::endl;
    std::cout << "DTC_VLS::s_ReplayChartData" << " = " << sizeof(DTC_VLS::s_ReplayChartData) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_ReplayChartData, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_ReplayChartData, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_ReplayChartData, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_ReplayChartData, RequestID) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_ReplayChartData, Symbol) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_ReplayChartData, TradeAccount) << std::endl;
    std::cout << "	TimeZone" << " = " << offsetof(DTC_VLS::s_ReplayChartData, TimeZone) << std::endl;
    std::cout << "	StartDateTimeForInitialData" << " = " << offsetof(DTC_VLS::s_ReplayChartData, StartDateTimeForInitialData) << std::endl;
    std::cout << "	StartDateTime" << " = " << offsetof(DTC_VLS::s_ReplayChartData, StartDateTime) << std::endl;
    std::cout << "	StopDateTime" << " = " << offsetof(DTC_VLS::s_ReplayChartData, StopDateTime) << std::endl;
    std::cout << "	SessionBeginTimeInSeconds" << " = " << offsetof(DTC_VLS::s_ReplayChartData, SessionBeginTimeInSeconds) << std::endl;
    std::cout << "	SessionEndTimeInSeconds" << " = " << offsetof(DTC_VLS::s_ReplayChartData, SessionEndTimeInSeconds) << std::endl;
    std::cout << "	ReplaySpeed" << " = " << offsetof(DTC_VLS::s_ReplayChartData, ReplaySpeed) << std::endl;
    std::cout << "	BarTimeInSeconds" << " = " << offsetof(DTC_VLS::s_ReplayChartData, BarTimeInSeconds) << std::endl;
    std::cout << "	PauseReplayAfterInitialDataSent" << " = " << offsetof(DTC_VLS::s_ReplayChartData, PauseReplayAfterInitialDataSent) << std::endl;
    std::cout << "	UseSavedPriorState" << " = " << offsetof(DTC_VLS::s_ReplayChartData, UseSavedPriorState) << std::endl;
    std::cout << "	SymbolVolatility" << " = " << offsetof(DTC_VLS::s_ReplayChartData, SymbolVolatility) << std::endl;
    std::cout << "	InterestRate" << " = " << offsetof(DTC_VLS::s_ReplayChartData, InterestRate) << std::endl;
    std::cout << "	NumberOfOrdersToTriggerFinishToStopDateTime" << " = " << offsetof(DTC_VLS::s_ReplayChartData, NumberOfOrdersToTriggerFinishToStopDateTime) << std::endl;
    std::cout << "	MaximumNumberOfOrdersPerReplaySession" << " = " << offsetof(DTC_VLS::s_ReplayChartData, MaximumNumberOfOrdersPerReplaySession) << std::endl;
    std::cout << "	NumberOfDaysForInitialDataFromBeforeLastSavedDateTime" << " = " << offsetof(DTC_VLS::s_ReplayChartData, NumberOfDaysForInitialDataFromBeforeLastSavedDateTime) << std::endl;
    std::cout << "	SubAccountIdentifier" << " = " << offsetof(DTC_VLS::s_ReplayChartData, SubAccountIdentifier) << std::endl;
    std::cout << "	OptionsPriceSendIntervalInSeconds" << " = " << offsetof(DTC_VLS::s_ReplayChartData, OptionsPriceSendIntervalInSeconds) << std::endl;
    std::cout << "DTC_VLS::s_ReplayChartDataPerformAction" << " = " << sizeof(DTC_VLS::s_ReplayChartDataPerformAction) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_ReplayChartDataPerformAction, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_ReplayChartDataPerformAction, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_ReplayChartDataPerformAction, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_ReplayChartDataPerformAction, RequestID) << std::endl;
    std::cout << "	Action" << " = " << offsetof(DTC_VLS::s_ReplayChartDataPerformAction, Action) << std::endl;
    std::cout << "	ReplaySpeed" << " = " << offsetof(DTC_VLS::s_ReplayChartDataPerformAction, ReplaySpeed) << std::endl;
    std::cout << "DTC_VLS::s_ReplayChartDataStatus" << " = " << sizeof(DTC_VLS::s_ReplayChartDataStatus) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_ReplayChartDataStatus, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_ReplayChartDataStatus, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_ReplayChartDataStatus, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_ReplayChartDataStatus, RequestID) << std::endl;
    std::cout << "	ErrorMessage" << " = " << offsetof(DTC_VLS::s_ReplayChartDataStatus, ErrorMessage) << std::endl;
    std::cout << "	Status" << " = " << offsetof(DTC_VLS::s_ReplayChartDataStatus, Status) << std::endl;
    std::cout << "	SubAccountIdentifier" << " = " << offsetof(DTC_VLS::s_ReplayChartDataStatus, SubAccountIdentifier) << std::endl;
    std::cout << "DTC_VLS::s_RequestNumCurrentClientConnections" << " = " << sizeof(DTC_VLS::s_RequestNumCurrentClientConnections) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_RequestNumCurrentClientConnections, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_RequestNumCurrentClientConnections, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_RequestNumCurrentClientConnections, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_RequestNumCurrentClientConnections, RequestID) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC_VLS::s_RequestNumCurrentClientConnections, Username) << std::endl;
    std::cout << "	DeviceIdentifier" << " = " << offsetof(DTC_VLS::s_RequestNumCurrentClientConnections, DeviceIdentifier) << std::endl;
    std::cout << "DTC_VLS::s_NumCurrentClientConnectionsResponse" << " = " << sizeof(DTC_VLS::s_NumCurrentClientConnectionsResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_NumCurrentClientConnectionsResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_NumCurrentClientConnectionsResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_NumCurrentClientConnectionsResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_NumCurrentClientConnectionsResponse, RequestID) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC_VLS::s_NumCurrentClientConnectionsResponse, Username) << std::endl;
    std::cout << "	NumConnectionsForDifferentDevices" << " = " << offsetof(DTC_VLS::s_NumCurrentClientConnectionsResponse, NumConnectionsForDifferentDevices) << std::endl;
    std::cout << "	NumConnectionsForSameDevice" << " = " << offsetof(DTC_VLS::s_NumCurrentClientConnectionsResponse, NumConnectionsForSameDevice) << std::endl;
    std::cout << "DTC_VLS::s_TradeOrder" << " = " << sizeof(DTC_VLS::s_TradeOrder) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeOrder, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeOrder, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeOrder, BaseSize) << std::endl;
    std::cout << "	m_IsOrderDeleted" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_IsOrderDeleted) << std::endl;
    std::cout << "	m_InternalOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_InternalOrderID) << std::endl;
    std::cout << "	m_OrderStatusCode" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OrderStatusCode) << std::endl;
    std::cout << "	m_OrderStatusBeforePendingModify" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OrderStatusBeforePendingModify) << std::endl;
    std::cout << "	m_OrderStatusBeforePendingCancel" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OrderStatusBeforePendingCancel) << std::endl;
    std::cout << "	m_ServiceOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ServiceOrderID) << std::endl;
    std::cout << "	m_ActualSymbol" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ActualSymbol) << std::endl;
    std::cout << "	m_OrderType" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OrderType) << std::endl;
    std::cout << "	m_BuySell" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_BuySell) << std::endl;
    std::cout << "	m_Price1" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_Price1) << std::endl;
    std::cout << "	m_Price2" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_Price2) << std::endl;
    std::cout << "	m_OrderQuantity" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OrderQuantity) << std::endl;
    std::cout << "	m_FilledQuantity" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_FilledQuantity) << std::endl;
    std::cout << "	m_AverageFillPrice" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_AverageFillPrice) << std::endl;
    std::cout << "	m_RealtimeFillStatus" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_RealtimeFillStatus) << std::endl;
    std::cout << "	m_IsRestingOrderDuringFill" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_IsRestingOrderDuringFill) << std::endl;
    std::cout << "	m_OrderRejectType" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OrderRejectType) << std::endl;
    std::cout << "	m_TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TradeAccount) << std::endl;
    std::cout << "	m_SubAccountIdentifier" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SubAccountIdentifier) << std::endl;
    std::cout << "	m_InternalOrderIDModifierForService" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_InternalOrderIDModifierForService) << std::endl;
    std::cout << "	m_FIXClientOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_FIXClientOrderID) << std::endl;
    std::cout << "	m_SequenceNumberBasedClientOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SequenceNumberBasedClientOrderID) << std::endl;
    std::cout << "	m_ClientOrderIDForDTCServer" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ClientOrderIDForDTCServer) << std::endl;
    std::cout << "	m_PreviousClientOrderIDForDTCServer" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_PreviousClientOrderIDForDTCServer) << std::endl;
    std::cout << "	m_ExchangeOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ExchangeOrderID) << std::endl;
    std::cout << "	m_OriginatingClientUsername" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OriginatingClientUsername) << std::endl;
    std::cout << "	m_EntryDateTime" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_EntryDateTime) << std::endl;
    std::cout << "	m_LastActionDateTime" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LastActionDateTime) << std::endl;
    std::cout << "	m_ServiceUpdateDateTimeUTC" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ServiceUpdateDateTimeUTC) << std::endl;
    std::cout << "	m_OrderEntryTimeForService" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OrderEntryTimeForService) << std::endl;
    std::cout << "	m_LastModifyTimeForService" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LastModifyTimeForService) << std::endl;
    std::cout << "	m_GoodTillDateTime" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_GoodTillDateTime) << std::endl;
    std::cout << "	m_TimeInForce" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TimeInForce) << std::endl;
    std::cout << "	m_OpenClose" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OpenClose) << std::endl;
    std::cout << "	m_TrailStopOffset1" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TrailStopOffset1) << std::endl;
    std::cout << "	m_TrailStopStep" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TrailStopStep) << std::endl;
    std::cout << "	m_TrailTriggerPrice" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TrailTriggerPrice) << std::endl;
    std::cout << "	m_TrailingStopTriggerOffset" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TrailingStopTriggerOffset) << std::endl;
    std::cout << "	m_TrailTriggerHit" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TrailTriggerHit) << std::endl;
    std::cout << "	m_TrailToBreakEvenStopOffset" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TrailToBreakEvenStopOffset) << std::endl;
    std::cout << "	m_MaximumChaseAmountAsPrice" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_MaximumChaseAmountAsPrice) << std::endl;
    std::cout << "	m_InitialChaseOrderPrice1" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_InitialChaseOrderPrice1) << std::endl;
    std::cout << "	m_InitialLastTradePriceForChaseOrders" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_InitialLastTradePriceForChaseOrders) << std::endl;
    std::cout << "	m_TrailingStopTriggerOCOGroupNumber" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TrailingStopTriggerOCOGroupNumber) << std::endl;
    std::cout << "	m_LastModifyPrice1" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LastModifyPrice1) << std::endl;
    std::cout << "	m_LastModifyQuantity" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LastModifyQuantity) << std::endl;
    std::cout << "	m_CumulativeOrderQuantityFromParentFills" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_CumulativeOrderQuantityFromParentFills) << std::endl;
    std::cout << "	m_PriorFilledQuantity" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_PriorFilledQuantity) << std::endl;
    std::cout << "	m_TickSize" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TickSize) << std::endl;
    std::cout << "	m_ValueFormat" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ValueFormat) << std::endl;
    std::cout << "	m_PriceMultiplier" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_PriceMultiplier) << std::endl;
    std::cout << "	m_ParentInternalOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ParentInternalOrderID) << std::endl;
    std::cout << "	m_TargetChildInternalOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TargetChildInternalOrderID) << std::endl;
    std::cout << "	m_StopChildInternalOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_StopChildInternalOrderID) << std::endl;
    std::cout << "	m_AttachedOrderPriceOffset1" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_AttachedOrderPriceOffset1) << std::endl;
    std::cout << "	m_LinkInternalOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LinkInternalOrderID) << std::endl;
    std::cout << "	m_OCOGroupInternalOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OCOGroupInternalOrderID) << std::endl;
    std::cout << "	m_OCOSiblingInternalOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OCOSiblingInternalOrderID) << std::endl;
    std::cout << "	m_DisableChildAndSiblingRelatedActions" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_DisableChildAndSiblingRelatedActions) << std::endl;
    std::cout << "	m_OCOManagedByService" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OCOManagedByService) << std::endl;
    std::cout << "	m_BracketOrderServerManaged" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_BracketOrderServerManaged) << std::endl;
    std::cout << "	m_LastOrderActionSource" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LastOrderActionSource) << std::endl;
    std::cout << "	m_StopLimitOrderStopPriceTriggered" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_StopLimitOrderStopPriceTriggered) << std::endl;
    std::cout << "	m_OCOFullSiblingCancelOnPartialFill" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OCOFullSiblingCancelOnPartialFill) << std::endl;
    std::cout << "	m_ReverseOnCompleteFill" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ReverseOnCompleteFill) << std::endl;
    std::cout << "	m_SupportScaleIn" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SupportScaleIn) << std::endl;
    std::cout << "	m_SupportScaleOut" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SupportScaleOut) << std::endl;
    std::cout << "	m_SourceChartNumber" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SourceChartNumber) << std::endl;
    std::cout << "	m_SourceChartbookFileName" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SourceChartbookFileName) << std::endl;
    std::cout << "	m_IsAutomatedOrder" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_IsAutomatedOrder) << std::endl;
    std::cout << "	m_SimulatedOrder" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SimulatedOrder) << std::endl;
    std::cout << "	m_IsChartReplaying" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_IsChartReplaying) << std::endl;
    std::cout << "	m_AttachedOrderOCOGroupNumber" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_AttachedOrderOCOGroupNumber) << std::endl;
    std::cout << "	m_LastFillExecutionServiceID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LastFillExecutionServiceID) << std::endl;
    std::cout << "	m_FillCount" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_FillCount) << std::endl;
    std::cout << "	m_LastFillQuantity" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LastFillQuantity) << std::endl;
    std::cout << "	m_LastFillPrice" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LastFillPrice) << std::endl;
    std::cout << "	m_LastFillDateTimeUTC" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LastFillDateTimeUTC) << std::endl;
    std::cout << "	m_RejectedStopOCOSiblingInternalOrderID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_RejectedStopOCOSiblingInternalOrderID) << std::endl;
    std::cout << "	m_RejectedStopReplacementMarketOrderQuantity" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_RejectedStopReplacementMarketOrderQuantity) << std::endl;
    std::cout << "	m_EvaluatingForFill" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_EvaluatingForFill) << std::endl;
    std::cout << "	m_LastProcessedTimeSalesRecordSequenceForPrices" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_LastProcessedTimeSalesRecordSequenceForPrices) << std::endl;
    std::cout << "	m_IsMarketDataManagementOfOrderEnabled" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_IsMarketDataManagementOfOrderEnabled) << std::endl;
    std::cout << "	m_TextTag" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TextTag) << std::endl;
    std::cout << "	m_TimedOutOrderRequestedStatusDateTime" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_TimedOutOrderRequestedStatusDateTime) << std::endl;
    std::cout << "	m_RequestedStatusForTimedOutOrder" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_RequestedStatusForTimedOutOrder) << std::endl;
    std::cout << "	m_SendFlattenMarketOrderWhenRelatedOrdersConfirmedCanceled" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SendFlattenMarketOrderWhenRelatedOrdersConfirmedCanceled) << std::endl;
    std::cout << "	m_QuantityToIncreaseFromParentFill" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_QuantityToIncreaseFromParentFill) << std::endl;
    std::cout << "	m_MoveToBreakevenStopReferencePrice" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_MoveToBreakevenStopReferencePrice) << std::endl;
    std::cout << "	m_QuantityTriggeredStop_QuantityForTrigger" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_QuantityTriggeredStop_QuantityForTrigger) << std::endl;
    std::cout << "	m_AccumulatedTradeVolumeForTriggeredStop" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_AccumulatedTradeVolumeForTriggeredStop) << std::endl;
    std::cout << "	m_BidAskQuantityStopInitialTriggerMet" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_BidAskQuantityStopInitialTriggerMet) << std::endl;
    std::cout << "	m_NeedToOverrideLock" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_NeedToOverrideLock) << std::endl;
    std::cout << "	m_CurrentMarketPrice" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_CurrentMarketPrice) << std::endl;
    std::cout << "	m_CurrentMarketDateTime" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_CurrentMarketDateTime) << std::endl;
    std::cout << "	m_SupportOrderFillBilling" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SupportOrderFillBilling) << std::endl;
    std::cout << "	m_IsBillable" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_IsBillable) << std::endl;
    std::cout << "	m_QuantityForBilling" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_QuantityForBilling) << std::endl;
    std::cout << "	m_NumberOfFailedOrderModifications" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_NumberOfFailedOrderModifications) << std::endl;
    std::cout << "	m_DTCServerIndex" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_DTCServerIndex) << std::endl;
    std::cout << "	m_ClearingFirmID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ClearingFirmID) << std::endl;
    std::cout << "	m_SenderSubID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SenderSubID) << std::endl;
    std::cout << "	m_SenderLocationId" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SenderLocationId) << std::endl;
    std::cout << "	m_SelfMatchPreventionID" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_SelfMatchPreventionID) << std::endl;
    std::cout << "	m_CTICode" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_CTICode) << std::endl;
    std::cout << "	m_ObtainOrderActionDateTimeFromLastTradeTimeInChart" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ObtainOrderActionDateTimeFromLastTradeTimeInChart) << std::endl;
    std::cout << "	m_MaximumShowQuantity" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_MaximumShowQuantity) << std::endl;
    std::cout << "	m_OrderSubmitted" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_OrderSubmitted) << std::endl;
    std::cout << "	m_IsSnapshot" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_IsSnapshot) << std::endl;
    std::cout << "	m_IsFirstMessageInBatch" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_IsFirstMessageInBatch) << std::endl;
    std::cout << "	m_IsLastMessageInBatch" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_IsLastMessageInBatch) << std::endl;
    std::cout << "	m_ExternalLastActionDateTimeUTC" << " = " << offsetof(DTC_VLS::s_TradeOrder, m_ExternalLastActionDateTimeUTC) << std::endl;
    std::cout << "DTC_VLS::s_IndividualTradePosition" << " = " << sizeof(DTC_VLS::s_IndividualTradePosition) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, BaseSize) << std::endl;
    std::cout << "	m_Symbol" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_Symbol) << std::endl;
    std::cout << "	m_IsSimulated" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_IsSimulated) << std::endl;
    std::cout << "	m_TradeAccount" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_TradeAccount) << std::endl;
    std::cout << "	m_Quantity" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_Quantity) << std::endl;
    std::cout << "	m_PositionPrice" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_PositionPrice) << std::endl;
    std::cout << "	m_OpenProfitLoss" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_OpenProfitLoss) << std::endl;
    std::cout << "	m_TradeDateTime" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_TradeDateTime) << std::endl;
    std::cout << "	m_FillExecutionIdentifier" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_FillExecutionIdentifier) << std::endl;
    std::cout << "	m_IsSnapshot" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_IsSnapshot) << std::endl;
    std::cout << "	m_IsFirstMessageInBatch" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_IsFirstMessageInBatch) << std::endl;
    std::cout << "	m_IsLastMessageInBatch" << " = " << offsetof(DTC_VLS::s_IndividualTradePosition, m_IsLastMessageInBatch) << std::endl;
    std::cout << "DTC_VLS::s_TradePositionConsolidated" << " = " << sizeof(DTC_VLS::s_TradePositionConsolidated) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, BaseSize) << std::endl;
    std::cout << "	m_IsDeleted" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_IsDeleted) << std::endl;
    std::cout << "	m_Symbol" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_Symbol) << std::endl;
    std::cout << "	m_IsSimulated" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_IsSimulated) << std::endl;
    std::cout << "	m_TradeAccount" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_TradeAccount) << std::endl;
    std::cout << "	m_CurrencyCode" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_CurrencyCode) << std::endl;
    std::cout << "	m_Quantity" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_Quantity) << std::endl;
    std::cout << "	m_AveragePrice" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_AveragePrice) << std::endl;
    std::cout << "	m_OpenProfitLoss" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_OpenProfitLoss) << std::endl;
    std::cout << "	m_DailyProfitLoss" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_DailyProfitLoss) << std::endl;
    std::cout << "	m_LastDailyProfitLossResetDateTimeUTC" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_LastDailyProfitLossResetDateTimeUTC) << std::endl;
    std::cout << "	m_ServicePositionQuantity" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_ServicePositionQuantity) << std::endl;
    std::cout << "	m_PositionHasBeenUpdatedByService" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_PositionHasBeenUpdatedByService) << std::endl;
    std::cout << "	m_PriceHighDuringPosition" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_PriceHighDuringPosition) << std::endl;
    std::cout << "	m_PriceLowDuringPosition" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_PriceLowDuringPosition) << std::endl;
    std::cout << "	m_PriceLastDuringPosition" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_PriceLastDuringPosition) << std::endl;
    std::cout << "	m_LastProcessedTimeAndSalesSequence" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_LastProcessedTimeAndSalesSequence) << std::endl;
    std::cout << "	m_TotalMarginRequirement" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_TotalMarginRequirement) << std::endl;
    std::cout << "	m_InitialEntryDateTimeUTC" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_InitialEntryDateTimeUTC) << std::endl;
    std::cout << "	m_IsFromDTCServerReplay" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_IsFromDTCServerReplay) << std::endl;
    std::cout << "	m_MostRecentPositionIncreaseDateTimeUTC" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_MostRecentPositionIncreaseDateTimeUTC) << std::endl;
    std::cout << "	m_IsSnapshot" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_IsSnapshot) << std::endl;
    std::cout << "	m_IsFirstMessageInBatch" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_IsFirstMessageInBatch) << std::endl;
    std::cout << "	m_IsLastMessageInBatch" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_IsLastMessageInBatch) << std::endl;
    std::cout << "	m_MarginRequirementFull" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_MarginRequirementFull) << std::endl;
    std::cout << "	m_MarginRequirementFullPositionsOnly" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_MarginRequirementFullPositionsOnly) << std::endl;
    std::cout << "	m_MaxPotentialPositionQuantity" << " = " << offsetof(DTC_VLS::s_TradePositionConsolidated, m_MaxPotentialPositionQuantity) << std::endl;
    std::cout << "DTC_VLS::s_TradeActivityData" << " = " << sizeof(DTC_VLS::s_TradeActivityData) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeActivityData, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeActivityData, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeActivityData, BaseSize) << std::endl;
    std::cout << "	ActivityType" << " = " << offsetof(DTC_VLS::s_TradeActivityData, ActivityType) << std::endl;
    std::cout << "	DataDateTimeUTC" << " = " << offsetof(DTC_VLS::s_TradeActivityData, DataDateTimeUTC) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_TradeActivityData, Symbol) << std::endl;
    std::cout << "	OrderActionSource" << " = " << offsetof(DTC_VLS::s_TradeActivityData, OrderActionSource) << std::endl;
    std::cout << "	InternalOrderID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, InternalOrderID) << std::endl;
    std::cout << "	ServiceOrderID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, ServiceOrderID) << std::endl;
    std::cout << "	ExchangeOrderID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, ExchangeOrderID) << std::endl;
    std::cout << "	FIXClientOrderID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, FIXClientOrderID) << std::endl;
    std::cout << "	OrderTypeName" << " = " << offsetof(DTC_VLS::s_TradeActivityData, OrderTypeName) << std::endl;
    std::cout << "	Quantity" << " = " << offsetof(DTC_VLS::s_TradeActivityData, Quantity) << std::endl;
    std::cout << "	BuySell" << " = " << offsetof(DTC_VLS::s_TradeActivityData, BuySell) << std::endl;
    std::cout << "	Price1" << " = " << offsetof(DTC_VLS::s_TradeActivityData, Price1) << std::endl;
    std::cout << "	Price2" << " = " << offsetof(DTC_VLS::s_TradeActivityData, Price2) << std::endl;
    std::cout << "	NewOrderStatus" << " = " << offsetof(DTC_VLS::s_TradeActivityData, NewOrderStatus) << std::endl;
    std::cout << "	FillPrice" << " = " << offsetof(DTC_VLS::s_TradeActivityData, FillPrice) << std::endl;
    std::cout << "	OrderFilledQuantity" << " = " << offsetof(DTC_VLS::s_TradeActivityData, OrderFilledQuantity) << std::endl;
    std::cout << "	HighPriceDuringPosition" << " = " << offsetof(DTC_VLS::s_TradeActivityData, HighPriceDuringPosition) << std::endl;
    std::cout << "	LowPriceDuringPosition" << " = " << offsetof(DTC_VLS::s_TradeActivityData, LowPriceDuringPosition) << std::endl;
    std::cout << "	LastPriceDuringPosition" << " = " << offsetof(DTC_VLS::s_TradeActivityData, LastPriceDuringPosition) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeActivityData, TradeAccount) << std::endl;
    std::cout << "	ParentInternalOrderID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, ParentInternalOrderID) << std::endl;
    std::cout << "	OpenClose" << " = " << offsetof(DTC_VLS::s_TradeActivityData, OpenClose) << std::endl;
    std::cout << "	IsSimulated" << " = " << offsetof(DTC_VLS::s_TradeActivityData, IsSimulated) << std::endl;
    std::cout << "	IsAutomatedOrder" << " = " << offsetof(DTC_VLS::s_TradeActivityData, IsAutomatedOrder) << std::endl;
    std::cout << "	IsChartReplaying" << " = " << offsetof(DTC_VLS::s_TradeActivityData, IsChartReplaying) << std::endl;
    std::cout << "	FillExecutionServiceID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, FillExecutionServiceID) << std::endl;
    std::cout << "	PositionQuantity" << " = " << offsetof(DTC_VLS::s_TradeActivityData, PositionQuantity) << std::endl;
    std::cout << "	SourceChartNumber" << " = " << offsetof(DTC_VLS::s_TradeActivityData, SourceChartNumber) << std::endl;
    std::cout << "	SourceChartbookFileName" << " = " << offsetof(DTC_VLS::s_TradeActivityData, SourceChartbookFileName) << std::endl;
    std::cout << "	TimeInForce" << " = " << offsetof(DTC_VLS::s_TradeActivityData, TimeInForce) << std::endl;
    std::cout << "	SymbolServiceCode" << " = " << offsetof(DTC_VLS::s_TradeActivityData, SymbolServiceCode) << std::endl;
    std::cout << "	Note" << " = " << offsetof(DTC_VLS::s_TradeActivityData, Note) << std::endl;
    std::cout << "	OriginatingClientUsername" << " = " << offsetof(DTC_VLS::s_TradeActivityData, OriginatingClientUsername) << std::endl;
    std::cout << "	TradeAccountBalance" << " = " << offsetof(DTC_VLS::s_TradeActivityData, TradeAccountBalance) << std::endl;
    std::cout << "	SupportsPositionQuantityField" << " = " << offsetof(DTC_VLS::s_TradeActivityData, SupportsPositionQuantityField) << std::endl;
    std::cout << "	IsBillable" << " = " << offsetof(DTC_VLS::s_TradeActivityData, IsBillable) << std::endl;
    std::cout << "	QuantityForBilling" << " = " << offsetof(DTC_VLS::s_TradeActivityData, QuantityForBilling) << std::endl;
    std::cout << "	OrderRoutingServiceCode" << " = " << offsetof(DTC_VLS::s_TradeActivityData, OrderRoutingServiceCode) << std::endl;
    std::cout << "	SubAccountIdentifier" << " = " << offsetof(DTC_VLS::s_TradeActivityData, SubAccountIdentifier) << std::endl;
    std::cout << "	AuditTrail_TransactDateTimeUTC" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_TransactDateTimeUTC) << std::endl;
    std::cout << "	AuditTrail_MessageDirection" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_MessageDirection) << std::endl;
    std::cout << "	AuditTrail_OperatorID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_OperatorID) << std::endl;
    std::cout << "	AuditTrail_SelfMatchPreventionID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_SelfMatchPreventionID) << std::endl;
    std::cout << "	AuditTrail_SessionID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_SessionID) << std::endl;
    std::cout << "	AuditTrail_ExecutingFirmID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_ExecutingFirmID) << std::endl;
    std::cout << "	AuditTrail_FixMessageType" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_FixMessageType) << std::endl;
    std::cout << "	AuditTrail_CustomerTypeIndicator" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_CustomerTypeIndicator) << std::endl;
    std::cout << "	AuditTrail_CustomerOrFirm" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_CustomerOrFirm) << std::endl;
    std::cout << "	AuditTrail_ExecutionReportID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_ExecutionReportID) << std::endl;
    std::cout << "	AuditTrail_SpreadLegLinkID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_SpreadLegLinkID) << std::endl;
    std::cout << "	AuditTrail_SecurityDesc" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_SecurityDesc) << std::endl;
    std::cout << "	AuditTrail_MarketSegmentID" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_MarketSegmentID) << std::endl;
    std::cout << "	AuditTrail_IFMFlag" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_IFMFlag) << std::endl;
    std::cout << "	AuditTrail_DisplayQuantity" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_DisplayQuantity) << std::endl;
    std::cout << "	AuditTrail_CountryOfOrigin" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_CountryOfOrigin) << std::endl;
    std::cout << "	AuditTrail_FillQuantity" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_FillQuantity) << std::endl;
    std::cout << "	AuditTrail_RemainingQuantity" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_RemainingQuantity) << std::endl;
    std::cout << "	AuditTrail_AggressorFlag" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_AggressorFlag) << std::endl;
    std::cout << "	AuditTrail_SourceOfCancellation" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_SourceOfCancellation) << std::endl;
    std::cout << "	AuditTrail_OrdRejReason" << " = " << offsetof(DTC_VLS::s_TradeActivityData, AuditTrail_OrdRejReason) << std::endl;
    std::cout << "	IsSnapshot" << " = " << offsetof(DTC_VLS::s_TradeActivityData, IsSnapshot) << std::endl;
    std::cout << "	IsFirstMessageInBatch" << " = " << offsetof(DTC_VLS::s_TradeActivityData, IsFirstMessageInBatch) << std::endl;
    std::cout << "	IsLastMessageInBatch" << " = " << offsetof(DTC_VLS::s_TradeActivityData, IsLastMessageInBatch) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataRequest" << " = " << sizeof(DTC_VLS::s_TradeAccountDataRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataRequest, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataRequest, TradeAccount) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataResponse" << " = " << sizeof(DTC_VLS::s_TradeAccountDataResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, BaseSize) << std::endl;
    std::cout << "	m_RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_RequestID) << std::endl;
    std::cout << "	m_TradeAccountNotExist" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_TradeAccountNotExist) << std::endl;
    std::cout << "	m_TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_TradeAccount) << std::endl;
    std::cout << "	m_IsSimulated" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_IsSimulated) << std::endl;
    std::cout << "	m_CurrencyCode" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_CurrencyCode) << std::endl;
    std::cout << "	m_CurrentCashBalance" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_CurrentCashBalance) << std::endl;
    std::cout << "	m_AvailableFundsForNewPositions" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_AvailableFundsForNewPositions) << std::endl;
    std::cout << "	m_MarginRequirement" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MarginRequirement) << std::endl;
    std::cout << "	m_AccountValue" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_AccountValue) << std::endl;
    std::cout << "	m_OpenPositionsProfitLoss" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_OpenPositionsProfitLoss) << std::endl;
    std::cout << "	m_DailyProfitLoss" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_DailyProfitLoss) << std::endl;
    std::cout << "	m_TransactionIdentifierForCashBalanceAdjustment" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_TransactionIdentifierForCashBalanceAdjustment) << std::endl;
    std::cout << "	m_LastTransactionDateTime" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_LastTransactionDateTime) << std::endl;
    std::cout << "	m_TrailingAccountValueAtWhichToNotAllowNewPositions" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_TrailingAccountValueAtWhichToNotAllowNewPositions) << std::endl;
    std::cout << "	m_CalculatedDailyNetLossLimitInAccountCurrency" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_CalculatedDailyNetLossLimitInAccountCurrency) << std::endl;
    std::cout << "	m_DailyNetLossLimitHasBeenReached" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_DailyNetLossLimitHasBeenReached) << std::endl;
    std::cout << "	m_LastResetDailyNetLossManagementVariablesDateTimeUTC" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_LastResetDailyNetLossManagementVariablesDateTimeUTC) << std::endl;
    std::cout << "	m_IsUnderRequiredMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_IsUnderRequiredMargin) << std::endl;
    std::cout << "	m_DailyNetLossLimitInAccountCurrency" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_DailyNetLossLimitInAccountCurrency) << std::endl;
    std::cout << "	m_PercentOfCashBalanceForDailyNetLossLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_PercentOfCashBalanceForDailyNetLossLimit) << std::endl;
    std::cout << "	m_UseTrailingAccountValueToNotAllowIncreaseInPositions" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseTrailingAccountValueToNotAllowIncreaseInPositions) << std::endl;
    std::cout << "	m_DoNotAllowIncreaseInPositionsAtDailyLossLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_DoNotAllowIncreaseInPositionsAtDailyLossLimit) << std::endl;
    std::cout << "	m_FlattenPositionsAtDailyLossLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_FlattenPositionsAtDailyLossLimit) << std::endl;
    std::cout << "	m_ClosePositionsAtEndOfDay" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_ClosePositionsAtEndOfDay) << std::endl;
    std::cout << "	m_FlattenPositionsWhenUnderMarginIntraday" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_FlattenPositionsWhenUnderMarginIntraday) << std::endl;
    std::cout << "	m_FlattenPositionsWhenUnderMarginAtEndOfDay" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_FlattenPositionsWhenUnderMarginAtEndOfDay) << std::endl;
    std::cout << "	m_SenderSubID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_SenderSubID) << std::endl;
    std::cout << "	m_SenderLocationId" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_SenderLocationId) << std::endl;
    std::cout << "	m_SelfMatchPreventionID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_SelfMatchPreventionID) << std::endl;
    std::cout << "	m_CTICode" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_CTICode) << std::endl;
    std::cout << "	m_TradeAccountIsReadOnly" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_TradeAccountIsReadOnly) << std::endl;
    std::cout << "	m_MaximumGlobalPositionQuantity" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MaximumGlobalPositionQuantity) << std::endl;
    std::cout << "	m_TradeFeePerContract" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_TradeFeePerContract) << std::endl;
    std::cout << "	m_TradeFeePerShare" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_TradeFeePerShare) << std::endl;
    std::cout << "	m_RequireSufficientMarginForNewPositions" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_RequireSufficientMarginForNewPositions) << std::endl;
    std::cout << "	m_UsePercentOfMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UsePercentOfMargin) << std::endl;
    std::cout << "	m_UsePercentOfMarginForDayTrading" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UsePercentOfMarginForDayTrading) << std::endl;
    std::cout << "	m_MaximumAllowedAccountBalanceForPositionsAsPercentage" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MaximumAllowedAccountBalanceForPositionsAsPercentage) << std::endl;
    std::cout << "	m_FirmID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_FirmID) << std::endl;
    std::cout << "	m_TradingIsDisabled" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_TradingIsDisabled) << std::endl;
    std::cout << "	m_DescriptiveName" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_DescriptiveName) << std::endl;
    std::cout << "	m_IsMasterFirmControlAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_IsMasterFirmControlAccount) << std::endl;
    std::cout << "	m_MinimumRequiredAccountValue" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MinimumRequiredAccountValue) << std::endl;
    std::cout << "	m_BeginTimeForDayMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_BeginTimeForDayMargin) << std::endl;
    std::cout << "	m_EndTimeForDayMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_EndTimeForDayMargin) << std::endl;
    std::cout << "	m_DayMarginTimeZone" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_DayMarginTimeZone) << std::endl;
    std::cout << "	m_IsSnapshot" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_IsSnapshot) << std::endl;
    std::cout << "	m_IsFirstMessageInBatch" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_IsFirstMessageInBatch) << std::endl;
    std::cout << "	m_IsLastMessageInBatch" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_IsLastMessageInBatch) << std::endl;
    std::cout << "	m_IsDeleted" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_IsDeleted) << std::endl;
    std::cout << "	m_UseMasterFirm_FlattenPositionsWhenUnderMarginIntraday" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_FlattenPositionsWhenUnderMarginIntraday) << std::endl;
    std::cout << "	m_UseMasterFirm_FlattenPositionsWhenUnderMarginAtEndOfDay" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_FlattenPositionsWhenUnderMarginAtEndOfDay) << std::endl;
    std::cout << "	m_UseMasterFirm_SymbolLimitsArray" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_SymbolLimitsArray) << std::endl;
    std::cout << "	m_UseMasterFirm_TradeFees" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_TradeFees) << std::endl;
    std::cout << "	m_UseMasterFirm_TradeFeePerShare" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_TradeFeePerShare) << std::endl;
    std::cout << "	m_UseMasterFirm_RequireSufficientMarginForNewPositions" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_RequireSufficientMarginForNewPositions) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_UsePercentOfMargin) << std::endl;
    std::cout << "	m_UseMasterFirm_MaximumAllowedAccountBalanceForPositionsAsPercentage" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_MaximumAllowedAccountBalanceForPositionsAsPercentage) << std::endl;
    std::cout << "	m_UseMasterFirm_MinimumRequiredAccountValue" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_MinimumRequiredAccountValue) << std::endl;
    std::cout << "	m_UseMasterFirm_MarginTimeSettings" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_MarginTimeSettings) << std::endl;
    std::cout << "	m_UseMasterFirm_TradingIsDisabled" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_TradingIsDisabled) << std::endl;
    std::cout << "	m_IsTradeStatisticsPublicallyShared" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_IsTradeStatisticsPublicallyShared) << std::endl;
    std::cout << "	m_IsReadOnlyFollowingRequestsAllowed" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_IsReadOnlyFollowingRequestsAllowed) << std::endl;
    std::cout << "	m_IsTradeAccountSharingAllowed" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_IsTradeAccountSharingAllowed) << std::endl;
    std::cout << "	m_ReadOnlyShareToAllSCUsernames" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_ReadOnlyShareToAllSCUsernames) << std::endl;
    std::cout << "	m_UseMasterFirm_SymbolCommissionsArray" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_SymbolCommissionsArray) << std::endl;
    std::cout << "	m_UseMasterFirm_DoNotAllowIncreaseInPositionsAtDailyLossLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_DoNotAllowIncreaseInPositionsAtDailyLossLimit) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMarginForDayTrading" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_UsePercentOfMarginForDayTrading) << std::endl;
    std::cout << "	m_OpenPositionsProfitLossBasedOnSettlement" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_OpenPositionsProfitLossBasedOnSettlement) << std::endl;
    std::cout << "	m_MarginRequirementFull" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MarginRequirementFull) << std::endl;
    std::cout << "	m_MarginRequirementFullPositionsOnly" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MarginRequirementFullPositionsOnly) << std::endl;
    std::cout << "	m_UseMasterFirm_TradeFeesFullOverride" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_TradeFeesFullOverride) << std::endl;
    std::cout << "	m_UseMasterFirm_NumDaysBeforeLastTradingDateToDisallowOrders" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_NumDaysBeforeLastTradingDateToDisallowOrders) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMarginFullOverride" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_UsePercentOfMarginFullOverride) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMarginForDayTradingFullOverride" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_UseMasterFirm_UsePercentOfMarginForDayTradingFullOverride) << std::endl;
    std::cout << "	m_PeakMarginRequirement" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_PeakMarginRequirement) << std::endl;
    std::cout << "	m_LiquidationOnlyMode" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_LiquidationOnlyMode) << std::endl;
    std::cout << "	m_FlattenPositionsWhenUnderMarginIntradayTriggered" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_FlattenPositionsWhenUnderMarginIntradayTriggered) << std::endl;
    std::cout << "	m_FlattenPositionsWhenUnderMinimumAccountValueTriggered" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_FlattenPositionsWhenUnderMinimumAccountValueTriggered) << std::endl;
    std::cout << "	m_AccountValueAtEndOfDayCaptureTime" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_AccountValueAtEndOfDayCaptureTime) << std::endl;
    std::cout << "	m_EndOfDayCaptureTime" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_EndOfDayCaptureTime) << std::endl;
    std::cout << "	m_CustomerOrFirm" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_CustomerOrFirm) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelAccountWhenDailyLossLimitMet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MasterFirm_FlattenCancelAccountWhenDailyLossLimitMet) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelWhenUnderMinimumAccountValue" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MasterFirm_FlattenCancelWhenUnderMinimumAccountValue) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelWhenUnderMarginIntraday" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MasterFirm_FlattenCancelWhenUnderMarginIntraday) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelWhenUnderMarginEndOfDay" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MasterFirm_FlattenCancelWhenUnderMarginEndOfDay) << std::endl;
    std::cout << "	m_MasterFirm_MaximumOrderQuantity" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_MasterFirm_MaximumOrderQuantity) << std::endl;
    std::cout << "	m_LastTriggerDateTimeUTCForDailyLossLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_LastTriggerDateTimeUTCForDailyLossLimit) << std::endl;
    std::cout << "	m_OpenPositionsProfitLossIsDelayed" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_OpenPositionsProfitLossIsDelayed) << std::endl;
    std::cout << "	m_ExchangeTraderId" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponse, m_ExchangeTraderId) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataUpdate" << " = " << sizeof(DTC_VLS::s_TradeAccountDataUpdate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, RequestID) << std::endl;
    std::cout << "	IsNewAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, IsNewAccount) << std::endl;
    std::cout << "	NewAccountAuthorizedUsername" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, NewAccountAuthorizedUsername) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, TradeAccount) << std::endl;
    std::cout << "	CurrencyCodeIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, CurrencyCodeIsSet) << std::endl;
    std::cout << "	CurrencyCode" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, CurrencyCode) << std::endl;
    std::cout << "	DailyNetLossLimitInAccountCurrencyIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, DailyNetLossLimitInAccountCurrencyIsSet) << std::endl;
    std::cout << "	DailyNetLossLimitInAccountCurrency" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, DailyNetLossLimitInAccountCurrency) << std::endl;
    std::cout << "	PercentOfCashBalanceForDailyNetLossLimitIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, PercentOfCashBalanceForDailyNetLossLimitIsSet) << std::endl;
    std::cout << "	PercentOfCashBalanceForDailyNetLossLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, PercentOfCashBalanceForDailyNetLossLimit) << std::endl;
    std::cout << "	UseTrailingAccountValueToNotAllowIncreaseInPositionsIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, UseTrailingAccountValueToNotAllowIncreaseInPositionsIsSet) << std::endl;
    std::cout << "	UseTrailingAccountValueToNotAllowIncreaseInPositions" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, UseTrailingAccountValueToNotAllowIncreaseInPositions) << std::endl;
    std::cout << "	DoNotAllowIncreaseInPositionsAtDailyLossLimitIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, DoNotAllowIncreaseInPositionsAtDailyLossLimitIsSet) << std::endl;
    std::cout << "	DoNotAllowIncreaseInPositionsAtDailyLossLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, DoNotAllowIncreaseInPositionsAtDailyLossLimit) << std::endl;
    std::cout << "	FlattenPositionsAtDailyLossLimitIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, FlattenPositionsAtDailyLossLimitIsSet) << std::endl;
    std::cout << "	FlattenPositionsAtDailyLossLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, FlattenPositionsAtDailyLossLimit) << std::endl;
    std::cout << "	ClosePositionsAtEndOfDayIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, ClosePositionsAtEndOfDayIsSet) << std::endl;
    std::cout << "	ClosePositionsAtEndOfDay" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, ClosePositionsAtEndOfDay) << std::endl;
    std::cout << "	FlattenPositionsWhenUnderMarginIntradayIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, FlattenPositionsWhenUnderMarginIntradayIsSet) << std::endl;
    std::cout << "	FlattenPositionsWhenUnderMarginIntraday" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, FlattenPositionsWhenUnderMarginIntraday) << std::endl;
    std::cout << "	FlattenPositionsWhenUnderMarginAtEndOfDayIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, FlattenPositionsWhenUnderMarginAtEndOfDayIsSet) << std::endl;
    std::cout << "	FlattenPositionsWhenUnderMarginAtEndOfDay" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, FlattenPositionsWhenUnderMarginAtEndOfDay) << std::endl;
    std::cout << "	SenderSubIDIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, SenderSubIDIsSet) << std::endl;
    std::cout << "	SenderSubID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, SenderSubID) << std::endl;
    std::cout << "	SenderLocationIdIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, SenderLocationIdIsSet) << std::endl;
    std::cout << "	SenderLocationId" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, SenderLocationId) << std::endl;
    std::cout << "	SelfMatchPreventionIDIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, SelfMatchPreventionIDIsSet) << std::endl;
    std::cout << "	SelfMatchPreventionID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, SelfMatchPreventionID) << std::endl;
    std::cout << "	CTICodeIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, CTICodeIsSet) << std::endl;
    std::cout << "	CTICode" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, CTICode) << std::endl;
    std::cout << "	TradeAccountIsReadOnlyIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, TradeAccountIsReadOnlyIsSet) << std::endl;
    std::cout << "	TradeAccountIsReadOnly" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, TradeAccountIsReadOnly) << std::endl;
    std::cout << "	MaximumGlobalPositionQuantityIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, MaximumGlobalPositionQuantityIsSet) << std::endl;
    std::cout << "	MaximumGlobalPositionQuantity" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, MaximumGlobalPositionQuantity) << std::endl;
    std::cout << "	TradeFeePerContractIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, TradeFeePerContractIsSet) << std::endl;
    std::cout << "	TradeFeePerContract" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, TradeFeePerContract) << std::endl;
    std::cout << "	TradeFeePerShareIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, TradeFeePerShareIsSet) << std::endl;
    std::cout << "	TradeFeePerShare" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, TradeFeePerShare) << std::endl;
    std::cout << "	RequireSufficientMarginForNewPositionsIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, RequireSufficientMarginForNewPositionsIsSet) << std::endl;
    std::cout << "	RequireSufficientMarginForNewPositions" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, RequireSufficientMarginForNewPositions) << std::endl;
    std::cout << "	UsePercentOfMarginIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, UsePercentOfMarginIsSet) << std::endl;
    std::cout << "	UsePercentOfMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, UsePercentOfMargin) << std::endl;
    std::cout << "	UsePercentOfMarginForDayTradingIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, UsePercentOfMarginForDayTradingIsSet) << std::endl;
    std::cout << "	UsePercentOfMarginForDayTrading" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, UsePercentOfMarginForDayTrading) << std::endl;
    std::cout << "	MaximumAllowedAccountBalanceForPositionsAsPercentageIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, MaximumAllowedAccountBalanceForPositionsAsPercentageIsSet) << std::endl;
    std::cout << "	MaximumAllowedAccountBalanceForPositionsAsPercentage" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, MaximumAllowedAccountBalanceForPositionsAsPercentage) << std::endl;
    std::cout << "	FirmIDIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, FirmIDIsSet) << std::endl;
    std::cout << "	FirmID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, FirmID) << std::endl;
    std::cout << "	TradingIsDisabledIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, TradingIsDisabledIsSet) << std::endl;
    std::cout << "	TradingIsDisabled" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, TradingIsDisabled) << std::endl;
    std::cout << "	DescriptiveNameIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, DescriptiveNameIsSet) << std::endl;
    std::cout << "	DescriptiveName" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, DescriptiveName) << std::endl;
    std::cout << "	IsMasterFirmControlAccountIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, IsMasterFirmControlAccountIsSet) << std::endl;
    std::cout << "	IsMasterFirmControlAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, IsMasterFirmControlAccount) << std::endl;
    std::cout << "	MinimumRequiredAccountValueIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, MinimumRequiredAccountValueIsSet) << std::endl;
    std::cout << "	MinimumRequiredAccountValue" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, MinimumRequiredAccountValue) << std::endl;
    std::cout << "	BeginTimeForDayMarginIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, BeginTimeForDayMarginIsSet) << std::endl;
    std::cout << "	BeginTimeForDayMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, BeginTimeForDayMargin) << std::endl;
    std::cout << "	EndTimeForDayMarginIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, EndTimeForDayMarginIsSet) << std::endl;
    std::cout << "	EndTimeForDayMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, EndTimeForDayMargin) << std::endl;
    std::cout << "	DayMarginTimeZoneIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, DayMarginTimeZoneIsSet) << std::endl;
    std::cout << "	DayMarginTimeZone" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, DayMarginTimeZone) << std::endl;
    std::cout << "	m_UseMasterFirm_FlattenPositionsWhenUnderMarginIntradayIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_FlattenPositionsWhenUnderMarginIntradayIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_FlattenPositionsWhenUnderMarginIntraday" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_FlattenPositionsWhenUnderMarginIntraday) << std::endl;
    std::cout << "	m_UseMasterFirm_FlattenPositionsWhenUnderMarginAtEndOfDayIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_FlattenPositionsWhenUnderMarginAtEndOfDayIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_FlattenPositionsWhenUnderMarginAtEndOfDay" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_FlattenPositionsWhenUnderMarginAtEndOfDay) << std::endl;
    std::cout << "	m_UseMasterFirm_SymbolLimitsArrayIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_SymbolLimitsArrayIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_SymbolLimitsArray" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_SymbolLimitsArray) << std::endl;
    std::cout << "	m_UseMasterFirm_TradeFeesIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_TradeFeesIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_TradeFees" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_TradeFees) << std::endl;
    std::cout << "	m_UseMasterFirm_TradeFeePerShareIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_TradeFeePerShareIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_TradeFeePerShare" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_TradeFeePerShare) << std::endl;
    std::cout << "	m_UseMasterFirm_RequireSufficientMarginForNewPositionsIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_RequireSufficientMarginForNewPositionsIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_RequireSufficientMarginForNewPositions" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_RequireSufficientMarginForNewPositions) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMarginIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_UsePercentOfMarginIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_UsePercentOfMargin) << std::endl;
    std::cout << "	m_UseMasterFirm_MaximumAllowedAccountBalanceForPositionsAsPercentageIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_MaximumAllowedAccountBalanceForPositionsAsPercentageIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_MaximumAllowedAccountBalanceForPositionsAsPercentage" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_MaximumAllowedAccountBalanceForPositionsAsPercentage) << std::endl;
    std::cout << "	m_UseMasterFirm_MinimumRequiredAccountValueIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_MinimumRequiredAccountValueIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_MinimumRequiredAccountValue" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_MinimumRequiredAccountValue) << std::endl;
    std::cout << "	m_UseMasterFirm_MarginTimeSettingsIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_MarginTimeSettingsIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_MarginTimeSettings" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_MarginTimeSettings) << std::endl;
    std::cout << "	m_UseMasterFirm_TradingIsDisabledIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_TradingIsDisabledIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_TradingIsDisabled" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_TradingIsDisabled) << std::endl;
    std::cout << "	IsTradeStatisticsPublicallySharedIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, IsTradeStatisticsPublicallySharedIsSet) << std::endl;
    std::cout << "	IsTradeStatisticsPublicallyShared" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, IsTradeStatisticsPublicallyShared) << std::endl;
    std::cout << "	IsReadOnlyFollowingRequestsAllowedIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, IsReadOnlyFollowingRequestsAllowedIsSet) << std::endl;
    std::cout << "	IsReadOnlyFollowingRequestsAllowed" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, IsReadOnlyFollowingRequestsAllowed) << std::endl;
    std::cout << "	IsTradeAccountSharingAllowedIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, IsTradeAccountSharingAllowedIsSet) << std::endl;
    std::cout << "	IsTradeAccountSharingAllowed" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, IsTradeAccountSharingAllowed) << std::endl;
    std::cout << "	ReadOnlyShareToAllSCUsernamesIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, ReadOnlyShareToAllSCUsernamesIsSet) << std::endl;
    std::cout << "	ReadOnlyShareToAllSCUsernames" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, ReadOnlyShareToAllSCUsernames) << std::endl;
    std::cout << "	m_UseMasterFirm_SymbolCommissionsArrayIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_SymbolCommissionsArrayIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_SymbolCommissionsArray" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_SymbolCommissionsArray) << std::endl;
    std::cout << "	m_UseMasterFirm_DoNotAllowIncreaseInPositionsAtDailyLossLimitIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_DoNotAllowIncreaseInPositionsAtDailyLossLimitIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_DoNotAllowIncreaseInPositionsAtDailyLossLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_DoNotAllowIncreaseInPositionsAtDailyLossLimit) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMarginForDayTradingIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_UsePercentOfMarginForDayTradingIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMarginForDayTrading" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_UsePercentOfMarginForDayTrading) << std::endl;
    std::cout << "	m_UseMasterFirm_SymbolCommissionsArrayFullOverrideIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_SymbolCommissionsArrayFullOverrideIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_SymbolCommissionsArrayFullOverride" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_SymbolCommissionsArrayFullOverride) << std::endl;
    std::cout << "	m_UseMasterFirm_NumDaysBeforeLastTradingDateToDisallowOrdersIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_NumDaysBeforeLastTradingDateToDisallowOrdersIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_NumDaysBeforeLastTradingDateToDisallowOrders" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_NumDaysBeforeLastTradingDateToDisallowOrders) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMarginFullOverrideIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_UsePercentOfMarginFullOverrideIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMarginFullOverride" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_UsePercentOfMarginFullOverride) << std::endl;
    std::cout << "	m_UseMasterFirm_TradeFeesFullOverrideIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_TradeFeesFullOverrideIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_TradeFeesFullOverride" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_TradeFeesFullOverride) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMarginForDayTradingFullOverrideIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_UsePercentOfMarginForDayTradingFullOverrideIsSet) << std::endl;
    std::cout << "	m_UseMasterFirm_UsePercentOfMarginForDayTradingFullOverride" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_UseMasterFirm_UsePercentOfMarginForDayTradingFullOverride) << std::endl;
    std::cout << "	m_LiquidationOnlyModeIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_LiquidationOnlyModeIsSet) << std::endl;
    std::cout << "	m_LiquidationOnlyMode" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_LiquidationOnlyMode) << std::endl;
    std::cout << "	m_CustomerOrFirmIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_CustomerOrFirmIsSet) << std::endl;
    std::cout << "	m_CustomerOrFirm" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_CustomerOrFirm) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelAccountWhenDailyLossLimitMetIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_MasterFirm_FlattenCancelAccountWhenDailyLossLimitMetIsSet) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelAccountWhenDailyLossLimitMet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_MasterFirm_FlattenCancelAccountWhenDailyLossLimitMet) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelWhenUnderMinimumAccountValueIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_MasterFirm_FlattenCancelWhenUnderMinimumAccountValueIsSet) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelWhenUnderMinimumAccountValue" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_MasterFirm_FlattenCancelWhenUnderMinimumAccountValue) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelWhenUnderMarginIntradayIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_MasterFirm_FlattenCancelWhenUnderMarginIntradayIsSet) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelWhenUnderMarginIntraday" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_MasterFirm_FlattenCancelWhenUnderMarginIntraday) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelWhenUnderMarginEndOfDayIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_MasterFirm_FlattenCancelWhenUnderMarginEndOfDayIsSet) << std::endl;
    std::cout << "	m_MasterFirm_FlattenCancelWhenUnderMarginEndOfDay" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_MasterFirm_FlattenCancelWhenUnderMarginEndOfDay) << std::endl;
    std::cout << "	m_MasterFirm_MaximumOrderQuantityIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_MasterFirm_MaximumOrderQuantityIsSet) << std::endl;
    std::cout << "	m_MasterFirm_MaximumOrderQuantity" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_MasterFirm_MaximumOrderQuantity) << std::endl;
    std::cout << "	m_ExchangeTraderIdIsSet" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_ExchangeTraderIdIsSet) << std::endl;
    std::cout << "	m_ExchangeTraderId" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdate, m_ExchangeTraderId) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataDelete" << " = " << sizeof(DTC_VLS::s_TradeAccountDataDelete) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataDelete, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataDelete, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataDelete, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataDelete, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataDelete, TradeAccount) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataSymbolLimitsResponse" << " = " << sizeof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, TradeAccount) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, Symbol) << std::endl;
    std::cout << "	TradePositionLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, TradePositionLimit) << std::endl;
    std::cout << "	OrderQuantityLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, OrderQuantityLimit) << std::endl;
    std::cout << "	UsePercentOfMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, UsePercentOfMargin) << std::endl;
    std::cout << "	OverrideMarginOtherAccounts" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, OverrideMarginOtherAccounts) << std::endl;
    std::cout << "	UsePercentOfMarginForDayTrading" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, UsePercentOfMarginForDayTrading) << std::endl;
    std::cout << "	NumberOfDaysBeforeLastTradingDateToDisallowOrders" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsResponse, NumberOfDaysBeforeLastTradingDateToDisallowOrders) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate" << " = " << sizeof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, RequestID) << std::endl;
    std::cout << "	IsDeleted" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, IsDeleted) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, TradeAccount) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, Symbol) << std::endl;
    std::cout << "	TradePositionLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, TradePositionLimit) << std::endl;
    std::cout << "	OrderQuantityLimit" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, OrderQuantityLimit) << std::endl;
    std::cout << "	UsePercentOfMargin" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, UsePercentOfMargin) << std::endl;
    std::cout << "	OverrideMarginOtherAccounts" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, OverrideMarginOtherAccounts) << std::endl;
    std::cout << "	UsePercentOfMarginForDayTrading" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, UsePercentOfMarginForDayTrading) << std::endl;
    std::cout << "	NumberOfDaysBeforeLastTradingDateToDisallowOrders" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolLimitsUpdate, NumberOfDaysBeforeLastTradingDateToDisallowOrders) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataSymbolCommissionResponse" << " = " << sizeof(DTC_VLS::s_TradeAccountDataSymbolCommissionResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionResponse, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionResponse, TradeAccount) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionResponse, Symbol) << std::endl;
    std::cout << "	TradeFeePerContract" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionResponse, TradeFeePerContract) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataSymbolCommissionUpdate" << " = " << sizeof(DTC_VLS::s_TradeAccountDataSymbolCommissionUpdate) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionUpdate, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionUpdate, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionUpdate, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionUpdate, RequestID) << std::endl;
    std::cout << "	IsDeleted" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionUpdate, IsDeleted) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionUpdate, TradeAccount) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionUpdate, Symbol) << std::endl;
    std::cout << "	TradeFeePerContract" << " = " << offsetof(DTC_VLS::s_TradeAccountDataSymbolCommissionUpdate, TradeFeePerContract) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse" << " = " << sizeof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse, TradeAccount) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse, Username) << std::endl;
    std::cout << "	UpdateOperationComplete" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse, UpdateOperationComplete) << std::endl;
    std::cout << "	UpdateOperationMessageType" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse, UpdateOperationMessageType) << std::endl;
    std::cout << "	UpdateOperationErrorText" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameResponse, UpdateOperationErrorText) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataAuthorizedUsernameAdd" << " = " << sizeof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameAdd) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameAdd, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameAdd, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameAdd, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameAdd, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameAdd, TradeAccount) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameAdd, Username) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataAuthorizedUsernameRemove" << " = " << sizeof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameRemove) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameRemove, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameRemove, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameRemove, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameRemove, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameRemove, TradeAccount) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC_VLS::s_TradeAccountDataAuthorizedUsernameRemove, Username) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse" << " = " << sizeof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse, TradeAccount) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse, Username) << std::endl;
    std::cout << "	IsReadOnly" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse, IsReadOnly) << std::endl;
    std::cout << "	UpdateOperationComplete" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse, UpdateOperationComplete) << std::endl;
    std::cout << "	UpdateOperationMessageType" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse, UpdateOperationMessageType) << std::endl;
    std::cout << "	UpdateOperationErrorText" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithResponse, UpdateOperationErrorText) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataUsernameToShareWithAdd" << " = " << sizeof(DTC_VLS::s_TradeAccountDataUsernameToShareWithAdd) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithAdd, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithAdd, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithAdd, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithAdd, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithAdd, TradeAccount) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithAdd, Username) << std::endl;
    std::cout << "	IsReadOnly" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithAdd, IsReadOnly) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataUsernameToShareWithRemove" << " = " << sizeof(DTC_VLS::s_TradeAccountDataUsernameToShareWithRemove) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithRemove, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithRemove, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithRemove, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithRemove, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithRemove, TradeAccount) << std::endl;
    std::cout << "	Username" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithRemove, Username) << std::endl;
    std::cout << "	IsReadOnly" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUsernameToShareWithRemove, IsReadOnly) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataResponseTrailer" << " = " << sizeof(DTC_VLS::s_TradeAccountDataResponseTrailer) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponseTrailer, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponseTrailer, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponseTrailer, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponseTrailer, RequestID) << std::endl;
    std::cout << "	m_IsSnapshot" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponseTrailer, m_IsSnapshot) << std::endl;
    std::cout << "	m_IsFirstMessageInBatch" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponseTrailer, m_IsFirstMessageInBatch) << std::endl;
    std::cout << "	m_IsLastMessageInBatch" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponseTrailer, m_IsLastMessageInBatch) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataResponseTrailer, TradeAccount) << std::endl;
    std::cout << "DTC_VLS::s_TradeAccountDataUpdateOperationComplete" << " = " << sizeof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete, RequestID) << std::endl;
    std::cout << "	IsError" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete, IsError) << std::endl;
    std::cout << "	ErrorText" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete, ErrorText) << std::endl;
    std::cout << "	IsDeleteOperation" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete, IsDeleteOperation) << std::endl;
    std::cout << "	IsSymbolLimitsUpdateOperation" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete, IsSymbolLimitsUpdateOperation) << std::endl;
    std::cout << "	IsSymbolCommissionUpdateOperation" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete, IsSymbolCommissionUpdateOperation) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_TradeAccountDataUpdateOperationComplete, TradeAccount) << std::endl;
    std::cout << "DTC_VLS::s_ProcessedFillIdentifier" << " = " << sizeof(DTC_VLS::s_ProcessedFillIdentifier) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_ProcessedFillIdentifier, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_ProcessedFillIdentifier, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_ProcessedFillIdentifier, BaseSize) << std::endl;
    std::cout << "	FillIdentifier" << " = " << offsetof(DTC_VLS::s_ProcessedFillIdentifier, FillIdentifier) << std::endl;
    std::cout << "	IsSnapshot" << " = " << offsetof(DTC_VLS::s_ProcessedFillIdentifier, IsSnapshot) << std::endl;
    std::cout << "	IsFirstMessageInBatch" << " = " << offsetof(DTC_VLS::s_ProcessedFillIdentifier, IsFirstMessageInBatch) << std::endl;
    std::cout << "	IsLastMessageInBatch" << " = " << offsetof(DTC_VLS::s_ProcessedFillIdentifier, IsLastMessageInBatch) << std::endl;
    std::cout << "DTC_VLS::s_FlattenPositionsForTradeAccount" << " = " << sizeof(DTC_VLS::s_FlattenPositionsForTradeAccount) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_FlattenPositionsForTradeAccount, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_FlattenPositionsForTradeAccount, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_FlattenPositionsForTradeAccount, BaseSize) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_FlattenPositionsForTradeAccount, TradeAccount) << std::endl;
    std::cout << "	ClientOrderID" << " = " << offsetof(DTC_VLS::s_FlattenPositionsForTradeAccount, ClientOrderID) << std::endl;
    std::cout << "	FreeFormText" << " = " << offsetof(DTC_VLS::s_FlattenPositionsForTradeAccount, FreeFormText) << std::endl;
    std::cout << "	IsAutomatedOrder" << " = " << offsetof(DTC_VLS::s_FlattenPositionsForTradeAccount, IsAutomatedOrder) << std::endl;
    std::cout << "DTC_VLS::s_UserInformation" << " = " << sizeof(DTC_VLS::s_UserInformation) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_UserInformation, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_UserInformation, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_UserInformation, BaseSize) << std::endl;
    std::cout << "	OperatorID" << " = " << offsetof(DTC_VLS::s_UserInformation, OperatorID) << std::endl;
    std::cout << "	LocationID" << " = " << offsetof(DTC_VLS::s_UserInformation, LocationID) << std::endl;
    std::cout << "DTC_VLS::s_MarginDataRequest" << " = " << sizeof(DTC_VLS::s_MarginDataRequest) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_MarginDataRequest, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_MarginDataRequest, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_MarginDataRequest, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_MarginDataRequest, RequestID) << std::endl;
    std::cout << "	TradeAccount" << " = " << offsetof(DTC_VLS::s_MarginDataRequest, TradeAccount) << std::endl;
    std::cout << "	Symbol" << " = " << offsetof(DTC_VLS::s_MarginDataRequest, Symbol) << std::endl;
    std::cout << "DTC_VLS::s_MarginDataResponse" << " = " << sizeof(DTC_VLS::s_MarginDataResponse) << std::endl;
    std::cout << "	Size" << " = " << offsetof(DTC_VLS::s_MarginDataResponse, Size) << std::endl;
    std::cout << "	Type" << " = " << offsetof(DTC_VLS::s_MarginDataResponse, Type) << std::endl;
    std::cout << "	BaseSize" << " = " << offsetof(DTC_VLS::s_MarginDataResponse, BaseSize) << std::endl;
    std::cout << "	RequestID" << " = " << offsetof(DTC_VLS::s_MarginDataResponse, RequestID) << std::endl;
    std::cout << "	ErrorText" << " = " << offsetof(DTC_VLS::s_MarginDataResponse, ErrorText) << std::endl;
    std::cout << "	InitialExchangeMargin" << " = " << offsetof(DTC_VLS::s_MarginDataResponse, InitialExchangeMargin) << std::endl;
    std::cout << "	MaintenanceExchangeMargin" << " = " << offsetof(DTC_VLS::s_MarginDataResponse, MaintenanceExchangeMargin) << std::endl;
    std::cout << "	InitialAccountMargin" << " = " << offsetof(DTC_VLS::s_MarginDataResponse, InitialAccountMargin) << std::endl;
    std::cout << "	MaintenanceAccountMargin" << " = " << offsetof(DTC_VLS::s_MarginDataResponse, MaintenanceAccountMargin) << std::endl;
    return 0;
}

